{
  "basePath": "/",
  "externalDocs": {
    "description": "Find out more info at the Cloudsmith Help Website",
    "url": "https://help.cloudsmith.io"
  },
  "host": "api.cloudsmith.io",
  "info": {
    "contact": {
      "email": "support@cloudsmith.io",
      "name": "Cloudsmith Support",
      "url": "https://help.cloudsmith.io"
    },
    "description": "The API to the Cloudsmith Service",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "termsOfService": "https://help.cloudsmith.io/docs/terms-and-conditions",
    "title": "Cloudsmith API",
    "version": "v1"
  },
  "paths": {
    "/badges/version/{owner}/{repo}/{package_format}/{package_name}/{package_version}/{package_identifiers}/": {
      "get": {
        "description": "Get latest package version for a package or package group.",
        "operationId": "badges_version_list",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "package_format",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "package_name",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "package_version",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "package_identifiers",
            "required": true,
            "type": "string"
          },
          {
            "description": "Badge token to authenticate for private packages",
            "in": "query",
            "name": "badge_token",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, badge will be rendered",
            "in": "query",
            "name": "render",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get latest package version for a package or package group.",
        "tags": [
          "badges"
        ]
      }
    },
    "/distros/": {
      "get": {
        "description": "Get a list of all supported distributions.",
        "operationId": "distros_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Available package formats retrieved",
            "schema": {
              "items": {
                "properties": {
                  "format": {
                    "description": "",
                    "type": "string"
                  },
                  "format_url": {
                    "description": "",
                    "type": "string"
                  },
                  "name": {
                    "description": "",
                    "type": "string"
                  },
                  "self_url": {
                    "description": "",
                    "type": "string"
                  },
                  "slug": {
                    "description": "The slug identifier for this distribution",
                    "type": "string"
                  },
                  "variants": {
                    "description": "",
                    "type": "string"
                  },
                  "versions": {
                    "description": "A list of the versions for this distribution",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "The textual name for this version.",
                          "type": "string"
                        },
                        "slug": {
                          "description": "The slug identifier for this version",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "VersionsList",
                    "type": "array"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "Distribution",
                "type": "object"
              },
              "title": "DistributionList",
              "type": "array"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a list of all supported distributions.",
        "tags": [
          "distros"
        ]
      }
    },
    "/distros/{slug}/": {
      "get": {
        "description": "View for viewing/listing distributions.",
        "operationId": "distros_read",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "slug": {
                  "description": "The slug identifier for this distribution",
                  "type": "string"
                },
                "variants": {
                  "description": "",
                  "type": "string"
                },
                "versions": {
                  "description": "A list of the versions for this distribution",
                  "items": {
                    "properties": {
                      "name": {
                        "description": "The textual name for this version.",
                        "type": "string"
                      },
                      "slug": {
                        "description": "The slug identifier for this version",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "VersionsList",
                  "type": "array"
                }
              },
              "required": [
                "name"
              ],
              "title": "Distribution",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "View for viewing/listing distributions.",
        "tags": [
          "distros"
        ]
      }
    },
    "/entitlements/{owner}/{repo}/": {
      "get": {
        "description": "Get a list of all entitlements in a repository.",
        "operationId": "entitlements_list",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Show entitlement token strings in results",
            "in": "query",
            "name": "show_tokens",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the list of entitlement tokens",
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "description": "The datetime the token was updated at.",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "",
                    "type": "string"
                  },
                  "created_by_url": {
                    "description": "",
                    "type": "string"
                  },
                  "default": {
                    "description": "If selected this is the default token for this repository.",
                    "type": "boolean"
                  },
                  "has_limits": {
                    "description": "",
                    "type": "boolean"
                  },
                  "identifier": {
                    "description": "",
                    "type": "integer"
                  },
                  "is_active": {
                    "description": "If enabled, the token will allow downloads based on configured restrictions (if any).",
                    "type": "boolean"
                  },
                  "is_limited": {
                    "description": "",
                    "type": "boolean"
                  },
                  "limit_date_range_from": {
                    "description": "The starting date/time the token is allowed to be used from.",
                    "type": "string"
                  },
                  "limit_date_range_to": {
                    "description": "The ending date/time the token is allowed to be used until.",
                    "type": "string"
                  },
                  "limit_num_clients": {
                    "description": "The maximum number of unique clients allowed for the token. Please note that since clients are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                    "type": "integer"
                  },
                  "limit_num_downloads": {
                    "description": "The maximum number of downloads allowed for the token. Please note that since downloads are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                    "type": "integer"
                  },
                  "limit_package_query": {
                    "description": "The package-based search query to apply to restrict downloads to. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. This will still allow access to non-package files, such as metadata. For package formats that support dynamic metadata indexes, the contents of the metadata will also be filtered.",
                    "type": "string"
                  },
                  "limit_path_query": {
                    "description": "The path-based search query to apply to restrict downloads to. This supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. The path evaluated does not include the domain name, the namespace, the entitlement code used, the package format, etc. and it always starts with a forward slash.",
                    "type": "string"
                  },
                  "metadata": {
                    "description": "",
                    "type": "object"
                  },
                  "name": {
                    "description": "",
                    "type": "string"
                  },
                  "refresh_url": {
                    "description": "",
                    "type": "string"
                  },
                  "self_url": {
                    "description": "",
                    "type": "string"
                  },
                  "slug_perm": {
                    "description": "",
                    "type": "string"
                  },
                  "token": {
                    "description": "",
                    "type": "string"
                  },
                  "updated_at": {
                    "description": "The datetime the token was updated at.",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "",
                    "type": "string"
                  },
                  "updated_by_url": {
                    "description": "",
                    "type": "string"
                  },
                  "user": {
                    "description": "",
                    "type": "string"
                  },
                  "user_url": {
                    "description": "",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "RepositoryToken",
                "type": "object"
              },
              "title": "RepositoryTokenList",
              "type": "array"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a list of all entitlements in a repository.",
        "tags": [
          "entitlements"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a specific entitlement in a repository.",
        "operationId": "entitlements_create",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "Show entitlement token strings in results",
            "in": "query",
            "name": "show_tokens",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "is_active": {
                  "description": "If enabled, the token will allow downloads based on configured restrictions (if any).",
                  "type": "boolean"
                },
                "limit_date_range_from": {
                  "description": "The starting date/time the token is allowed to be used from.",
                  "type": "string"
                },
                "limit_date_range_to": {
                  "description": "The ending date/time the token is allowed to be used until.",
                  "type": "string"
                },
                "limit_num_clients": {
                  "description": "The maximum number of unique clients allowed for the token. Please note that since clients are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_num_downloads": {
                  "description": "The maximum number of downloads allowed for the token. Please note that since downloads are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_package_query": {
                  "description": "The package-based search query to apply to restrict downloads to. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. This will still allow access to non-package files, such as metadata. For package formats that support dynamic metadata indexes, the contents of the metadata will also be filtered.",
                  "type": "string"
                },
                "limit_path_query": {
                  "description": "The path-based search query to apply to restrict downloads to. This supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. The path evaluated does not include the domain name, the namespace, the entitlement code used, the package format, etc. and it always starts with a forward slash.",
                  "type": "string"
                },
                "metadata": {
                  "description": "None",
                  "type": "object"
                },
                "name": {
                  "description": "None",
                  "type": "string"
                },
                "token": {
                  "description": "None",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "EntitlementsCreate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created the specified entitlement",
            "schema": {
              "properties": {
                "created_at": {
                  "description": "The datetime the token was updated at.",
                  "type": "string"
                },
                "created_by": {
                  "description": "",
                  "type": "string"
                },
                "created_by_url": {
                  "description": "",
                  "type": "string"
                },
                "default": {
                  "description": "If selected this is the default token for this repository.",
                  "type": "boolean"
                },
                "has_limits": {
                  "description": "",
                  "type": "boolean"
                },
                "identifier": {
                  "description": "",
                  "type": "integer"
                },
                "is_active": {
                  "description": "If enabled, the token will allow downloads based on configured restrictions (if any).",
                  "type": "boolean"
                },
                "is_limited": {
                  "description": "",
                  "type": "boolean"
                },
                "limit_date_range_from": {
                  "description": "The starting date/time the token is allowed to be used from.",
                  "type": "string"
                },
                "limit_date_range_to": {
                  "description": "The ending date/time the token is allowed to be used until.",
                  "type": "string"
                },
                "limit_num_clients": {
                  "description": "The maximum number of unique clients allowed for the token. Please note that since clients are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_num_downloads": {
                  "description": "The maximum number of downloads allowed for the token. Please note that since downloads are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_package_query": {
                  "description": "The package-based search query to apply to restrict downloads to. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. This will still allow access to non-package files, such as metadata. For package formats that support dynamic metadata indexes, the contents of the metadata will also be filtered.",
                  "type": "string"
                },
                "limit_path_query": {
                  "description": "The path-based search query to apply to restrict downloads to. This supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. The path evaluated does not include the domain name, the namespace, the entitlement code used, the package format, etc. and it always starts with a forward slash.",
                  "type": "string"
                },
                "metadata": {
                  "description": "",
                  "type": "object"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "refresh_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "token": {
                  "description": "",
                  "type": "string"
                },
                "updated_at": {
                  "description": "The datetime the token was updated at.",
                  "type": "string"
                },
                "updated_by": {
                  "description": "",
                  "type": "string"
                },
                "updated_by_url": {
                  "description": "",
                  "type": "string"
                },
                "user": {
                  "description": "",
                  "type": "string"
                },
                "user_url": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "RepositoryToken",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a specific entitlement in a repository.",
        "tags": [
          "entitlements"
        ]
      }
    },
    "/entitlements/{owner}/{repo}/sync/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Synchronise tokens from a source repository.",
        "operationId": "entitlements_sync",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "Show entitlement token strings in results",
            "in": "query",
            "name": "show_tokens",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "source": {
                  "description": "The source repository slug (in the same owner namespace).",
                  "type": "string"
                }
              },
              "required": [
                "source"
              ],
              "title": "EntitlementsSync",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tokens have been synchronised from the source repository",
            "schema": {
              "properties": {
                "tokens": {
                  "description": "The entitlements that have been synchronised.",
                  "items": {
                    "properties": {
                      "created_at": {
                        "description": "The datetime the token was updated at.",
                        "type": "string"
                      },
                      "created_by": {
                        "description": "",
                        "type": "string"
                      },
                      "created_by_url": {
                        "description": "",
                        "type": "string"
                      },
                      "default": {
                        "description": "If selected this is the default token for this repository.",
                        "type": "boolean"
                      },
                      "has_limits": {
                        "description": "",
                        "type": "boolean"
                      },
                      "identifier": {
                        "description": "",
                        "type": "integer"
                      },
                      "is_active": {
                        "description": "If enabled, the token will allow downloads based on configured restrictions (if any).",
                        "type": "boolean"
                      },
                      "is_limited": {
                        "description": "",
                        "type": "boolean"
                      },
                      "limit_date_range_from": {
                        "description": "The starting date/time the token is allowed to be used from.",
                        "type": "string"
                      },
                      "limit_date_range_to": {
                        "description": "The ending date/time the token is allowed to be used until.",
                        "type": "string"
                      },
                      "limit_num_clients": {
                        "description": "The maximum number of unique clients allowed for the token. Please note that since clients are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                        "type": "integer"
                      },
                      "limit_num_downloads": {
                        "description": "The maximum number of downloads allowed for the token. Please note that since downloads are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                        "type": "integer"
                      },
                      "limit_package_query": {
                        "description": "The package-based search query to apply to restrict downloads to. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. This will still allow access to non-package files, such as metadata. For package formats that support dynamic metadata indexes, the contents of the metadata will also be filtered.",
                        "type": "string"
                      },
                      "limit_path_query": {
                        "description": "The path-based search query to apply to restrict downloads to. This supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. The path evaluated does not include the domain name, the namespace, the entitlement code used, the package format, etc. and it always starts with a forward slash.",
                        "type": "string"
                      },
                      "metadata": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      },
                      "refresh_url": {
                        "description": "",
                        "type": "string"
                      },
                      "self_url": {
                        "description": "",
                        "type": "string"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "token": {
                        "description": "",
                        "type": "string"
                      },
                      "updated_at": {
                        "description": "The datetime the token was updated at.",
                        "type": "string"
                      },
                      "updated_by": {
                        "description": "",
                        "type": "string"
                      },
                      "updated_by_url": {
                        "description": "",
                        "type": "string"
                      },
                      "user": {
                        "description": "",
                        "type": "string"
                      },
                      "user_url": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "TokensList",
                  "type": "array"
                }
              },
              "title": "RepositoryTokenSync",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Synchronise tokens from a source repository.",
        "tags": [
          "entitlements"
        ]
      }
    },
    "/entitlements/{owner}/{repo}/{identifier}/": {
      "delete": {
        "description": "Delete a specific entitlement in a repository.",
        "operationId": "entitlements_delete",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Soft-deleted the specified entitlement token successfully"
          },
          "400": {
            "description": "The entitlement cannot be deleted",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Delete a specific entitlement in a repository.",
        "tags": [
          "entitlements"
        ]
      },
      "get": {
        "description": "Get a specific entitlement in a repository.",
        "operationId": "entitlements_read",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "Show entitlement token strings in results",
            "in": "query",
            "name": "show_tokens",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the specified entitlement",
            "schema": {
              "properties": {
                "created_at": {
                  "description": "The datetime the token was updated at.",
                  "type": "string"
                },
                "created_by": {
                  "description": "",
                  "type": "string"
                },
                "created_by_url": {
                  "description": "",
                  "type": "string"
                },
                "default": {
                  "description": "If selected this is the default token for this repository.",
                  "type": "boolean"
                },
                "has_limits": {
                  "description": "",
                  "type": "boolean"
                },
                "identifier": {
                  "description": "",
                  "type": "integer"
                },
                "is_active": {
                  "description": "If enabled, the token will allow downloads based on configured restrictions (if any).",
                  "type": "boolean"
                },
                "is_limited": {
                  "description": "",
                  "type": "boolean"
                },
                "limit_date_range_from": {
                  "description": "The starting date/time the token is allowed to be used from.",
                  "type": "string"
                },
                "limit_date_range_to": {
                  "description": "The ending date/time the token is allowed to be used until.",
                  "type": "string"
                },
                "limit_num_clients": {
                  "description": "The maximum number of unique clients allowed for the token. Please note that since clients are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_num_downloads": {
                  "description": "The maximum number of downloads allowed for the token. Please note that since downloads are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_package_query": {
                  "description": "The package-based search query to apply to restrict downloads to. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. This will still allow access to non-package files, such as metadata. For package formats that support dynamic metadata indexes, the contents of the metadata will also be filtered.",
                  "type": "string"
                },
                "limit_path_query": {
                  "description": "The path-based search query to apply to restrict downloads to. This supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. The path evaluated does not include the domain name, the namespace, the entitlement code used, the package format, etc. and it always starts with a forward slash.",
                  "type": "string"
                },
                "metadata": {
                  "description": "",
                  "type": "object"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "refresh_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "token": {
                  "description": "",
                  "type": "string"
                },
                "updated_at": {
                  "description": "The datetime the token was updated at.",
                  "type": "string"
                },
                "updated_by": {
                  "description": "",
                  "type": "string"
                },
                "updated_by_url": {
                  "description": "",
                  "type": "string"
                },
                "user": {
                  "description": "",
                  "type": "string"
                },
                "user_url": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "RepositoryToken",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a specific entitlement in a repository.",
        "tags": [
          "entitlements"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a specific entitlement in a repository.",
        "operationId": "entitlements_partial_update",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "Show entitlement token strings in results",
            "in": "query",
            "name": "show_tokens",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "is_active": {
                  "description": "If enabled, the token will allow downloads based on configured restrictions (if any).",
                  "type": "boolean"
                },
                "limit_date_range_from": {
                  "description": "The starting date/time the token is allowed to be used from.",
                  "type": "string"
                },
                "limit_date_range_to": {
                  "description": "The ending date/time the token is allowed to be used until.",
                  "type": "string"
                },
                "limit_num_clients": {
                  "description": "The maximum number of unique clients allowed for the token. Please note that since clients are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_num_downloads": {
                  "description": "The maximum number of downloads allowed for the token. Please note that since downloads are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_package_query": {
                  "description": "The package-based search query to apply to restrict downloads to. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. This will still allow access to non-package files, such as metadata. For package formats that support dynamic metadata indexes, the contents of the metadata will also be filtered.",
                  "type": "string"
                },
                "limit_path_query": {
                  "description": "The path-based search query to apply to restrict downloads to. This supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. The path evaluated does not include the domain name, the namespace, the entitlement code used, the package format, etc. and it always starts with a forward slash.",
                  "type": "string"
                },
                "metadata": {
                  "description": "None",
                  "type": "object"
                },
                "name": {
                  "description": "None",
                  "type": "string"
                },
                "token": {
                  "description": "None",
                  "type": "string"
                }
              },
              "title": "EntitlementsPartialUpdate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the specified entitlement",
            "schema": {
              "properties": {
                "created_at": {
                  "description": "The datetime the token was updated at.",
                  "type": "string"
                },
                "created_by": {
                  "description": "",
                  "type": "string"
                },
                "created_by_url": {
                  "description": "",
                  "type": "string"
                },
                "default": {
                  "description": "If selected this is the default token for this repository.",
                  "type": "boolean"
                },
                "has_limits": {
                  "description": "",
                  "type": "boolean"
                },
                "identifier": {
                  "description": "",
                  "type": "integer"
                },
                "is_active": {
                  "description": "If enabled, the token will allow downloads based on configured restrictions (if any).",
                  "type": "boolean"
                },
                "is_limited": {
                  "description": "",
                  "type": "boolean"
                },
                "limit_date_range_from": {
                  "description": "The starting date/time the token is allowed to be used from.",
                  "type": "string"
                },
                "limit_date_range_to": {
                  "description": "The ending date/time the token is allowed to be used until.",
                  "type": "string"
                },
                "limit_num_clients": {
                  "description": "The maximum number of unique clients allowed for the token. Please note that since clients are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_num_downloads": {
                  "description": "The maximum number of downloads allowed for the token. Please note that since downloads are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_package_query": {
                  "description": "The package-based search query to apply to restrict downloads to. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. This will still allow access to non-package files, such as metadata. For package formats that support dynamic metadata indexes, the contents of the metadata will also be filtered.",
                  "type": "string"
                },
                "limit_path_query": {
                  "description": "The path-based search query to apply to restrict downloads to. This supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. The path evaluated does not include the domain name, the namespace, the entitlement code used, the package format, etc. and it always starts with a forward slash.",
                  "type": "string"
                },
                "metadata": {
                  "description": "",
                  "type": "object"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "refresh_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "token": {
                  "description": "",
                  "type": "string"
                },
                "updated_at": {
                  "description": "The datetime the token was updated at.",
                  "type": "string"
                },
                "updated_by": {
                  "description": "",
                  "type": "string"
                },
                "updated_by_url": {
                  "description": "",
                  "type": "string"
                },
                "user": {
                  "description": "",
                  "type": "string"
                },
                "user_url": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "RepositoryToken",
              "type": "object"
            }
          },
          "400": {
            "description": "The entitlement cannot be edited",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Update a specific entitlement in a repository.",
        "tags": [
          "entitlements"
        ]
      }
    },
    "/entitlements/{owner}/{repo}/{identifier}/disable/": {
      "post": {
        "description": "Disable an entitlement token in a repository.",
        "operationId": "entitlements_disable",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The entitlement token has been disabled"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Disable an entitlement token in a repository.",
        "tags": [
          "entitlements"
        ]
      }
    },
    "/entitlements/{owner}/{repo}/{identifier}/enable/": {
      "post": {
        "description": "Enable an entitlement token in a repository.",
        "operationId": "entitlements_enable",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The entitlement token has been enabled"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Enable an entitlement token in a repository.",
        "tags": [
          "entitlements"
        ]
      }
    },
    "/entitlements/{owner}/{repo}/{identifier}/refresh/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Refresh an entitlement token in a repository.",
        "operationId": "entitlements_refresh",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "Show entitlement token strings in results",
            "in": "query",
            "name": "show_tokens",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "is_active": {
                  "description": "If enabled, the token will allow downloads based on configured restrictions (if any).",
                  "type": "boolean"
                },
                "limit_date_range_from": {
                  "description": "The starting date/time the token is allowed to be used from.",
                  "type": "string"
                },
                "limit_date_range_to": {
                  "description": "The ending date/time the token is allowed to be used until.",
                  "type": "string"
                },
                "limit_num_clients": {
                  "description": "The maximum number of unique clients allowed for the token. Please note that since clients are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_num_downloads": {
                  "description": "The maximum number of downloads allowed for the token. Please note that since downloads are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_package_query": {
                  "description": "The package-based search query to apply to restrict downloads to. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. This will still allow access to non-package files, such as metadata. For package formats that support dynamic metadata indexes, the contents of the metadata will also be filtered.",
                  "type": "string"
                },
                "limit_path_query": {
                  "description": "The path-based search query to apply to restrict downloads to. This supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. The path evaluated does not include the domain name, the namespace, the entitlement code used, the package format, etc. and it always starts with a forward slash.",
                  "type": "string"
                },
                "metadata": {
                  "description": "None",
                  "type": "object"
                },
                "token": {
                  "description": "None",
                  "type": "string"
                }
              },
              "title": "EntitlementsRefresh",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The entitlement token has been refreshed",
            "schema": {
              "properties": {
                "created_at": {
                  "description": "The datetime the token was updated at.",
                  "type": "string"
                },
                "created_by": {
                  "description": "",
                  "type": "string"
                },
                "created_by_url": {
                  "description": "",
                  "type": "string"
                },
                "default": {
                  "description": "If selected this is the default token for this repository.",
                  "type": "boolean"
                },
                "has_limits": {
                  "description": "",
                  "type": "boolean"
                },
                "identifier": {
                  "description": "",
                  "type": "integer"
                },
                "is_active": {
                  "description": "If enabled, the token will allow downloads based on configured restrictions (if any).",
                  "type": "boolean"
                },
                "is_limited": {
                  "description": "",
                  "type": "boolean"
                },
                "limit_date_range_from": {
                  "description": "The starting date/time the token is allowed to be used from.",
                  "type": "string"
                },
                "limit_date_range_to": {
                  "description": "The ending date/time the token is allowed to be used until.",
                  "type": "string"
                },
                "limit_num_clients": {
                  "description": "The maximum number of unique clients allowed for the token. Please note that since clients are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_num_downloads": {
                  "description": "The maximum number of downloads allowed for the token. Please note that since downloads are calculated asynchronously (after the download happens), the limit may not be imposed immediately but at a later point.",
                  "type": "integer"
                },
                "limit_package_query": {
                  "description": "The package-based search query to apply to restrict downloads to. This uses the same syntax as the standard search used for repositories, and also supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. This will still allow access to non-package files, such as metadata. For package formats that support dynamic metadata indexes, the contents of the metadata will also be filtered.",
                  "type": "string"
                },
                "limit_path_query": {
                  "description": "The path-based search query to apply to restrict downloads to. This supports boolean logic operators such as OR/AND/NOT and parentheses for grouping. The path evaluated does not include the domain name, the namespace, the entitlement code used, the package format, etc. and it always starts with a forward slash.",
                  "type": "string"
                },
                "metadata": {
                  "description": "",
                  "type": "object"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "refresh_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "token": {
                  "description": "",
                  "type": "string"
                },
                "updated_at": {
                  "description": "The datetime the token was updated at.",
                  "type": "string"
                },
                "updated_by": {
                  "description": "",
                  "type": "string"
                },
                "updated_by_url": {
                  "description": "",
                  "type": "string"
                },
                "user": {
                  "description": "",
                  "type": "string"
                },
                "user_url": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "RepositoryTokenRefresh",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Refresh an entitlement token in a repository.",
        "tags": [
          "entitlements"
        ]
      }
    },
    "/entitlements/{owner}/{repo}/{identifier}/reset/": {
      "post": {
        "description": "Reset the statistics for an entitlement token in a repository.",
        "operationId": "entitlements_reset",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The entitlement token statistics have been reset"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Reset the statistics for an entitlement token in a repository.",
        "tags": [
          "entitlements"
        ]
      }
    },
    "/files/{owner}/{repo}/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Request URL(s) to upload new package file upload(s) to.",
        "operationId": "files_create",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "filename": {
                  "description": "Filename for the package file upload.",
                  "type": "string"
                },
                "md5_checksum": {
                  "description": "MD5 checksum for a POST-based package file upload.",
                  "type": "string"
                },
                "method": {
                  "description": "The method to use for package file upload.",
                  "type": "string"
                },
                "sha256_checksum": {
                  "description": "SHA256 checksum for a PUT-based package file upload.",
                  "type": "string"
                }
              },
              "required": [
                "filename"
              ],
              "title": "FilesCreate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The upload request was accepted",
            "schema": {
              "properties": {
                "identifier": {
                  "description": "The identifier for the file to use when creating packages",
                  "type": "string"
                },
                "upload_fields": {
                  "description": "The dictionary of fields that must be sent with POST uploads",
                  "type": "object"
                },
                "upload_headers": {
                  "description": "The dictionary of headers that must be sent with uploads",
                  "type": "object"
                },
                "upload_querystring": {
                  "description": "The querystring to use for the next-step POST or PUT upload",
                  "type": "string"
                },
                "upload_url": {
                  "description": "The URL to use for the next-step POST or PUT upload",
                  "type": "string"
                }
              },
              "title": "PackageFileUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Request URL(s) to upload new package file upload(s) to.",
        "tags": [
          "files"
        ]
      }
    },
    "/files/{owner}/{repo}/validate/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters used for create.",
        "operationId": "files_validate",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "filename": {
                  "description": "Filename for the package file upload.",
                  "type": "string"
                },
                "md5_checksum": {
                  "description": "MD5 checksum for a POST-based package file upload.",
                  "type": "string"
                },
                "method": {
                  "description": "The method to use for package file upload.",
                  "type": "string"
                },
                "sha256_checksum": {
                  "description": "SHA256 checksum for a PUT-based package file upload.",
                  "type": "string"
                }
              },
              "required": [
                "filename"
              ],
              "title": "FilesValidate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters used for create.",
        "tags": [
          "files"
        ]
      }
    },
    "/files/{owner}/{repo}/{identifier}/abort/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Abort a multipart file upload.",
        "operationId": "files_abort",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "filename": {
                  "description": "Filename for the package file upload.",
                  "type": "string"
                },
                "md5_checksum": {
                  "description": "MD5 checksum for a POST-based package file upload.",
                  "type": "string"
                },
                "method": {
                  "description": "The method to use for package file upload.",
                  "type": "string"
                },
                "sha256_checksum": {
                  "description": "SHA256 checksum for a PUT-based package file upload.",
                  "type": "string"
                }
              },
              "required": [
                "filename"
              ],
              "title": "FilesAbort",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The multipart upload was aborted successfully"
          },
          "400": {
            "description": "The multipart upload could not be aborted",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner), repository or upload file not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Abort a multipart file upload.",
        "tags": [
          "files"
        ]
      }
    },
    "/files/{owner}/{repo}/{identifier}/complete/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Complete a multipart file upload.",
        "operationId": "files_complete",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "filename": {
                  "description": "Filename for the package file upload.",
                  "type": "string"
                },
                "md5_checksum": {
                  "description": "MD5 checksum for a POST-based package file upload.",
                  "type": "string"
                },
                "method": {
                  "description": "The method to use for package file upload.",
                  "type": "string"
                },
                "sha256_checksum": {
                  "description": "SHA256 checksum for a PUT-based package file upload.",
                  "type": "string"
                }
              },
              "required": [
                "filename"
              ],
              "title": "FilesComplete",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The multipart upload was completed successfully",
            "schema": {
              "properties": {
                "identifier": {
                  "description": "The identifier for the file to use when creating packages",
                  "type": "string"
                },
                "upload_fields": {
                  "description": "The dictionary of fields that must be sent with POST uploads",
                  "type": "object"
                },
                "upload_headers": {
                  "description": "The dictionary of headers that must be sent with uploads",
                  "type": "object"
                },
                "upload_querystring": {
                  "description": "The querystring to use for the next-step POST or PUT upload",
                  "type": "string"
                },
                "upload_url": {
                  "description": "The URL to use for the next-step POST or PUT upload",
                  "type": "string"
                }
              },
              "title": "PackageFileUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "The multipart upload could not be completed",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner), repository or upload file not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Complete a multipart file upload.",
        "tags": [
          "files"
        ]
      }
    },
    "/files/{owner}/{repo}/{identifier}/info/": {
      "get": {
        "description": "Get upload information for a multipart file upload.",
        "operationId": "files_info",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Information for multipart uploaded retrieved successfully",
            "schema": {
              "properties": {
                "identifier": {
                  "description": "The identifier for the file to use uploading parts.",
                  "type": "string"
                },
                "upload_querystring": {
                  "description": "The querystring to use for the next-step PUT upload.",
                  "type": "string"
                },
                "upload_url": {
                  "description": "The URL to use for the next-step PUT upload",
                  "type": "string"
                }
              },
              "title": "PackageFilePartsUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "The provided upload file was not a multipart upload",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner), repository or upload file not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get upload information for a multipart file upload.",
        "tags": [
          "files"
        ]
      }
    },
    "/formats/": {
      "get": {
        "description": "Get a list of all supported package formats.",
        "operationId": "formats_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Available package formats retrieved",
            "schema": {
              "items": {
                "properties": {
                  "description": {
                    "description": "Description of the package format",
                    "type": "string"
                  },
                  "distributions": {
                    "description": "The distributions supported by this package format",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "",
                          "type": "string"
                        },
                        "self_url": {
                          "description": "",
                          "type": "string"
                        },
                        "slug": {
                          "description": "The slug identifier for this distribution",
                          "type": "string"
                        },
                        "variants": {
                          "description": "",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "DistributionsList",
                    "type": "array"
                  },
                  "extensions": {
                    "description": "A non-exhaustive list of extensions supported",
                    "items": {
                      "description": "",
                      "type": "string"
                    },
                    "title": "ExtensionsList",
                    "type": "array"
                  },
                  "name": {
                    "description": "Name for the package format",
                    "type": "string"
                  },
                  "premium": {
                    "description": "If true the package format is a premium-only feature",
                    "type": "boolean"
                  },
                  "premium_plan_id": {
                    "description": "The minimum plan id required for this package format",
                    "type": "string"
                  },
                  "premium_plan_name": {
                    "description": "The minimum plan name required for this package format",
                    "type": "string"
                  },
                  "slug": {
                    "description": "Slug for the package format",
                    "type": "string"
                  },
                  "supports": {
                    "description": "A set of what the package format supports",
                    "type": "object"
                  }
                },
                "required": [
                  "description",
                  "extensions",
                  "name",
                  "premium",
                  "slug",
                  "supports"
                ],
                "title": "Format",
                "type": "object"
              },
              "title": "FormatList",
              "type": "array"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a list of all supported package formats.",
        "tags": [
          "formats"
        ]
      }
    },
    "/formats/{slug}/": {
      "get": {
        "description": "Get a specific supported package format.",
        "operationId": "formats_read",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "description": {
                  "description": "Description of the package format",
                  "type": "string"
                },
                "distributions": {
                  "description": "The distributions supported by this package format",
                  "items": {
                    "properties": {
                      "name": {
                        "description": "",
                        "type": "string"
                      },
                      "self_url": {
                        "description": "",
                        "type": "string"
                      },
                      "slug": {
                        "description": "The slug identifier for this distribution",
                        "type": "string"
                      },
                      "variants": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "DistributionsList",
                  "type": "array"
                },
                "extensions": {
                  "description": "A non-exhaustive list of extensions supported",
                  "items": {
                    "description": "",
                    "type": "string"
                  },
                  "title": "ExtensionsList",
                  "type": "array"
                },
                "name": {
                  "description": "Name for the package format",
                  "type": "string"
                },
                "premium": {
                  "description": "If true the package format is a premium-only feature",
                  "type": "boolean"
                },
                "premium_plan_id": {
                  "description": "The minimum plan id required for this package format",
                  "type": "string"
                },
                "premium_plan_name": {
                  "description": "The minimum plan name required for this package format",
                  "type": "string"
                },
                "slug": {
                  "description": "Slug for the package format",
                  "type": "string"
                },
                "supports": {
                  "description": "A set of what the package format supports",
                  "type": "object"
                }
              },
              "required": [
                "description",
                "extensions",
                "name",
                "premium",
                "slug",
                "supports"
              ],
              "title": "Format",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a specific supported package format.",
        "tags": [
          "formats"
        ]
      }
    },
    "/namespaces/": {
      "get": {
        "description": "Get a list of all namespaces the user belongs to.",
        "operationId": "namespaces_list",
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "properties": {
                  "name": {
                    "description": "",
                    "type": "string"
                  },
                  "slug": {
                    "description": "",
                    "type": "string"
                  },
                  "slug_perm": {
                    "description": "",
                    "type": "string"
                  },
                  "type_name": {
                    "description": "",
                    "type": "string"
                  }
                },
                "title": "Namespace",
                "type": "object"
              },
              "title": "NamespaceList",
              "type": "array"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a list of all namespaces the user belongs to.",
        "tags": [
          "namespaces"
        ]
      }
    },
    "/namespaces/{slug}/": {
      "get": {
        "description": "Views for working with namespaces.",
        "operationId": "namespaces_read",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "name": {
                  "description": "",
                  "type": "string"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "type_name": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "Namespace",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Views for working with namespaces.",
        "tags": [
          "namespaces"
        ]
      }
    },
    "/orgs/": {
      "get": {
        "description": "Get a list of all the organizations you are associated with.",
        "operationId": "orgs_list",
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "properties": {
                  "country": {
                    "description": "The country your organization is based in.",
                    "type": "string"
                  },
                  "created_at": {
                    "description": "",
                    "type": "string"
                  },
                  "location": {
                    "description": "The city/town/area your organization is based in.",
                    "type": "string"
                  },
                  "name": {
                    "description": "A descriptive name for your organization.",
                    "type": "string"
                  },
                  "slug": {
                    "description": "",
                    "type": "string"
                  },
                  "slug_perm": {
                    "description": "",
                    "type": "string"
                  },
                  "tagline": {
                    "description": "A short public descriptive for your organization.",
                    "type": "string"
                  }
                },
                "title": "Organization",
                "type": "object"
              },
              "title": "OrganizationList",
              "type": "array"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a list of all the organizations you are associated with.",
        "tags": [
          "orgs"
        ]
      }
    },
    "/orgs/{slug}/": {
      "get": {
        "description": "Views for working with organizations.",
        "operationId": "orgs_read",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "country": {
                  "description": "The country your organization is based in.",
                  "type": "string"
                },
                "created_at": {
                  "description": "",
                  "type": "string"
                },
                "location": {
                  "description": "The city/town/area your organization is based in.",
                  "type": "string"
                },
                "name": {
                  "description": "A descriptive name for your organization.",
                  "type": "string"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "tagline": {
                  "description": "A short public descriptive for your organization.",
                  "type": "string"
                }
              },
              "title": "Organization",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Views for working with organizations.",
        "tags": [
          "orgs"
        ]
      }
    },
    "/packages/{owner}/{repo}/": {
      "get": {
        "description": "Get a list of all packages associated with repository.",
        "operationId": "packages_list",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A search term for querying names, filenames, versions, distributions, architectures, formats or statuses of packages.",
            "in": "query",
            "name": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the list of packages",
            "schema": {
              "items": {
                "properties": {
                  "architectures": {
                    "description": "",
                    "items": {
                      "properties": {
                        "description": {
                          "description": "",
                          "type": "string"
                        },
                        "name": {
                          "description": "",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "ArchitecturesList",
                    "type": "array"
                  },
                  "cdn_url": {
                    "description": "",
                    "type": "string"
                  },
                  "checksum_md5": {
                    "description": "",
                    "type": "string"
                  },
                  "checksum_sha1": {
                    "description": "",
                    "type": "string"
                  },
                  "checksum_sha256": {
                    "description": "",
                    "type": "string"
                  },
                  "checksum_sha512": {
                    "description": "",
                    "type": "string"
                  },
                  "description": {
                    "description": "A textual description of this package.",
                    "type": "string"
                  },
                  "distro": {
                    "description": "",
                    "type": "object"
                  },
                  "distro_version": {
                    "description": "",
                    "type": "object"
                  },
                  "downloads": {
                    "description": "",
                    "type": "integer"
                  },
                  "epoch": {
                    "description": "The epoch of the package version (if any).",
                    "type": "integer"
                  },
                  "extension": {
                    "description": "",
                    "type": "string"
                  },
                  "filename": {
                    "description": "",
                    "type": "string"
                  },
                  "files": {
                    "description": "",
                    "items": {
                      "properties": {
                        "cdn_url": {
                          "description": "",
                          "type": "string"
                        },
                        "checksum_md5": {
                          "description": "",
                          "type": "string"
                        },
                        "checksum_sha1": {
                          "description": "",
                          "type": "string"
                        },
                        "checksum_sha256": {
                          "description": "",
                          "type": "string"
                        },
                        "checksum_sha512": {
                          "description": "",
                          "type": "string"
                        },
                        "downloads": {
                          "description": "",
                          "type": "integer"
                        },
                        "filename": {
                          "description": "",
                          "type": "string"
                        },
                        "is_downloadable": {
                          "description": "",
                          "type": "boolean"
                        },
                        "is_primary": {
                          "description": "",
                          "type": "boolean"
                        },
                        "is_synchronised": {
                          "description": "",
                          "type": "boolean"
                        },
                        "size": {
                          "description": "The calculated size of the file.",
                          "type": "integer"
                        },
                        "slug_perm": {
                          "description": "",
                          "type": "string"
                        },
                        "tag": {
                          "description": "Freeform descriptor that describes what the file is.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "FilesList",
                    "type": "array"
                  },
                  "format": {
                    "description": "",
                    "type": "string"
                  },
                  "format_url": {
                    "description": "",
                    "type": "string"
                  },
                  "identifier_perm": {
                    "description": "Unique and permanent identifier for the package.",
                    "type": "string"
                  },
                  "indexed": {
                    "description": "",
                    "type": "boolean"
                  },
                  "is_sync_awaiting": {
                    "description": "",
                    "type": "boolean"
                  },
                  "is_sync_completed": {
                    "description": "",
                    "type": "boolean"
                  },
                  "is_sync_failed": {
                    "description": "",
                    "type": "boolean"
                  },
                  "is_sync_in_flight": {
                    "description": "",
                    "type": "boolean"
                  },
                  "is_sync_in_progress": {
                    "description": "",
                    "type": "boolean"
                  },
                  "license": {
                    "description": "The license of this package.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of this package.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "",
                    "type": "string"
                  },
                  "namespace_url": {
                    "description": "",
                    "type": "string"
                  },
                  "num_files": {
                    "description": "",
                    "type": "integer"
                  },
                  "package_type": {
                    "description": "The type of package contents.",
                    "type": "string"
                  },
                  "release": {
                    "description": "The release of the package version (if any).",
                    "type": "string"
                  },
                  "repository": {
                    "description": "",
                    "type": "string"
                  },
                  "repository_url": {
                    "description": "",
                    "type": "string"
                  },
                  "self_html_url": {
                    "description": "",
                    "type": "string"
                  },
                  "self_url": {
                    "description": "",
                    "type": "string"
                  },
                  "size": {
                    "description": "The calculated size of the package.",
                    "type": "integer"
                  },
                  "slug": {
                    "description": "",
                    "type": "string"
                  },
                  "slug_perm": {
                    "description": "",
                    "type": "string"
                  },
                  "stage": {
                    "description": "The synchronisation (in progress) stage of the package.",
                    "type": "string"
                  },
                  "stage_str": {
                    "description": "",
                    "type": "string"
                  },
                  "stage_updated_at": {
                    "description": "The datetime the package stage was updated at.",
                    "type": "string"
                  },
                  "status": {
                    "description": "The synchronisation status of the package.",
                    "type": "string"
                  },
                  "status_reason": {
                    "description": "A textual description for the synchronous status reason (if any",
                    "type": "string"
                  },
                  "status_str": {
                    "description": "",
                    "type": "string"
                  },
                  "status_updated_at": {
                    "description": "The datetime the package status was updated at.",
                    "type": "string"
                  },
                  "status_url": {
                    "description": "",
                    "type": "string"
                  },
                  "subtype": {
                    "description": "",
                    "type": "string"
                  },
                  "summary": {
                    "description": "A one-liner synopsis of this package.",
                    "type": "string"
                  },
                  "sync_finished_at": {
                    "description": "The datetime the package sync was finished at.",
                    "type": "string"
                  },
                  "sync_progress": {
                    "description": "Synchronisation progress (from 0-100)",
                    "type": "integer"
                  },
                  "type_display": {
                    "description": "",
                    "type": "string"
                  },
                  "uploaded_at": {
                    "description": "The date this package was uploaded.",
                    "type": "string"
                  },
                  "uploader": {
                    "description": "",
                    "type": "string"
                  },
                  "uploader_url": {
                    "description": "",
                    "type": "string"
                  },
                  "version": {
                    "description": "The raw version for this package.",
                    "type": "string"
                  },
                  "version_orig": {
                    "description": "",
                    "type": "string"
                  }
                },
                "title": "Package",
                "type": "object"
              },
              "title": "PackageList",
              "type": "array"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a list of all packages associated with repository.",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/alpine/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Alpine package",
        "operationId": "packages_upload_alpine",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "distribution": {
                  "description": "The distribution to store the package for.",
                  "example": "alpine/v3.8",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "a123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "distribution",
                "package_file"
              ],
              "title": "PackagesUploadAlpine",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "AlpinePackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Alpine package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/cargo/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Cargo package",
        "operationId": "packages_upload_cargo",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadCargo",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "CargoPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Cargo package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/cocoapods/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new CocoaPods package",
        "operationId": "packages_upload_cocoapods",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "z123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadCocoapods",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "CocoapodsPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new CocoaPods package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/composer/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Composer package",
        "operationId": "packages_upload_composer",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadComposer",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "ComposerPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Composer package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/conan/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Conan package",
        "operationId": "packages_upload_conan",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "conan_channel": {
                  "description": "Conan channel.",
                  "example": "alpha",
                  "type": "string"
                },
                "conan_prefix": {
                  "description": "Conan prefix (User).",
                  "example": "my-repository",
                  "type": "string"
                },
                "info_file": {
                  "description": "The info file is an python file containing the package metadata.",
                  "example": "y1234456789b",
                  "type": "string"
                },
                "manifest_file": {
                  "description": "The info file is an python file containing the package metadata.",
                  "example": "y1234456789c",
                  "type": "string"
                },
                "metadata_file": {
                  "description": "The conan file is an python file containing the package metadata.",
                  "example": "y1234456789a",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "example": "conan_package.tgz",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "example": "1.0.0",
                  "type": "string"
                }
              },
              "required": [
                "info_file",
                "manifest_file",
                "metadata_file",
                "package_file"
              ],
              "title": "PackagesUploadConan",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "conan_channel": {
                  "description": "Conan channel.",
                  "example": "alpha",
                  "type": "string"
                },
                "conan_prefix": {
                  "description": "Conan prefix (User).",
                  "example": "my-repository",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "example": "conan_package.tgz",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "example": "1.0.0",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "ConanPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Conan package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/cran/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new CRAN package",
        "operationId": "packages_upload_cran",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadCran",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "CranPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new CRAN package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/dart/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Dart package",
        "operationId": "packages_upload_dart",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadDart",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "DartPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Dart package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/deb/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Debian package",
        "operationId": "packages_upload_deb",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "distribution": {
                  "description": "The distribution to store the package for.",
                  "example": "ubuntu/xenial",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "distribution",
                "package_file"
              ],
              "title": "PackagesUploadDeb",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "DebPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Debian package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/docker/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Docker package",
        "operationId": "packages_upload_docker",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadDocker",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "DockerPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Docker package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/go/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Go package",
        "operationId": "packages_upload_go",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadGo",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "GoPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Go package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/helm/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Helm package",
        "operationId": "packages_upload_helm",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadHelm",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "HelmPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Helm package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/luarocks/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new LuaRocks package",
        "operationId": "packages_upload_luarocks",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadLuarocks",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "LuarocksPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new LuaRocks package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/maven/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Maven package",
        "operationId": "packages_upload_maven",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "artifact_id": {
                  "description": "The ID of the artifact.",
                  "example": "cloudsmith-example",
                  "type": "string"
                },
                "group_id": {
                  "description": "Artifact's group ID.",
                  "example": "io.cloudsmith.example",
                  "type": "string"
                },
                "javadoc_file": {
                  "description": "Adds bundled Java documentation to the Maven package",
                  "example": "y1234456789c",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y1234456789a",
                  "type": "string"
                },
                "packaging": {
                  "description": "Artifact's Maven packaging type.",
                  "type": "string"
                },
                "pom_file": {
                  "description": "The POM file is an XML file containing the Maven coordinates.",
                  "example": "y1234456789b",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                },
                "sources_file": {
                  "description": "Adds bundled Java source code to the Maven package.",
                  "example": "y1234456789d",
                  "type": "string"
                },
                "tests_file": {
                  "description": "Adds bundled Java tests to the Maven package.",
                  "example": "y1234456789e",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadMaven",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "artifact_id": {
                  "description": "The ID of the artifact.",
                  "example": "cloudsmith-example",
                  "type": "string"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "group_id": {
                  "description": "Artifact's group ID.",
                  "example": "io.cloudsmith.example",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "packaging": {
                  "description": "Artifact's Maven packaging type.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "MavenPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Maven package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/npm/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new npm package",
        "operationId": "packages_upload_npm",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "npm_dist_tag": {
                  "description": "The default npm dist-tag for this package/version - This will replace any other package/version if they are using the same tag.",
                  "example": "latest",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadNpm",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "NpmPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new npm package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/nuget/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new NuGet package",
        "operationId": "packages_upload_nuget",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y1234456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                },
                "symbols_file": {
                  "description": "Attaches a symbols file to the package.",
                  "example": "y1234456789b",
                  "type": "string"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadNuget",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "NugetPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new NuGet package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/python/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Python package",
        "operationId": "packages_upload_python",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadPython",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "PythonPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Python package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/raw/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Raw package",
        "operationId": "packages_upload_raw",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "content_type": {
                  "description": "A custom content/media (also known as MIME) type to be sent when downloading this file. By default Cloudsmith will attempt to detect the type, but if you need to override it, you can specify it here.",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "example": "Everything about packaging files.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "example": "my-package",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "example": "My Package File",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "example": "1.0",
                  "type": "string"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadRaw",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "example": "Everything about packaging files.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "example": "my-package",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "example": "My Package File",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "example": "1.0",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "RawPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Raw package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/rpm/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new RedHat package",
        "operationId": "packages_upload_rpm",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "distribution": {
                  "description": "The distribution to store the package for.",
                  "example": "el/7",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "distribution",
                "package_file"
              ],
              "title": "PackagesUploadRpm",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "RpmPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new RedHat package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/ruby/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Ruby package",
        "operationId": "packages_upload_ruby",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadRuby",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "RubyPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Ruby package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/terraform/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Terraform package",
        "operationId": "packages_upload_terraform",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "z123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesUploadTerraform",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "TerraformPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Terraform package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/upload/vagrant/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new Vagrant package",
        "operationId": "packages_upload_vagrant",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "name": {
                  "description": "The name of this package.",
                  "example": "tcl",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789x",
                  "type": "string"
                },
                "provider": {
                  "description": "The virtual machine provider for the box.",
                  "example": "virtualbox",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "example": "1.0",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "package_file",
                "provider",
                "version"
              ],
              "title": "PackagesUploadVagrant",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Upload acknowledged and queued for synchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "example": "tcl",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "provider": {
                  "description": "The virtual machine provider for the box.",
                  "example": "virtualbox",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "example": "1.0",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "provider",
                "version"
              ],
              "title": "VagrantPackageUpload",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new Vagrant package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/alpine/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Alpine package",
        "operationId": "packages_validate-upload_alpine",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "distribution": {
                  "description": "The distribution to store the package for.",
                  "example": "alpine/v3.8",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "a123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "distribution",
                "package_file"
              ],
              "title": "PackagesValidate-uploadAlpine",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Alpine package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/cargo/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Cargo package",
        "operationId": "packages_validate-upload_cargo",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadCargo",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Cargo package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/cocoapods/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create CocoaPods package",
        "operationId": "packages_validate-upload_cocoapods",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "z123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadCocoapods",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create CocoaPods package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/composer/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Composer package",
        "operationId": "packages_validate-upload_composer",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadComposer",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Composer package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/conan/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Conan package",
        "operationId": "packages_validate-upload_conan",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "conan_channel": {
                  "description": "Conan channel.",
                  "example": "alpha",
                  "type": "string"
                },
                "conan_prefix": {
                  "description": "Conan prefix (User).",
                  "example": "my-repository",
                  "type": "string"
                },
                "info_file": {
                  "description": "The info file is an python file containing the package metadata.",
                  "example": "y1234456789b",
                  "type": "string"
                },
                "manifest_file": {
                  "description": "The info file is an python file containing the package metadata.",
                  "example": "y1234456789c",
                  "type": "string"
                },
                "metadata_file": {
                  "description": "The conan file is an python file containing the package metadata.",
                  "example": "y1234456789a",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "example": "conan_package.tgz",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "example": "1.0.0",
                  "type": "string"
                }
              },
              "required": [
                "info_file",
                "manifest_file",
                "metadata_file",
                "package_file"
              ],
              "title": "PackagesValidate-uploadConan",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Conan package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/cran/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create CRAN package",
        "operationId": "packages_validate-upload_cran",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadCran",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create CRAN package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/dart/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Dart package",
        "operationId": "packages_validate-upload_dart",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadDart",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Dart package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/deb/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Debian package",
        "operationId": "packages_validate-upload_deb",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "distribution": {
                  "description": "The distribution to store the package for.",
                  "example": "ubuntu/xenial",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "distribution",
                "package_file"
              ],
              "title": "PackagesValidate-uploadDeb",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Debian package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/docker/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Docker package",
        "operationId": "packages_validate-upload_docker",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadDocker",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Docker package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/go/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Go package",
        "operationId": "packages_validate-upload_go",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadGo",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Go package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/helm/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Helm package",
        "operationId": "packages_validate-upload_helm",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadHelm",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Helm package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/luarocks/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create LuaRocks package",
        "operationId": "packages_validate-upload_luarocks",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "x123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadLuarocks",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create LuaRocks package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/maven/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Maven package",
        "operationId": "packages_validate-upload_maven",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "artifact_id": {
                  "description": "The ID of the artifact.",
                  "example": "cloudsmith-example",
                  "type": "string"
                },
                "group_id": {
                  "description": "Artifact's group ID.",
                  "example": "io.cloudsmith.example",
                  "type": "string"
                },
                "javadoc_file": {
                  "description": "Adds bundled Java documentation to the Maven package",
                  "example": "y1234456789c",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y1234456789a",
                  "type": "string"
                },
                "packaging": {
                  "description": "Artifact's Maven packaging type.",
                  "type": "string"
                },
                "pom_file": {
                  "description": "The POM file is an XML file containing the Maven coordinates.",
                  "example": "y1234456789b",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                },
                "sources_file": {
                  "description": "Adds bundled Java source code to the Maven package.",
                  "example": "y1234456789d",
                  "type": "string"
                },
                "tests_file": {
                  "description": "Adds bundled Java tests to the Maven package.",
                  "example": "y1234456789e",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadMaven",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Maven package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/npm/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create npm package",
        "operationId": "packages_validate-upload_npm",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "npm_dist_tag": {
                  "description": "The default npm dist-tag for this package/version - This will replace any other package/version if they are using the same tag.",
                  "example": "latest",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadNpm",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create npm package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/nuget/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create NuGet package",
        "operationId": "packages_validate-upload_nuget",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y1234456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                },
                "symbols_file": {
                  "description": "Attaches a symbols file to the package.",
                  "example": "y1234456789b",
                  "type": "string"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadNuget",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create NuGet package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/python/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Python package",
        "operationId": "packages_validate-upload_python",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadPython",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Python package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/raw/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Raw package",
        "operationId": "packages_validate-upload_raw",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "content_type": {
                  "description": "A custom content/media (also known as MIME) type to be sent when downloading this file. By default Cloudsmith will attempt to detect the type, but if you need to override it, you can specify it here.",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "example": "Everything about packaging files.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "example": "my-package",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "example": "My Package File",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "example": "1.0",
                  "type": "string"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadRaw",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Raw package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/rpm/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create RedHat package",
        "operationId": "packages_validate-upload_rpm",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "distribution": {
                  "description": "The distribution to store the package for.",
                  "example": "el/7",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "distribution",
                "package_file"
              ],
              "title": "PackagesValidate-uploadRpm",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create RedHat package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/ruby/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Ruby package",
        "operationId": "packages_validate-upload_ruby",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadRuby",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Ruby package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/terraform/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Terraform package",
        "operationId": "packages_validate-upload_terraform",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "z123456789a",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "package_file"
              ],
              "title": "PackagesValidate-uploadTerraform",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Terraform package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/validate-upload/vagrant/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Validate parameters for create Vagrant package",
        "operationId": "packages_validate-upload_vagrant",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "name": {
                  "description": "The name of this package.",
                  "example": "tcl",
                  "type": "string"
                },
                "package_file": {
                  "description": "The primary file for the package.",
                  "example": "y123456789x",
                  "type": "string"
                },
                "provider": {
                  "description": "The virtual machine provider for the box.",
                  "example": "virtualbox",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "example": "1.0",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "package_file",
                "provider",
                "version"
              ],
              "title": "PackagesValidate-uploadVagrant",
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Validation was successful, parameters are OK"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Namespace (owner) or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Validate parameters for create Vagrant package",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/{identifier}/": {
      "delete": {
        "description": "Delete a specific package in a repository.",
        "operationId": "packages_delete",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted the specified package successfully"
          },
          "400": {
            "description": "The package cannot be deleted",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Delete a specific package in a repository.",
        "tags": [
          "packages"
        ]
      },
      "get": {
        "description": "Get a specific package in a repository.",
        "operationId": "packages_read",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the specified package successfully",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "Package",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a specific package in a repository.",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/{identifier}/copy/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Copy a package to another repository.",
        "operationId": "packages_copy",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "destination": {
                  "description": "None",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "destination"
              ],
              "title": "PackagesCopy",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Copied specified package to destination repository",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "The repository the package will be copied to.",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "PackageCopy",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Copy a package to another repository.",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/{identifier}/move/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Move a package to another repository.",
        "operationId": "packages_move",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "destination": {
                  "description": "None",
                  "type": "string"
                },
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "required": [
                "destination"
              ],
              "title": "PackagesMove",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moved specified package to destination repository",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "The repository the package will be moved to.",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "PackageMove",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Move a package to another repository.",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/{identifier}/resync/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Schedule a package for resynchronisation.",
        "operationId": "packages_resync",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "republish": {
                  "description": "If true, the uploaded package will overwrite any others with the same attributes (e.g. same version); otherwise, it will be flagged as a duplicate.",
                  "type": "boolean"
                }
              },
              "title": "PackagesResync",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Scheduled the package for resynchronisation",
            "schema": {
              "properties": {
                "architectures": {
                  "description": "",
                  "items": {
                    "properties": {
                      "description": {
                        "description": "",
                        "type": "string"
                      },
                      "name": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "ArchitecturesList",
                  "type": "array"
                },
                "cdn_url": {
                  "description": "",
                  "type": "string"
                },
                "checksum_md5": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha1": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha256": {
                  "description": "",
                  "type": "string"
                },
                "checksum_sha512": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A textual description of this package.",
                  "type": "string"
                },
                "distro": {
                  "description": "",
                  "type": "object"
                },
                "distro_version": {
                  "description": "",
                  "type": "object"
                },
                "downloads": {
                  "description": "",
                  "type": "integer"
                },
                "epoch": {
                  "description": "The epoch of the package version (if any).",
                  "type": "integer"
                },
                "extension": {
                  "description": "",
                  "type": "string"
                },
                "filename": {
                  "description": "",
                  "type": "string"
                },
                "files": {
                  "description": "",
                  "items": {
                    "properties": {
                      "cdn_url": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_md5": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha1": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha256": {
                        "description": "",
                        "type": "string"
                      },
                      "checksum_sha512": {
                        "description": "",
                        "type": "string"
                      },
                      "downloads": {
                        "description": "",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "",
                        "type": "string"
                      },
                      "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_primary": {
                        "description": "",
                        "type": "boolean"
                      },
                      "is_synchronised": {
                        "description": "",
                        "type": "boolean"
                      },
                      "size": {
                        "description": "The calculated size of the file.",
                        "type": "integer"
                      },
                      "slug_perm": {
                        "description": "",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Freeform descriptor that describes what the file is.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "FilesList",
                  "type": "array"
                },
                "format": {
                  "description": "",
                  "type": "string"
                },
                "format_url": {
                  "description": "",
                  "type": "string"
                },
                "identifier_perm": {
                  "description": "Unique and permanent identifier for the package.",
                  "type": "string"
                },
                "indexed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "license": {
                  "description": "The license of this package.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this package.",
                  "type": "string"
                },
                "namespace": {
                  "description": "",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "",
                  "type": "string"
                },
                "num_files": {
                  "description": "",
                  "type": "integer"
                },
                "package_type": {
                  "description": "The type of package contents.",
                  "type": "string"
                },
                "release": {
                  "description": "The release of the package version (if any).",
                  "type": "string"
                },
                "repository": {
                  "description": "",
                  "type": "string"
                },
                "repository_url": {
                  "description": "",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the package.",
                  "type": "integer"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "status_url": {
                  "description": "",
                  "type": "string"
                },
                "subtype": {
                  "description": "",
                  "type": "string"
                },
                "summary": {
                  "description": "A one-liner synopsis of this package.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                },
                "type_display": {
                  "description": "",
                  "type": "string"
                },
                "uploaded_at": {
                  "description": "The date this package was uploaded.",
                  "type": "string"
                },
                "uploader": {
                  "description": "",
                  "type": "string"
                },
                "uploader_url": {
                  "description": "",
                  "type": "string"
                },
                "version": {
                  "description": "The raw version for this package.",
                  "type": "string"
                },
                "version_orig": {
                  "description": "",
                  "type": "string"
                }
              },
              "title": "PackageResync",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Schedule a package for resynchronisation.",
        "tags": [
          "packages"
        ]
      }
    },
    "/packages/{owner}/{repo}/{identifier}/status/": {
      "get": {
        "description": "Get the synchronisation status for a package.",
        "operationId": "packages_status",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status for specified package",
            "schema": {
              "properties": {
                "is_sync_awaiting": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_completed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_failed": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_flight": {
                  "description": "",
                  "type": "boolean"
                },
                "is_sync_in_progress": {
                  "description": "",
                  "type": "boolean"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "stage": {
                  "description": "The synchronisation (in progress) stage of the package.",
                  "type": "string"
                },
                "stage_str": {
                  "description": "",
                  "type": "string"
                },
                "stage_updated_at": {
                  "description": "The datetime the package stage was updated at.",
                  "type": "string"
                },
                "status": {
                  "description": "The synchronisation status of the package.",
                  "type": "string"
                },
                "status_reason": {
                  "description": "A textual description for the synchronous status reason (if any",
                  "type": "string"
                },
                "status_str": {
                  "description": "",
                  "type": "string"
                },
                "status_updated_at": {
                  "description": "The datetime the package status was updated at.",
                  "type": "string"
                },
                "sync_finished_at": {
                  "description": "The datetime the package sync was finished at.",
                  "type": "string"
                },
                "sync_progress": {
                  "description": "Synchronisation progress (from 0-100)",
                  "type": "integer"
                }
              },
              "title": "PackageStatus",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get the synchronisation status for a package.",
        "tags": [
          "packages"
        ]
      }
    },
    "/rates/limits/": {
      "get": {
        "description": "Endpoint to check rate limits for current user.",
        "operationId": "rates_limits_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Rate check was successful",
            "schema": {
              "properties": {
                "resources": {
                  "description": "Rate limit values per resource",
                  "example": {
                    "core": {
                      "interval": 5.123456789,
                      "limit": 3600,
                      "remaining": 3595,
                      "reset": 1593282513,
                      "reset_iso_8601": "2020-06-27T18:28:33.621484+00:00",
                      "throttled": false
                    }
                  },
                  "type": "object"
                }
              },
              "title": "ResourcesRateCheck",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Endpoint to check rate limits for current user.",
        "tags": [
          "rates"
        ]
      }
    },
    "/repos/": {
      "get": {
        "description": "Get a list of all repositories associated with current user.",
        "operationId": "repos_all_list",
        "parameters": [
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the list of repositories",
            "schema": {
              "items": {
                "properties": {
                  "cdn_url": {
                    "description": "Base URL from which packages and other artifacts are downloaded.",
                    "type": "string"
                  },
                  "created_at": {
                    "description": "",
                    "type": "string"
                  },
                  "deleted_at": {
                    "description": "",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the repository's purpose/contents.",
                    "type": "string"
                  },
                  "gpg_keys": {
                    "description": "",
                    "items": {
                      "properties": {
                        "active": {
                          "description": "If selected this is the active key for this repository.",
                          "type": "boolean"
                        },
                        "comment": {
                          "description": "",
                          "type": "string"
                        },
                        "created_at": {
                          "description": "",
                          "type": "string"
                        },
                        "default": {
                          "description": "If selected this is the default key for this repository.",
                          "type": "boolean"
                        },
                        "fingerprint": {
                          "description": "The long identifier used by GPG for this key.",
                          "type": "string"
                        },
                        "fingerprint_short": {
                          "description": "",
                          "type": "string"
                        },
                        "public_key": {
                          "description": "The public key given to repository users.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "Gpg keysList",
                    "type": "array"
                  },
                  "index_files": {
                    "description": "If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.",
                    "type": "boolean"
                  },
                  "is_open_source": {
                    "description": "",
                    "type": "boolean"
                  },
                  "is_private": {
                    "description": "",
                    "type": "boolean"
                  },
                  "is_public": {
                    "description": "",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "A descriptive name for the repository.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace to which this repository belongs.",
                    "type": "string"
                  },
                  "namespace_url": {
                    "description": "API endpoint where data about this namespace can be retrieved.",
                    "type": "string"
                  },
                  "num_downloads": {
                    "description": "The number of downloads for packages in the repository.",
                    "type": "integer"
                  },
                  "package_count": {
                    "description": "The number of packages in the repository.",
                    "type": "integer"
                  },
                  "package_group_count": {
                    "description": "The number of groups in the repository.",
                    "type": "integer"
                  },
                  "repository_type": {
                    "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Open-Source repositories are always visible to everyone and are restricted by licensing, but are free to use and come with generous bandwidth/storage. You can only select Open-Source at repository creation time.",
                    "type": "string"
                  },
                  "repository_type_str": {
                    "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Public repositories are free to use on all plans and visible to all Cloudsmith users.",
                    "type": "string"
                  },
                  "self_html_url": {
                    "description": "Website URL for this repository.",
                    "type": "string"
                  },
                  "self_url": {
                    "description": "API endpoint where data about this repository can be retrieved.",
                    "type": "string"
                  },
                  "size": {
                    "description": "The calculated size of the repository.",
                    "type": "integer"
                  },
                  "size_str": {
                    "description": "The calculated size of the repository (human readable).",
                    "type": "string"
                  },
                  "slug": {
                    "description": "The slug identifies the repository in URIs.",
                    "type": "string"
                  },
                  "slug_perm": {
                    "description": "The slug_perm immutably identifies the repository. It will never change once a repository has been created.",
                    "type": "string"
                  },
                  "storage_region": {
                    "description": "The Cloudsmith region in which package files are stored.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "Repository",
                "type": "object"
              },
              "title": "RepositoryList",
              "type": "array"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a list of all repositories associated with current user.",
        "tags": [
          "repos"
        ]
      }
    },
    "/repos/{owner}/": {
      "get": {
        "description": "Get a list of all repositories within a namespace.",
        "operationId": "repos_list",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the list of repositories",
            "schema": {
              "items": {
                "properties": {
                  "cdn_url": {
                    "description": "Base URL from which packages and other artifacts are downloaded.",
                    "type": "string"
                  },
                  "created_at": {
                    "description": "",
                    "type": "string"
                  },
                  "deleted_at": {
                    "description": "",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the repository's purpose/contents.",
                    "type": "string"
                  },
                  "gpg_keys": {
                    "description": "",
                    "items": {
                      "properties": {
                        "active": {
                          "description": "If selected this is the active key for this repository.",
                          "type": "boolean"
                        },
                        "comment": {
                          "description": "",
                          "type": "string"
                        },
                        "created_at": {
                          "description": "",
                          "type": "string"
                        },
                        "default": {
                          "description": "If selected this is the default key for this repository.",
                          "type": "boolean"
                        },
                        "fingerprint": {
                          "description": "The long identifier used by GPG for this key.",
                          "type": "string"
                        },
                        "fingerprint_short": {
                          "description": "",
                          "type": "string"
                        },
                        "public_key": {
                          "description": "The public key given to repository users.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "Gpg keysList",
                    "type": "array"
                  },
                  "index_files": {
                    "description": "If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.",
                    "type": "boolean"
                  },
                  "is_open_source": {
                    "description": "",
                    "type": "boolean"
                  },
                  "is_private": {
                    "description": "",
                    "type": "boolean"
                  },
                  "is_public": {
                    "description": "",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "A descriptive name for the repository.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace to which this repository belongs.",
                    "type": "string"
                  },
                  "namespace_url": {
                    "description": "API endpoint where data about this namespace can be retrieved.",
                    "type": "string"
                  },
                  "num_downloads": {
                    "description": "The number of downloads for packages in the repository.",
                    "type": "integer"
                  },
                  "package_count": {
                    "description": "The number of packages in the repository.",
                    "type": "integer"
                  },
                  "package_group_count": {
                    "description": "The number of groups in the repository.",
                    "type": "integer"
                  },
                  "repository_type": {
                    "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Open-Source repositories are always visible to everyone and are restricted by licensing, but are free to use and come with generous bandwidth/storage. You can only select Open-Source at repository creation time.",
                    "type": "string"
                  },
                  "repository_type_str": {
                    "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Public repositories are free to use on all plans and visible to all Cloudsmith users.",
                    "type": "string"
                  },
                  "self_html_url": {
                    "description": "Website URL for this repository.",
                    "type": "string"
                  },
                  "self_url": {
                    "description": "API endpoint where data about this repository can be retrieved.",
                    "type": "string"
                  },
                  "size": {
                    "description": "The calculated size of the repository.",
                    "type": "integer"
                  },
                  "size_str": {
                    "description": "The calculated size of the repository (human readable).",
                    "type": "string"
                  },
                  "slug": {
                    "description": "The slug identifies the repository in URIs.",
                    "type": "string"
                  },
                  "slug_perm": {
                    "description": "The slug_perm immutably identifies the repository. It will never change once a repository has been created.",
                    "type": "string"
                  },
                  "storage_region": {
                    "description": "The Cloudsmith region in which package files are stored.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "Repository",
                "type": "object"
              },
              "title": "RepositoryList",
              "type": "array"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a list of all repositories within a namespace.",
        "tags": [
          "repos"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a new repository in a given namespace.",
        "operationId": "repos_create",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "description": {
                  "description": "A description of the repository's purpose/contents.",
                  "type": "string"
                },
                "index_files": {
                  "description": "If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.",
                  "type": "boolean"
                },
                "name": {
                  "description": "A descriptive name for the repository.",
                  "type": "string"
                },
                "repository_type_str": {
                  "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Public repositories are free to use on all plans and visible to all Cloudsmith users.",
                  "type": "string"
                },
                "slug": {
                  "description": "The slug identifies the repository in URIs.",
                  "type": "string"
                },
                "storage_region": {
                  "description": "The Cloudsmith region in which package files are stored.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "ReposCreate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The repository was created",
            "schema": {
              "properties": {
                "cdn_url": {
                  "description": "Base URL from which packages and other artifacts are downloaded.",
                  "type": "string"
                },
                "created_at": {
                  "description": "",
                  "type": "string"
                },
                "deleted_at": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A description of the repository's purpose/contents.",
                  "type": "string"
                },
                "gpg_keys": {
                  "description": "",
                  "items": {
                    "properties": {
                      "active": {
                        "description": "If selected this is the active key for this repository.",
                        "type": "boolean"
                      },
                      "comment": {
                        "description": "",
                        "type": "string"
                      },
                      "created_at": {
                        "description": "",
                        "type": "string"
                      },
                      "default": {
                        "description": "If selected this is the default key for this repository.",
                        "type": "boolean"
                      },
                      "fingerprint": {
                        "description": "The long identifier used by GPG for this key.",
                        "type": "string"
                      },
                      "fingerprint_short": {
                        "description": "",
                        "type": "string"
                      },
                      "public_key": {
                        "description": "The public key given to repository users.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "Gpg keysList",
                  "type": "array"
                },
                "index_files": {
                  "description": "If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.",
                  "type": "boolean"
                },
                "is_open_source": {
                  "description": "",
                  "type": "boolean"
                },
                "is_private": {
                  "description": "",
                  "type": "boolean"
                },
                "is_public": {
                  "description": "",
                  "type": "boolean"
                },
                "name": {
                  "description": "A descriptive name for the repository.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace to which this repository belongs.",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "API endpoint where data about this namespace can be retrieved.",
                  "type": "string"
                },
                "num_downloads": {
                  "description": "The number of downloads for packages in the repository.",
                  "type": "integer"
                },
                "package_count": {
                  "description": "The number of packages in the repository.",
                  "type": "integer"
                },
                "package_group_count": {
                  "description": "The number of groups in the repository.",
                  "type": "integer"
                },
                "repository_type": {
                  "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Open-Source repositories are always visible to everyone and are restricted by licensing, but are free to use and come with generous bandwidth/storage. You can only select Open-Source at repository creation time.",
                  "type": "string"
                },
                "repository_type_str": {
                  "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Public repositories are free to use on all plans and visible to all Cloudsmith users.",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "Website URL for this repository.",
                  "type": "string"
                },
                "self_url": {
                  "description": "API endpoint where data about this repository can be retrieved.",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the repository.",
                  "type": "integer"
                },
                "size_str": {
                  "description": "The calculated size of the repository (human readable).",
                  "type": "string"
                },
                "slug": {
                  "description": "The slug identifies the repository in URIs.",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "The slug_perm immutably identifies the repository. It will never change once a repository has been created.",
                  "type": "string"
                },
                "storage_region": {
                  "description": "The Cloudsmith region in which package files are stored.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "RepositoryCreate",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a new repository in a given namespace.",
        "tags": [
          "repos"
        ]
      }
    },
    "/repos/{owner}/{identifier}/": {
      "delete": {
        "description": "Delete a repository in a given namespace.",
        "operationId": "repos_delete",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The repository has been scheduled for deletion"
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Unable to find repository with that name in the provided namespace",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Delete a repository in a given namespace.",
        "tags": [
          "repos"
        ]
      },
      "get": {
        "description": "Get a specific repository.",
        "operationId": "repos_read",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the specified repository",
            "schema": {
              "properties": {
                "cdn_url": {
                  "description": "Base URL from which packages and other artifacts are downloaded.",
                  "type": "string"
                },
                "created_at": {
                  "description": "",
                  "type": "string"
                },
                "deleted_at": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A description of the repository's purpose/contents.",
                  "type": "string"
                },
                "gpg_keys": {
                  "description": "",
                  "items": {
                    "properties": {
                      "active": {
                        "description": "If selected this is the active key for this repository.",
                        "type": "boolean"
                      },
                      "comment": {
                        "description": "",
                        "type": "string"
                      },
                      "created_at": {
                        "description": "",
                        "type": "string"
                      },
                      "default": {
                        "description": "If selected this is the default key for this repository.",
                        "type": "boolean"
                      },
                      "fingerprint": {
                        "description": "The long identifier used by GPG for this key.",
                        "type": "string"
                      },
                      "fingerprint_short": {
                        "description": "",
                        "type": "string"
                      },
                      "public_key": {
                        "description": "The public key given to repository users.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "Gpg keysList",
                  "type": "array"
                },
                "index_files": {
                  "description": "If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.",
                  "type": "boolean"
                },
                "is_open_source": {
                  "description": "",
                  "type": "boolean"
                },
                "is_private": {
                  "description": "",
                  "type": "boolean"
                },
                "is_public": {
                  "description": "",
                  "type": "boolean"
                },
                "name": {
                  "description": "A descriptive name for the repository.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace to which this repository belongs.",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "API endpoint where data about this namespace can be retrieved.",
                  "type": "string"
                },
                "num_downloads": {
                  "description": "The number of downloads for packages in the repository.",
                  "type": "integer"
                },
                "package_count": {
                  "description": "The number of packages in the repository.",
                  "type": "integer"
                },
                "package_group_count": {
                  "description": "The number of groups in the repository.",
                  "type": "integer"
                },
                "repository_type": {
                  "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Open-Source repositories are always visible to everyone and are restricted by licensing, but are free to use and come with generous bandwidth/storage. You can only select Open-Source at repository creation time.",
                  "type": "string"
                },
                "repository_type_str": {
                  "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Public repositories are free to use on all plans and visible to all Cloudsmith users.",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "Website URL for this repository.",
                  "type": "string"
                },
                "self_url": {
                  "description": "API endpoint where data about this repository can be retrieved.",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the repository.",
                  "type": "integer"
                },
                "size_str": {
                  "description": "The calculated size of the repository (human readable).",
                  "type": "string"
                },
                "slug": {
                  "description": "The slug identifies the repository in URIs.",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "The slug_perm immutably identifies the repository. It will never change once a repository has been created.",
                  "type": "string"
                },
                "storage_region": {
                  "description": "The Cloudsmith region in which package files are stored.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "Repository",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a specific repository.",
        "tags": [
          "repos"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update details about a repository in a given namespace.",
        "operationId": "repos_partial_update",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "description": {
                  "description": "A description of the repository's purpose/contents.",
                  "type": "string"
                },
                "index_files": {
                  "description": "If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.",
                  "type": "boolean"
                },
                "name": {
                  "description": "A descriptive name for the repository.",
                  "type": "string"
                },
                "repository_type_str": {
                  "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Public repositories are free to use on all plans and visible to all Cloudsmith users.",
                  "type": "string"
                },
                "slug": {
                  "description": "The slug identifies the repository in URIs.",
                  "type": "string"
                }
              },
              "title": "ReposPartialUpdate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The repository was updated",
            "schema": {
              "properties": {
                "cdn_url": {
                  "description": "Base URL from which packages and other artifacts are downloaded.",
                  "type": "string"
                },
                "created_at": {
                  "description": "",
                  "type": "string"
                },
                "deleted_at": {
                  "description": "",
                  "type": "string"
                },
                "description": {
                  "description": "A description of the repository's purpose/contents.",
                  "type": "string"
                },
                "gpg_keys": {
                  "description": "",
                  "items": {
                    "properties": {
                      "active": {
                        "description": "If selected this is the active key for this repository.",
                        "type": "boolean"
                      },
                      "comment": {
                        "description": "",
                        "type": "string"
                      },
                      "created_at": {
                        "description": "",
                        "type": "string"
                      },
                      "default": {
                        "description": "If selected this is the default key for this repository.",
                        "type": "boolean"
                      },
                      "fingerprint": {
                        "description": "The long identifier used by GPG for this key.",
                        "type": "string"
                      },
                      "fingerprint_short": {
                        "description": "",
                        "type": "string"
                      },
                      "public_key": {
                        "description": "The public key given to repository users.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "Gpg keysList",
                  "type": "array"
                },
                "index_files": {
                  "description": "If checked, files contained in packages will be indexed, which increase the synchronisation time required for packages. Note that it is recommended you keep this enabled unless the synchronisation time is significantly impacted.",
                  "type": "boolean"
                },
                "is_open_source": {
                  "description": "",
                  "type": "boolean"
                },
                "is_private": {
                  "description": "",
                  "type": "boolean"
                },
                "is_public": {
                  "description": "",
                  "type": "boolean"
                },
                "name": {
                  "description": "A descriptive name for the repository.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace to which this repository belongs.",
                  "type": "string"
                },
                "namespace_url": {
                  "description": "API endpoint where data about this namespace can be retrieved.",
                  "type": "string"
                },
                "num_downloads": {
                  "description": "The number of downloads for packages in the repository.",
                  "type": "integer"
                },
                "package_count": {
                  "description": "The number of packages in the repository.",
                  "type": "integer"
                },
                "package_group_count": {
                  "description": "The number of groups in the repository.",
                  "type": "integer"
                },
                "repository_type": {
                  "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Open-Source repositories are always visible to everyone and are restricted by licensing, but are free to use and come with generous bandwidth/storage. You can only select Open-Source at repository creation time.",
                  "type": "string"
                },
                "repository_type_str": {
                  "description": "The repository type changes how it is accessed and billed. Private repositories can only be used on paid plans, but are visible only to you or authorised delegates. Public repositories are free to use on all plans and visible to all Cloudsmith users.",
                  "type": "string"
                },
                "self_html_url": {
                  "description": "Website URL for this repository.",
                  "type": "string"
                },
                "self_url": {
                  "description": "API endpoint where data about this repository can be retrieved.",
                  "type": "string"
                },
                "size": {
                  "description": "The calculated size of the repository.",
                  "type": "integer"
                },
                "size_str": {
                  "description": "The calculated size of the repository (human readable).",
                  "type": "string"
                },
                "slug": {
                  "description": "The slug identifies the repository in URIs.",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "The slug_perm immutably identifies the repository. It will never change once a repository has been created.",
                  "type": "string"
                },
                "storage_region": {
                  "description": "The Cloudsmith region in which package files are stored.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "Repository",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Unable to find repository with that name in the provided namespace",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Update details about a repository in a given namespace.",
        "tags": [
          "repos"
        ]
      }
    },
    "/status/check/basic/": {
      "get": {
        "description": "Endpoint to check basic API connectivity.",
        "operationId": "status_check_basic",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status check was successful",
            "schema": {
              "properties": {
                "detail": {
                  "description": "The message describing the state of the API.",
                  "example": "Cloudsmith API is operational.",
                  "type": "string"
                },
                "version": {
                  "description": "The current version for the Cloudsmith service.",
                  "example": "0.51.76",
                  "type": "string"
                }
              },
              "title": "StatusBasic",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [],
        "summary": "Endpoint to check basic API connectivity.",
        "tags": [
          "status"
        ]
      }
    },
    "/storage-regions/": {
      "get": {
        "description": "Get a list of all available storage regions.",
        "operationId": "storage-regions_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Available storage regions retrieved",
            "schema": {
              "items": {
                "properties": {
                  "label": {
                    "description": "Name of the storage region",
                    "type": "string"
                  },
                  "slug": {
                    "description": "Slug for the storage region",
                    "type": "string"
                  }
                },
                "required": [
                  "label",
                  "slug"
                ],
                "title": "StorageRegion",
                "type": "object"
              },
              "title": "StorageRegionList",
              "type": "array"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a list of all available storage regions.",
        "tags": [
          "storage-regions"
        ]
      }
    },
    "/storage-regions/{slug}/": {
      "get": {
        "description": "Get a specific storage region.",
        "operationId": "storage-regions_read",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "label": {
                  "description": "Name of the storage region",
                  "type": "string"
                },
                "slug": {
                  "description": "Slug for the storage region",
                  "type": "string"
                }
              },
              "required": [
                "label",
                "slug"
              ],
              "title": "StorageRegion",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a specific storage region.",
        "tags": [
          "storage-regions"
        ]
      }
    },
    "/user/self/": {
      "get": {
        "description": "Provide a brief for the current user (if any).",
        "operationId": "user_self",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieved brief for the current user",
            "schema": {
              "properties": {
                "authenticated": {
                  "description": "If true then you're logged in as a user.",
                  "example": true,
                  "type": "boolean"
                },
                "email": {
                  "description": "Your email address that we use to contact you. This is only visible to you.",
                  "example": "user@example.com",
                  "type": "string"
                },
                "name": {
                  "description": "The full name of the user (if any).",
                  "example": "Example User",
                  "type": "string"
                },
                "profile_url": {
                  "description": "The URL for the full profile of the user.",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "slug": {
                  "description": "",
                  "example": "example-user",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "example": "x1y2z3z4y",
                  "type": "string"
                }
              },
              "title": "UserBrief",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Provide a brief for the current user (if any).",
        "tags": [
          "user"
        ]
      }
    },
    "/user/token/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieve the API key/token for the authenticated user.",
        "operationId": "user_token_create",
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "email": {
                  "description": "Email address to authenticate with",
                  "type": "string"
                },
                "password": {
                  "description": "Password to authenticate with",
                  "type": "string"
                }
              },
              "title": "UserTokenCreate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Retrieved/created user API token/key",
            "schema": {
              "properties": {
                "token": {
                  "description": "API token for the authenticated user",
                  "example": "y4682jh19cqf0b2ty4682jh19cqf0b2t",
                  "type": "string"
                }
              },
              "title": "UserAuthToken",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "403": {
            "description": "Locked out",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Failed to authenticate",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Retrieve the API key/token for the authenticated user.",
        "tags": [
          "user"
        ]
      }
    },
    "/users/profile/{slug}/": {
      "get": {
        "description": "Provide a brief for the specified user (if any).",
        "operationId": "users_profile_read",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved details for the specified user (or current user, if none was specified)",
            "schema": {
              "properties": {
                "company": {
                  "description": "",
                  "type": "string"
                },
                "first_name": {
                  "description": "",
                  "type": "string"
                },
                "job_title": {
                  "description": "",
                  "type": "string"
                },
                "joined_at": {
                  "description": "",
                  "type": "string"
                },
                "last_name": {
                  "description": "",
                  "type": "string"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "slug": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "tagline": {
                  "description": "Your tagline is a sentence about you. Make it funny. Make it professional. Either way, it's public and it represents who you are.",
                  "type": "string"
                },
                "url": {
                  "description": "",
                  "type": "string"
                }
              },
              "required": [
                "first_name",
                "last_name"
              ],
              "title": "UserProfile",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Provide a brief for the specified user (if any).",
        "tags": [
          "users"
        ]
      }
    },
    "/webhooks/{owner}/{repo}/": {
      "get": {
        "description": "Get a list of all webhooks in a repository.",
        "operationId": "webhooks_list",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "A page number within the paginated result set.",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Number of results to return per page.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the list of webhooks",
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "description": "",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "",
                    "type": "string"
                  },
                  "created_by_url": {
                    "description": "",
                    "type": "string"
                  },
                  "disable_reason": {
                    "description": "",
                    "type": "string"
                  },
                  "disable_reason_str": {
                    "description": "",
                    "type": "string"
                  },
                  "events": {
                    "description": "",
                    "items": {
                      "description": "",
                      "type": "string"
                    },
                    "title": "EventsList",
                    "type": "array"
                  },
                  "identifier": {
                    "description": "",
                    "type": "integer"
                  },
                  "is_active": {
                    "description": "If enabled, the webhook will trigger on events and send payloads to the configured target URL.",
                    "type": "boolean"
                  },
                  "is_last_response_bad": {
                    "description": "",
                    "type": "boolean"
                  },
                  "last_response_status": {
                    "description": "",
                    "type": "integer"
                  },
                  "last_response_status_str": {
                    "description": "",
                    "type": "string"
                  },
                  "num_sent": {
                    "description": "",
                    "type": "integer"
                  },
                  "request_body_format": {
                    "description": "The format of the payloads for webhook requests.",
                    "type": "string"
                  },
                  "request_body_format_str": {
                    "description": "",
                    "type": "string"
                  },
                  "request_body_template_format": {
                    "description": "The format of the payloads for webhook requests.",
                    "type": "string"
                  },
                  "request_body_template_format_str": {
                    "description": "",
                    "type": "string"
                  },
                  "request_content_type": {
                    "description": "The value that will be sent for the 'Content Type' header. ",
                    "type": "string"
                  },
                  "secret_header": {
                    "description": "The header to send the predefined secret in. This must be unique from existing headers or it won't be sent. You can use this as a form of authentication on the endpoint side.",
                    "type": "string"
                  },
                  "self_url": {
                    "description": "",
                    "type": "string"
                  },
                  "slug_perm": {
                    "description": "",
                    "type": "string"
                  },
                  "target_url": {
                    "description": "The destination URL that webhook payloads will be POST'ed to.",
                    "type": "string"
                  },
                  "templates": {
                    "description": "",
                    "items": {
                      "properties": {
                        "event": {
                          "description": "",
                          "type": "string"
                        },
                        "template": {
                          "description": "",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "TemplatesList",
                    "type": "array"
                  },
                  "updated_at": {
                    "description": "",
                    "type": "string"
                  },
                  "updated_by": {
                    "description": "",
                    "type": "string"
                  },
                  "updated_by_url": {
                    "description": "",
                    "type": "string"
                  },
                  "verify_ssl": {
                    "description": "If enabled, SSL certificates is verified when webhooks are sent. It's recommended to leave this enabled as not verifying the integrity of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM) attacks.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "events",
                  "target_url",
                  "templates"
                ],
                "title": "RepositoryWebhook",
                "type": "object"
              },
              "title": "RepositoryWebhookList",
              "type": "array"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Get a list of all webhooks in a repository.",
        "tags": [
          "webhooks"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a specific webhook in a repository.",
        "operationId": "webhooks_create",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "events": {
                  "description": "None",
                  "items": {
                    "description": "",
                    "type": "string"
                  },
                  "title": "EventsList",
                  "type": "array"
                },
                "is_active": {
                  "description": "If enabled, the webhook will trigger on events and send payloads to the configured target URL.",
                  "type": "boolean"
                },
                "request_body_format": {
                  "description": "The format of the payloads for webhook requests.",
                  "type": "string"
                },
                "request_body_template_format": {
                  "description": "The format of the payloads for webhook requests.",
                  "type": "string"
                },
                "request_content_type": {
                  "description": "The value that will be sent for the 'Content Type' header. ",
                  "type": "string"
                },
                "secret_header": {
                  "description": "The header to send the predefined secret in. This must be unique from existing headers or it won't be sent. You can use this as a form of authentication on the endpoint side.",
                  "type": "string"
                },
                "secret_value": {
                  "description": "The value for the predefined secret (note: this is treated as a passphrase and is encrypted when we store it). You can use this as a form of authentication on the endpoint side.",
                  "type": "string"
                },
                "signature_key": {
                  "description": "The value for the signature key - This is used to generate an HMAC-based hex digest of the request body, which we send as the X-Cloudsmith-Signature header so that you can ensure that the request wasn't modified by a malicious party (note: this is treated as a passphrase and is encrypted when we store it).",
                  "type": "string"
                },
                "target_url": {
                  "description": "The destination URL that webhook payloads will be POST'ed to.",
                  "type": "string"
                },
                "templates": {
                  "description": "None",
                  "items": {
                    "properties": {
                      "event": {
                        "description": "",
                        "type": "string"
                      },
                      "template": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "TemplatesList",
                  "type": "array"
                },
                "verify_ssl": {
                  "description": "If enabled, SSL certificates is verified when webhooks are sent. It's recommended to leave this enabled as not verifying the integrity of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM) attacks.",
                  "type": "boolean"
                }
              },
              "required": [
                "events",
                "target_url",
                "templates"
              ],
              "title": "WebhooksCreate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created the specified webhook",
            "schema": {
              "properties": {
                "created_at": {
                  "description": "",
                  "type": "string"
                },
                "created_by": {
                  "description": "",
                  "type": "string"
                },
                "created_by_url": {
                  "description": "",
                  "type": "string"
                },
                "disable_reason": {
                  "description": "",
                  "type": "string"
                },
                "disable_reason_str": {
                  "description": "",
                  "type": "string"
                },
                "events": {
                  "description": "",
                  "items": {
                    "description": "",
                    "type": "string"
                  },
                  "title": "EventsList",
                  "type": "array"
                },
                "identifier": {
                  "description": "",
                  "type": "integer"
                },
                "is_active": {
                  "description": "If enabled, the webhook will trigger on events and send payloads to the configured target URL.",
                  "type": "boolean"
                },
                "is_last_response_bad": {
                  "description": "",
                  "type": "boolean"
                },
                "last_response_status": {
                  "description": "",
                  "type": "integer"
                },
                "last_response_status_str": {
                  "description": "",
                  "type": "string"
                },
                "num_sent": {
                  "description": "",
                  "type": "integer"
                },
                "request_body_format": {
                  "description": "The format of the payloads for webhook requests.",
                  "type": "string"
                },
                "request_body_format_str": {
                  "description": "",
                  "type": "string"
                },
                "request_body_template_format": {
                  "description": "The format of the payloads for webhook requests.",
                  "type": "string"
                },
                "request_body_template_format_str": {
                  "description": "",
                  "type": "string"
                },
                "request_content_type": {
                  "description": "The value that will be sent for the 'Content Type' header. ",
                  "type": "string"
                },
                "secret_header": {
                  "description": "The header to send the predefined secret in. This must be unique from existing headers or it won't be sent. You can use this as a form of authentication on the endpoint side.",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "target_url": {
                  "description": "The destination URL that webhook payloads will be POST'ed to.",
                  "type": "string"
                },
                "templates": {
                  "description": "",
                  "items": {
                    "properties": {
                      "event": {
                        "description": "",
                        "type": "string"
                      },
                      "template": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "TemplatesList",
                  "type": "array"
                },
                "updated_at": {
                  "description": "",
                  "type": "string"
                },
                "updated_by": {
                  "description": "",
                  "type": "string"
                },
                "updated_by_url": {
                  "description": "",
                  "type": "string"
                },
                "verify_ssl": {
                  "description": "If enabled, SSL certificates is verified when webhooks are sent. It's recommended to leave this enabled as not verifying the integrity of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM) attacks.",
                  "type": "boolean"
                }
              },
              "required": [
                "events",
                "target_url",
                "templates"
              ],
              "title": "RepositoryWebhook",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Create a specific webhook in a repository.",
        "tags": [
          "webhooks"
        ]
      }
    },
    "/webhooks/{owner}/{repo}/{identifier}/": {
      "delete": {
        "description": "Delete a specific webhook in a repository.",
        "operationId": "webhooks_delete",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted the specified webhook successfully"
          },
          "400": {
            "description": "The webhook cannot be deleted",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Delete a specific webhook in a repository.",
        "tags": [
          "webhooks"
        ]
      },
      "get": {
        "description": "Views for working with repository webhooks.",
        "operationId": "webhooks_read",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "created_at": {
                  "description": "",
                  "type": "string"
                },
                "created_by": {
                  "description": "",
                  "type": "string"
                },
                "created_by_url": {
                  "description": "",
                  "type": "string"
                },
                "disable_reason": {
                  "description": "",
                  "type": "string"
                },
                "disable_reason_str": {
                  "description": "",
                  "type": "string"
                },
                "events": {
                  "description": "",
                  "items": {
                    "description": "",
                    "type": "string"
                  },
                  "title": "EventsList",
                  "type": "array"
                },
                "identifier": {
                  "description": "",
                  "type": "integer"
                },
                "is_active": {
                  "description": "If enabled, the webhook will trigger on events and send payloads to the configured target URL.",
                  "type": "boolean"
                },
                "is_last_response_bad": {
                  "description": "",
                  "type": "boolean"
                },
                "last_response_status": {
                  "description": "",
                  "type": "integer"
                },
                "last_response_status_str": {
                  "description": "",
                  "type": "string"
                },
                "num_sent": {
                  "description": "",
                  "type": "integer"
                },
                "request_body_format": {
                  "description": "The format of the payloads for webhook requests.",
                  "type": "string"
                },
                "request_body_format_str": {
                  "description": "",
                  "type": "string"
                },
                "request_body_template_format": {
                  "description": "The format of the payloads for webhook requests.",
                  "type": "string"
                },
                "request_body_template_format_str": {
                  "description": "",
                  "type": "string"
                },
                "request_content_type": {
                  "description": "The value that will be sent for the 'Content Type' header. ",
                  "type": "string"
                },
                "secret_header": {
                  "description": "The header to send the predefined secret in. This must be unique from existing headers or it won't be sent. You can use this as a form of authentication on the endpoint side.",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "target_url": {
                  "description": "The destination URL that webhook payloads will be POST'ed to.",
                  "type": "string"
                },
                "templates": {
                  "description": "",
                  "items": {
                    "properties": {
                      "event": {
                        "description": "",
                        "type": "string"
                      },
                      "template": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "TemplatesList",
                  "type": "array"
                },
                "updated_at": {
                  "description": "",
                  "type": "string"
                },
                "updated_by": {
                  "description": "",
                  "type": "string"
                },
                "updated_by_url": {
                  "description": "",
                  "type": "string"
                },
                "verify_ssl": {
                  "description": "If enabled, SSL certificates is verified when webhooks are sent. It's recommended to leave this enabled as not verifying the integrity of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM) attacks.",
                  "type": "boolean"
                }
              },
              "required": [
                "events",
                "target_url",
                "templates"
              ],
              "title": "RepositoryWebhook",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Views for working with repository webhooks.",
        "tags": [
          "webhooks"
        ]
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a specific webhook in a repository.",
        "operationId": "webhooks_partial_update",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "owner",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "repo",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "schema": {
              "properties": {
                "events": {
                  "description": "None",
                  "items": {
                    "description": "",
                    "type": "string"
                  },
                  "title": "EventsList",
                  "type": "array"
                },
                "is_active": {
                  "description": "If enabled, the webhook will trigger on events and send payloads to the configured target URL.",
                  "type": "boolean"
                },
                "request_body_format": {
                  "description": "The format of the payloads for webhook requests.",
                  "type": "string"
                },
                "request_body_template_format": {
                  "description": "The format of the payloads for webhook requests.",
                  "type": "string"
                },
                "request_content_type": {
                  "description": "The value that will be sent for the 'Content Type' header. ",
                  "type": "string"
                },
                "secret_header": {
                  "description": "The header to send the predefined secret in. This must be unique from existing headers or it won't be sent. You can use this as a form of authentication on the endpoint side.",
                  "type": "string"
                },
                "secret_value": {
                  "description": "The value for the predefined secret (note: this is treated as a passphrase and is encrypted when we store it). You can use this as a form of authentication on the endpoint side.",
                  "type": "string"
                },
                "signature_key": {
                  "description": "The value for the signature key - This is used to generate an HMAC-based hex digest of the request body, which we send as the X-Cloudsmith-Signature header so that you can ensure that the request wasn't modified by a malicious party (note: this is treated as a passphrase and is encrypted when we store it).",
                  "type": "string"
                },
                "target_url": {
                  "description": "The destination URL that webhook payloads will be POST'ed to.",
                  "type": "string"
                },
                "templates": {
                  "description": "None",
                  "items": {
                    "properties": {
                      "event": {
                        "description": "",
                        "type": "string"
                      },
                      "template": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "TemplatesList",
                  "type": "array"
                },
                "verify_ssl": {
                  "description": "If enabled, SSL certificates is verified when webhooks are sent. It's recommended to leave this enabled as not verifying the integrity of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM) attacks.",
                  "type": "boolean"
                }
              },
              "title": "WebhooksPartialUpdate",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the specified webhook",
            "schema": {
              "properties": {
                "created_at": {
                  "description": "",
                  "type": "string"
                },
                "created_by": {
                  "description": "",
                  "type": "string"
                },
                "created_by_url": {
                  "description": "",
                  "type": "string"
                },
                "disable_reason": {
                  "description": "",
                  "type": "string"
                },
                "disable_reason_str": {
                  "description": "",
                  "type": "string"
                },
                "events": {
                  "description": "",
                  "items": {
                    "description": "",
                    "type": "string"
                  },
                  "title": "EventsList",
                  "type": "array"
                },
                "identifier": {
                  "description": "",
                  "type": "integer"
                },
                "is_active": {
                  "description": "If enabled, the webhook will trigger on events and send payloads to the configured target URL.",
                  "type": "boolean"
                },
                "is_last_response_bad": {
                  "description": "",
                  "type": "boolean"
                },
                "last_response_status": {
                  "description": "",
                  "type": "integer"
                },
                "last_response_status_str": {
                  "description": "",
                  "type": "string"
                },
                "num_sent": {
                  "description": "",
                  "type": "integer"
                },
                "request_body_format": {
                  "description": "The format of the payloads for webhook requests.",
                  "type": "string"
                },
                "request_body_format_str": {
                  "description": "",
                  "type": "string"
                },
                "request_body_template_format": {
                  "description": "The format of the payloads for webhook requests.",
                  "type": "string"
                },
                "request_body_template_format_str": {
                  "description": "",
                  "type": "string"
                },
                "request_content_type": {
                  "description": "The value that will be sent for the 'Content Type' header. ",
                  "type": "string"
                },
                "secret_header": {
                  "description": "The header to send the predefined secret in. This must be unique from existing headers or it won't be sent. You can use this as a form of authentication on the endpoint side.",
                  "type": "string"
                },
                "self_url": {
                  "description": "",
                  "type": "string"
                },
                "slug_perm": {
                  "description": "",
                  "type": "string"
                },
                "target_url": {
                  "description": "The destination URL that webhook payloads will be POST'ed to.",
                  "type": "string"
                },
                "templates": {
                  "description": "",
                  "items": {
                    "properties": {
                      "event": {
                        "description": "",
                        "type": "string"
                      },
                      "template": {
                        "description": "",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": "TemplatesList",
                  "type": "array"
                },
                "updated_at": {
                  "description": "",
                  "type": "string"
                },
                "updated_by": {
                  "description": "",
                  "type": "string"
                },
                "updated_by_url": {
                  "description": "",
                  "type": "string"
                },
                "verify_ssl": {
                  "description": "If enabled, SSL certificates is verified when webhooks are sent. It's recommended to leave this enabled as not verifying the integrity of SSL certificates leaves you susceptible to Man-in-the-Middle (MITM) attacks.",
                  "type": "boolean"
                }
              },
              "required": [
                "events",
                "target_url",
                "templates"
              ],
              "title": "RepositoryWebhook",
              "type": "object"
            }
          },
          "400": {
            "description": "Request could not be processed (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "404": {
            "description": "Owner namespace or repository not found",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          },
          "422": {
            "description": "Missing or invalid parameters (see detail)",
            "schema": {
              "properties": {
                "detail": {
                  "description": "An extended message for the response.",
                  "type": "string"
                }
              },
              "required": [
                "detail"
              ],
              "title": "Status",
              "type": "object"
            }
          }
        },
        "security": [
          {
            "token": []
          },
          {
            "apikey": []
          },
          {
            "csrf_token": []
          }
        ],
        "summary": "Update a specific webhook in a repository.",
        "tags": [
          "webhooks"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "apikey": {
      "in": "header",
      "name": "X-Api-Key",
      "type": "apiKey"
    },
    "basic": {
      "type": "basic"
    },
    "csrf_token": {
      "in": "header",
      "name": "X-CSRFToken",
      "type": "apiKey"
    }
  },
  "swagger": "2.0"
}