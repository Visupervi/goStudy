{
  "swagger" : "2.0",
  "info" : {
    "version" : "2.6",
    "title" : "Talend Management Console Public API"
  },
  "basePath" : "/tmc/v2.6",
  "tags" : [ {
    "name" : "account :: subscription "
  }, {
    "name" : "artifacts"
  }, {
    "name" : "connections"
  }, {
    "name" : "environments"
  }, {
    "name" : "executions"
  }, {
    "name" : "executions :: logs"
  }, {
    "name" : "plans :: executables"
  }, {
    "name" : "plans :: executions"
  }, {
    "name" : "projects"
  }, {
    "name" : "projects :: authorization"
  }, {
    "name" : "promotions :: executables"
  }, {
    "name" : "promotions :: executables :: authorization"
  }, {
    "name" : "promotions :: executions"
  }, {
    "name" : "resources"
  }, {
    "name" : "runtime :: clusters"
  }, {
    "name" : "runtime :: clusters :: run-profiles"
  }, {
    "name" : "runtime :: engines"
  }, {
    "name" : "runtime :: engines :: run-profiles"
  }, {
    "name" : "runtime :: pipeline engines"
  }, {
    "name" : "runtime :: pipeline engines :: run profiles"
  }, {
    "name" : "runtime :: pipeline engines :: run profiles :: advanced"
  }, {
    "name" : "runtime :: pipeline engines :: run profiles :: big-data"
  }, {
    "name" : "runtime :: pipeline engines :: run profiles :: data-integration"
  }, {
    "name" : "runtime :: pipeline engines :: run profiles :: databricks"
  }, {
    "name" : "runtime :: pipeline engines :: run profiles :: standard"
  }, {
    "name" : "schedules"
  }, {
    "name" : "tasks"
  }, {
    "name" : "workspaces"
  }, {
    "name" : "workspaces :: permissions"
  } ],
  "paths" : {
    "/artifacts" : {
      "get" : {
        "tags" : [ "artifacts" ],
        "summary" : "Get available Artifacts",
        "description" : "Get available Artifacts",
        "operationId" : "getArtifactsAvailable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "artifact name filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "workspaceId",
          "in" : "query",
          "description" : "workspace id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "environmentId",
          "in" : "query",
          "description" : "environment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/artifacts/{id}" : {
      "get" : {
        "tags" : [ "artifacts" ],
        "summary" : "Get Artifact by id",
        "description" : "Get Artifact by id",
        "operationId" : "getArtifact",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "artifact id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Artifact"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "artifacts" ],
        "summary" : "Delete Artifact by id",
        "description" : "Delete Artifact by id",
        "operationId" : "deleteArtifact",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "artifact id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/artifacts/{id}/versions/{version}" : {
      "get" : {
        "tags" : [ "artifacts" ],
        "summary" : "Get Artifact of a specified version",
        "description" : "Get Artifact of a specified version",
        "operationId" : "getArtifactOfVersion",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "artifact id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "artifact version",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ArtifactVersion"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "artifacts" ],
        "summary" : "Delete Artifact of a specified version",
        "description" : "Delete Artifact of a specified version",
        "operationId" : "deleteArtifactOfVersion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "artifact id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "artifact version",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/connections" : {
      "get" : {
        "tags" : [ "connections" ],
        "summary" : "Get available Connections",
        "description" : "",
        "operationId" : "getConnectionsPage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "connections" ],
        "summary" : "Create a Connection",
        "description" : "",
        "operationId" : "createConnection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateConnectionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ConnectionDetails"
            }
          },
          "201" : {
            "description" : "Created successfully",
            "schema" : {
              "$ref" : "#/definitions/ConnectionDetails"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Connection name already exists",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/connections/{id}" : {
      "get" : {
        "tags" : [ "connections" ],
        "summary" : "Get a Connection details",
        "description" : "",
        "operationId" : "getConnectionDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ConnectionDetails"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "connections" ],
        "summary" : "Update a Connection",
        "description" : "",
        "operationId" : "updateConnection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateConnectionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated",
            "schema" : {
              "$ref" : "#/definitions/ConnectionDetails"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Connection name already exists",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "connections" ],
        "summary" : "Delete a Connection",
        "description" : "",
        "operationId" : "deleteConnection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Connection is in use",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/environments" : {
      "get" : {
        "tags" : [ "environments" ],
        "summary" : "Get available environments",
        "description" : "Get available environments",
        "operationId" : "getEnvironments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "search query (FIQL format), e.g. name==Dev*;description==*environment*",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EnvironmentInfo"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "environments" ],
        "summary" : "Create an environment ",
        "description" : "Create an environment.",
        "operationId" : "createEnvironment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateEnvironmentRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Environment successfully created",
            "schema" : {
              "$ref" : "#/definitions/EnvironmentInfo"
            }
          },
          "400" : {
            "description" : "Parameters not valid",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to create the environment",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Environment name should be unique",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/environments/{environmentId}" : {
      "put" : {
        "tags" : [ "environments" ],
        "summary" : "Update environment",
        "description" : "",
        "operationId" : "updateEnvironment",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "environmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Environment to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateEnvironmentRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Environment successfully updated"
          },
          "400" : {
            "description" : "Parameters not valid",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to update the environment",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Environment name should be unique",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "environments" ],
        "summary" : "Delete the environment for a given identifier",
        "description" : "",
        "operationId" : "deleteEnvironment",
        "parameters" : [ {
          "name" : "environmentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Environment successfully deleted"
          },
          "400" : {
            "description" : "Cannot delete environment: it is used in promotions(s)",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to delete the environment",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Environment not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/events/search" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Get scheduled executions",
        "description" : "Get scheduled executions of all types",
        "operationId" : "getScheduledEvents",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Scheduled executions request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ScheduledEventsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageScheduledEventsResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/plans" : {
      "get" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Get available Plans",
        "description" : "Get available Plans",
        "operationId" : "getAvailablePlans",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "plan name filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "taskId",
          "in" : "query",
          "description" : "task Id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "plan Id (available from V2.5)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "environmentId",
          "in" : "query",
          "description" : "environment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "workspaceId",
          "in" : "query",
          "description" : "workspace id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Create Plan",
        "description" : "Create Plan",
        "operationId" : "createPlan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Execution plan",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PlanRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Plan"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/plans/executions" : {
      "get" : {
        "tags" : [ "plans :: executions" ],
        "summary" : "Get available Plans executions",
        "description" : "Get available Plans executions",
        "operationId" : "listAvailablePlansExecutions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "execution status",
          "required" : false,
          "type" : "string",
          "enum" : [ "executing", "execution_successful", "execution_failed" ]
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lastDays",
          "in" : "query",
          "description" : "lastDays",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "environmentId",
          "in" : "query",
          "description" : "environment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "workspaceId",
          "in" : "query",
          "description" : "workspace id",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/plans/{planId}" : {
      "get" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Get Plan details",
        "description" : "Get Plan details",
        "operationId" : "getExecutableDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "executable ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PlanExecutabledetails"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Update plan",
        "description" : "Update Plan",
        "operationId" : "updatePlan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "plan ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "execution plan",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PlanRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Plan"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Delete Plan",
        "description" : "Delete Plan",
        "operationId" : "deletePlan",
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "plan ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/plans/{planId}/executions" : {
      "get" : {
        "tags" : [ "plans :: executions" ],
        "summary" : "Get Plan executions",
        "description" : "Get Plan executions",
        "operationId" : "listPlanExecutions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "plan ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "execution status",
          "required" : false,
          "type" : "string",
          "enum" : [ "executing", "execution_successful", "execution_failed" ]
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lastDays",
          "in" : "query",
          "description" : "lastDays",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/plans/{planId}/pause" : {
      "put" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Pause-Resume Plan execution",
        "description" : "",
        "operationId" : "pausePlanExecution",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "plan id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Action to perform ",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PlanPauseDetails"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Plan execution state changed"
          },
          "204" : {
            "description" : "Plan execution already in same pause state"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/plans/{planId}/run-config" : {
      "get" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Get Plan configuration",
        "description" : "Get Plan configuration",
        "operationId" : "getPlanRunConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "plan id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PlanRunConfig"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Configure Plan execution",
        "description" : "Configure Plan execution",
        "operationId" : "configurePlanExecution",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "Plan id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "RunConfig",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlanRunConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PlanRunConfig"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Stop schedule for plan",
        "description" : "Stop schedule for plan",
        "operationId" : "stopScheduleForPlan",
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "plan ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/plans/{planId}/run-config/events" : {
      "get" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Get plan scheduled triggers ",
        "description" : "Get plan triggers",
        "operationId" : "getPlanScheduledEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "plan id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to date time (milliseconds)",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/plans/{planId}/schedule" : {
      "get" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Get plan schedule",
        "description" : "Get plan schedule multiple triggers",
        "operationId" : "getPlanScheduleMultipleTriggers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "plan id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Link plan schedule",
        "description" : "Link schedule with plan",
        "operationId" : "linkPlanSchedule",
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "plan id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "schedule id",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LinkScheduleMultipleTriggerRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "plans :: executables" ],
        "summary" : "Unlink plan schedule",
        "description" : "Unlink schedule from plan",
        "operationId" : "unlinkPlanSchedule",
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "description" : "plan id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/promotions" : {
      "get" : {
        "tags" : [ "promotions :: executables" ],
        "summary" : "Get available Promotions",
        "description" : "Get available Promotions",
        "operationId" : "getAvailablePromotions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "_s",
          "in" : "query",
          "description" : "search query (FIQL format), e.g. \"name==dev to prod*\"",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PromotionExecutableDetails"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "promotions :: executables" ],
        "summary" : "Create a Promotion",
        "description" : "Create a Promotion",
        "operationId" : "createPromotion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Promotion",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreatePromotionRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/PromotionExecutableDetails"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Promotion with same source and target already exists",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/promotions/{id}" : {
      "post" : {
        "tags" : [ "promotions :: executables" ],
        "summary" : "Perform promotion simulation analysis",
        "description" : "Perform promotion simulation analysis",
        "operationId" : "performPromotionAnalysis",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PromotionExecutionDetails"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PromotionExecutionStatus"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/promotions/{promotionId}" : {
      "get" : {
        "tags" : [ "promotions :: executables" ],
        "summary" : "Get Promotion details",
        "description" : "Get Promotion details",
        "operationId" : "getPromotionDetailsById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "promotionId",
          "in" : "path",
          "description" : "Promotion ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PromotionExecutableDetails"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "promotions :: executables" ],
        "summary" : "Delete a Promotion",
        "description" : "Delete a Promotion",
        "operationId" : "deletePromotion",
        "parameters" : [ {
          "name" : "promotionId",
          "in" : "path",
          "description" : "Promotion ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "promotions :: executables" ],
        "summary" : "Update a Promotion",
        "description" : "Update a Promotion",
        "operationId" : "updatePromotion",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "promotionId",
          "in" : "path",
          "description" : "Promotion ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Update request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateDescriptionRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/promotions/{promotionId}/users" : {
      "get" : {
        "tags" : [ "promotions :: executables :: authorization" ],
        "summary" : "Get users assigned to Promotion",
        "description" : "Get users assigned to Promotion",
        "operationId" : "getPromotionUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "promotionId",
          "in" : "path",
          "description" : "Promotion ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PromotionUsersResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/promotions/{promotionId}/users/{userId}" : {
      "put" : {
        "tags" : [ "promotions :: executables :: authorization" ],
        "summary" : "Assign user to Promotion",
        "description" : "Assign user to Promotion",
        "operationId" : "addPromotionUser",
        "parameters" : [ {
          "name" : "promotionId",
          "in" : "path",
          "description" : "Promotion ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "User is already assigned to the promotion",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "promotions :: executables :: authorization" ],
        "summary" : "Unassign user from Promotion",
        "description" : "Unassign user from Promotion",
        "operationId" : "deletePromotionUser",
        "parameters" : [ {
          "name" : "promotionId",
          "in" : "path",
          "description" : "Promotion ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/tasks" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get available Tasks",
        "description" : "Get available Tasks",
        "operationId" : "getAvailableTasks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "task name filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "environmentId",
          "in" : "query",
          "description" : "environment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "workspaceId",
          "in" : "query",
          "description" : "workspace id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "artifactId",
          "in" : "query",
          "description" : "artifact id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "runtimeType",
          "in" : "query",
          "description" : "runtime type",
          "required" : false,
          "type" : "string",
          "enum" : [ "CLOUD", "REMOTE_ENGINE", "REMOTE_ENGINE_CLUSTER", "CLOUD_EXCLUSIVE", "PIPELINE_ENGINE" ]
        }, {
          "name" : "runtimeId",
          "in" : "query",
          "description" : "runtime id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "runtimeRunProfileId",
          "in" : "query",
          "description" : "runtime run profile id",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Create Task",
        "description" : "Create Task. By default the created task will have 'CLOUD' as its execution environment",
        "operationId" : "createTask",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Task to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaskV21CreateRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/TaskV21"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/tasks/executions" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get available Tasks Executions",
        "description" : "Get available Tasks Executions. Chosen date range cannot be more than 60 days",
        "operationId" : "listAvailableTaskExecutions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "execution status",
          "required" : false,
          "type" : "string",
          "enum" : [ "dispatching", "deploy_failed", "executing", "execution_successful", "execution_rejected", "execution_failed", "terminated", "terminated_timeout" ]
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lastDays",
          "in" : "query",
          "description" : "lastDays",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "environmentId",
          "in" : "query",
          "description" : "environment id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "workspaceId",
          "in" : "query",
          "description" : "workspace id",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Get available Tasks Executions",
        "description" : "Get available Tasks Executions",
        "operationId" : "executablelistAvailableTaskExecutions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TaskExecutionsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/tasks/search" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Search Tasks",
        "description" : "Search Tasks",
        "operationId" : "searchTasks",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Search tasks filters",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FetchTasksModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/tasks/{taskId}" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get Task by id",
        "description" : "Get Task by id",
        "operationId" : "getTask",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TaskV21"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "tasks" ],
        "summary" : "Update Task",
        "description" : "Update Task",
        "operationId" : "updateTask",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "task",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaskAutoUpgradeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TaskV21"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "tasks" ],
        "summary" : "Delete Task",
        "description" : "Delete Task",
        "operationId" : "deleteTask",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "terminateExecutions",
          "in" : "query",
          "description" : "terminate task executions",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/tasks/{taskId}/executions" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get Task Executions",
        "description" : "Get task executions. Chosen date range cannot be more than 60 days",
        "operationId" : "listTaskExecutions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "execution status",
          "required" : false,
          "type" : "string",
          "enum" : [ "dispatching", "deploy_failed", "executing", "execution_successful", "execution_rejected", "execution_failed", "terminated", "terminated_timeout" ]
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lastDays",
          "in" : "query",
          "description" : "lastDays",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/tasks/{taskId}/pause" : {
      "put" : {
        "tags" : [ "tasks" ],
        "summary" : "Pause-Resume task execution",
        "description" : "",
        "operationId" : "pauseTaskExecution",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Action to perform ",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaskPauseDetails"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Task execution state changed"
          },
          "204" : {
            "description" : "Task execution already in same state"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/tasks/{taskId}/run-config" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get Task configuration",
        "description" : "Get Task configuration",
        "operationId" : "getTaskConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TaskRunConfig"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "tasks" ],
        "summary" : "Configure Task execution",
        "description" : "Configure Task execution.<br>User must have the specific permission \"Run Profile - Manage\" or \"Engines - Manage\". Usage of attribute `parallelExecutionAllowed` with `REMOTE_ENGINE` runtime type requires API v2.6 and higher.",
        "operationId" : "configureTaskExecution",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "RunConfig",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaskRunConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TaskRunConfig"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "tasks" ],
        "summary" : "Stop schedule for Task",
        "description" : "Stop schedule for task",
        "operationId" : "stopSchedule",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/tasks/{taskId}/run-config/events" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get task scheduled triggers",
        "description" : "Get task triggers",
        "operationId" : "getTaskScheduledEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to date time (milliseconds)",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executables/tasks/{taskId}/schedule" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get task schedule",
        "description" : "Get task schedule multiple triggers",
        "operationId" : "getTaskScheduleMultipleTriggers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "tasks" ],
        "summary" : "Link task schedule",
        "description" : "Link schedule with task",
        "operationId" : "linkTaskSchedule",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "schedule id",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LinkScheduleMultipleTriggerRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "tasks" ],
        "summary" : "Unlink task schedule",
        "description" : "Unlink schedule from task",
        "operationId" : "unlinkTaskSchedule",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "task id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions" : {
      "post" : {
        "tags" : [ "executions" ],
        "summary" : "Execute Task",
        "description" : "Execute Task",
        "operationId" : "execute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Executable identifier",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Executabletask"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Execution started",
            "schema" : {
              "$ref" : "#/definitions/Executionidentifier"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "501" : {
            "description" : "Task cannot be deployed because it is not configured",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions/plans" : {
      "post" : {
        "tags" : [ "plans :: executions" ],
        "summary" : "Execute Plan",
        "description" : "Allows to run a Plan (starting from V2.4: allows also to rerun the plan from a specific step)",
        "operationId" : "executePlan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Executable identifier",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PlanExecutable"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Execution started",
            "schema" : {
              "$ref" : "#/definitions/Executionidentifier"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "405" : {
            "description" : "Operation not allowed - Plan execution paused",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Entity exists but cannot be processed, because too old or plan exec didn't fail ",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "501" : {
            "description" : "Plan cannot be deployed because it is not configured",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions/plans/{id}" : {
      "get" : {
        "tags" : [ "plans :: executions" ],
        "summary" : "Get Plan execution status",
        "description" : "Get Plan execution status",
        "operationId" : "getPlanExecutionStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "execution ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PlanExecutionStatus"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "429" : {
            "description" : "Too many requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions/plans/{planExecutionId}/steps" : {
      "get" : {
        "tags" : [ "plans :: executions" ],
        "summary" : "Get all steps for a plan execution (order by designed execution, only steps, without error handlers)",
        "description" : "Get Steps executions status",
        "operationId" : "getAllStepExecutions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planExecutionId",
          "in" : "path",
          "description" : "Plan execution ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StepExecution"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions/plans/{planExecutionId}/steps/{stepExecutionId}" : {
      "get" : {
        "tags" : [ "plans :: executions" ],
        "summary" : "Get the step for plan execution without error handlers",
        "description" : "Get Step execution status",
        "operationId" : "getStepExecution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planExecutionId",
          "in" : "path",
          "description" : "Plan execution ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stepExecutionId",
          "in" : "path",
          "description" : "Step execution ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PlanExecutionStatus"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions/plans/{planExecutionId}/steps/{stepExecutionId}/error-handler" : {
      "get" : {
        "tags" : [ "plans :: executions" ],
        "summary" : "Get execution status of the handler for the specified step",
        "description" : "Get Step handler execution status",
        "operationId" : "getStepHandlerExecution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "planExecutionId",
          "in" : "path",
          "description" : "Plan execution ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stepExecutionId",
          "in" : "path",
          "description" : "Step execution ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PlanExecutionStatus"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions/promotions" : {
      "post" : {
        "tags" : [ "promotions :: executions" ],
        "summary" : "Execute a Promotion",
        "description" : "Execute a Promotion",
        "operationId" : "executePromotion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Executable task",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PromotionExecutableTask"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Execution success",
            "schema" : {
              "$ref" : "#/definitions/PromotionExecutionReport"
            }
          },
          "202" : {
            "description" : "Execution started"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "501" : {
            "description" : "Promotions can't be executed because it has errors",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions/promotions/{executionId}" : {
      "get" : {
        "tags" : [ "promotions :: executions" ],
        "summary" : "Get Promotion execution status",
        "description" : "Get Promotion execution status",
        "operationId" : "getPromotionExecutionStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "description" : "Execution ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PromotionExecutionStatus"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions/promotions/{id}" : {
      "post" : {
        "tags" : [ "promotions :: executions" ],
        "summary" : "Perform promotion simulation analysis",
        "description" : "Perform promotion simulation analysis",
        "operationId" : "performPromotionAnalysisDeprecated",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PromotionExecutionDetails"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PromotionExecutionStatus"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "deprecated" : true
      }
    },
    "/executions/{id}" : {
      "get" : {
        "tags" : [ "executions" ],
        "summary" : "Get Task execution status",
        "description" : "Get Task execution status",
        "operationId" : "getTaskExecutionStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "execution ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/JobExecutionStatusV21"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "429" : {
            "description" : "Too many requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "executions" ],
        "summary" : "Terminate Task execution",
        "description" : "Terminate Task execution",
        "operationId" : "stopExecution",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "execution ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Execution already finished",
            "schema" : {
              "type" : "string"
            }
          },
          "204" : {
            "description" : "Execution stopped succesfully"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions/{id}/logs" : {
      "get" : {
        "tags" : [ "executions :: logs" ],
        "summary" : "Get Task execution logs",
        "description" : "Get Task execution logs",
        "operationId" : "getTaskExecutionLog",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of Task Execution",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "Earliest log date and time, default value is set to the start time of the execution. Floored to minute unit. Example: 2021-06-14T07:01:45Z",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "Latest log date and time, default value is set to the current time when the request is received. Floored to minute unit. Example: 2021-06-14T15:04:45Z",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Index for pagination to start with, default value is set to 0",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Number of log messages, default value is equal to 50, the maximum value is equal to 200",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "format" : "int32"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Sort order (ASC, DESC) for logs by logTimestamp, default is DESC : last logs are first.",
          "required" : false,
          "type" : "string",
          "default" : "DESC"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ExecutionLogs"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "executions :: logs" ],
        "summary" : "Generate full logs for Task execution",
        "description" : "Generate full logs for Task execution. Please note the customer log download API is asynchronous, after receiving a token, the frequency on which you should check logs file status depends on the size of logs, the status endpoint should be used for this purpose",
        "operationId" : "generateFullTaskExecutionLogs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of Task Execution",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "Earliest log date and time",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "Latest log date and time",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fileFormat",
          "in" : "query",
          "description" : "Generated file format JSON/TEXT",
          "required" : false,
          "type" : "string",
          "default" : "JSON",
          "enum" : [ "TEXT", "JSON" ]
        }, {
          "name" : "newFileName",
          "in" : "query",
          "description" : "Use new file name for generated file: taskId_executionId.log",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/DownloadLogs"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/executions/{id}/logs/status" : {
      "post" : {
        "tags" : [ "executions :: logs" ],
        "summary" : "Check download token status",
        "description" : "Check download token status, possible status values: READY, IN_PROGRESS. Returns a pre-signed URL valid for one hour once the status is READY",
        "operationId" : "checkDownloadTokenStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of Task Execution",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Download token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/DownloadLogsStatus"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found - resource not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Server error - something went wrong on server side",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/permissions" : {
      "get" : {
        "tags" : [ "workspaces :: permissions" ],
        "summary" : "Retrieve all workspace permissions according to search criteria",
        "description" : "It retrieves all workspace permissions according to several criteria:\n\nenvironment : One environment of the account\nworkspace : One workspace of one environment of the account\nuser : One user of the account",
        "operationId" : "getPermissions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "environmentId",
          "in" : "query",
          "description" : "The environment id (Optional)\nExample Value: 6089228181ef4423736e47a8",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "workspaceId",
          "in" : "query",
          "description" : "The workspace id (Optional)\nExample Value: 6089228181ef4423736e47a9",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "query",
          "description" : "The user id (Optional)\nExample Value: b9e10a3f-9d68-44bb-862f-b2aa56dc7191",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Permission"
              }
            }
          },
          "400" : {
            "description" : "Invalid parameters",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "The environment id or the workspace id or the user id does not exist",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/permissions/batch" : {
      "post" : {
        "tags" : [ "workspaces :: permissions" ],
        "summary" : "Create sets of workspace permissions",
        "description" : "Create sets of workspace permissions on the current system. Allows to upload list of workspace permissions to be created.Creation actions will be applied in the same order as defined in the list",
        "operationId" : "createPermissions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The collection of permissions to create.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Permission"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "All changes on Permissions were successful"
          },
          "207" : {
            "description" : "Execution result detailed status on elementary changes rejected.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PermissionResult"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to change permissions",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "The workspace id or the user does not exist",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "workspaces :: permissions" ],
        "summary" : "Update sets of workspace permissions",
        "description" : "Update sets of workspace permissions on the current system. Allows to upload list of workspace permissions to be updated.Update actions will be applied in the same order as defined in the list",
        "operationId" : "updatePermissions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The collection of permissions to update.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Permission"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "All changes on Permissions were successful"
          },
          "207" : {
            "description" : "Execution result detailed status on elementary changes rejected.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PermissionResult"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to change permissions",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "The workspace id or the user does not exist",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "workspaces :: permissions" ],
        "summary" : "Delete workspace permissions",
        "description" : "Remove all permissions where user id is one from specified ones with request AND workspace is one from specified ones with request.\nSpecial case: empty collection for users means that permissions for all users and specified workspaces will be deleted (and vise versa).",
        "operationId" : "deletePermissions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceIds",
          "in" : "query",
          "description" : "Workspace ids list used to compute permission intersections with specified users.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "userIds",
          "in" : "query",
          "description" : "User ids list used to compute permission intersections with specified workspaces.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "204" : {
            "description" : "All changes on Permissions were successful"
          },
          "207" : {
            "description" : "Execution result detailed status on elementary changes rejected.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PermissionDeleteResult"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to change permissions",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "The workspace id or the user does not exist",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/projects" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Get Projects",
        "description" : "Get Projects",
        "operationId" : "getProjects",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "project name filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Create Project",
        "description" : "Create Project",
        "operationId" : "createProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "project",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectCreateRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/ProjectView"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Project already exists",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/projects/{id}/groups" : {
      "get" : {
        "tags" : [ "projects :: authorization" ],
        "summary" : "Get group project authorizations",
        "description" : "Get group project authorizations",
        "operationId" : "getGroupProjectAuthorizations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProjectGroupAuthResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/projects/{projectId}" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Get Project by id",
        "description" : "Get Project by id",
        "operationId" : "getProject",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProjectView"
            }
          },
          "400" : {
            "description" : "Project Id is not valid id.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "projects" ],
        "summary" : "Update Project",
        "description" : "Update Project",
        "operationId" : "updateProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "project",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProjectView"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Project already exists",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "projects" ],
        "summary" : "Delete project",
        "description" : "Delete project",
        "operationId" : "deleteProject",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/projects/{projectId}/groups/{groupId}" : {
      "put" : {
        "tags" : [ "projects :: authorization" ],
        "summary" : "Add group project authorization",
        "description" : "Add group project authorization",
        "operationId" : "addGroupProjectAuthorization",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "group ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Authorization already exists",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "projects :: authorization" ],
        "summary" : "Delete group project authorization",
        "description" : "Delete group project authorization",
        "operationId" : "deleteGroupProjectAuthorizations",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/projects/{projectId}/users" : {
      "get" : {
        "tags" : [ "projects :: authorization" ],
        "summary" : "Get user project authorizations",
        "description" : "Get user project authorizations",
        "operationId" : "getUserProjectAuthorizations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProjectUserAuthResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/projects/{projectId}/users/{userId}" : {
      "put" : {
        "tags" : [ "projects :: authorization" ],
        "summary" : "Add user project authorization",
        "description" : "Add user project authorization",
        "operationId" : "addUserProjectAuthorization",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "user ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Authorization already exists",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "projects :: authorization" ],
        "summary" : "Delete user project authorization",
        "description" : "Delete user project authorization",
        "operationId" : "deleteUserProjectAuthorizations",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "project ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/resources" : {
      "get" : {
        "tags" : [ "resources" ],
        "summary" : "Get Resources",
        "description" : "",
        "operationId" : "getResources",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Resource name filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "resources" ],
        "summary" : "Create a Resource",
        "description" : "",
        "operationId" : "createResource",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "resource",
          "in" : "formData",
          "description" : "Resource detail",
          "required" : true,
          "type" : "string",
          "x-example" : "{    \"name\": \"resource name\",    \"description\": \"resource description\",    \"workspaceId\": \"workspace id\",    \"file\": true}"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "Resource file",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "201" : {
            "description" : "Created successfully",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Workspace id not found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Duplicate name.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "413" : {
            "description" : "Upload limit exceeded",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/resources/{id}" : {
      "get" : {
        "tags" : [ "resources" ],
        "summary" : "Get Resource by id",
        "description" : "Get Resource by id",
        "operationId" : "getResource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Resource id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "resources" ],
        "summary" : "Update a Resource",
        "description" : "",
        "operationId" : "updateResource",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Resource ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Resource detail",
          "description" : "Resource detail",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateResourceRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "no content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "resources" ],
        "summary" : "Delete a Resource",
        "description" : "",
        "operationId" : "deleteResource",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Resource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "no content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Resource is in use",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/resources/{id}/upload" : {
      "put" : {
        "tags" : [ "resources" ],
        "summary" : "Update a Resource attachment",
        "description" : "",
        "operationId" : "updateResourceAttachment",
        "consumes" : [ "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Resource ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "Resource file",
          "required" : false,
          "type" : "file"
        } ],
        "responses" : {
          "204" : {
            "description" : "no content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "413" : {
            "description" : "Upload limit exceeded",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines" : {
      "get" : {
        "tags" : [ "runtime :: pipeline engines" ],
        "summary" : "Get Pipeline Engines",
        "description" : "Get Pipeline Engines",
        "operationId" : "getPipelineEngines",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "search query (FIQL format), e.g. \"workspace.environment.id==5cb47ca4b1b5247f6006529e\",\"status==PAIRED\"",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PipelineEngine"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "runtime :: pipeline engines" ],
        "summary" : "Create new Pipeline Engine",
        "description" : "Create new Pipeline Engine",
        "operationId" : "createPipelineEngine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "pipeline engine",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PipelineEngineRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/PipelineEngine"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}" : {
      "get" : {
        "tags" : [ "runtime :: pipeline engines" ],
        "summary" : "Get Pipeline Engine by id",
        "description" : "Get Pipeline Engine by id",
        "operationId" : "getPipelineEngine",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "pipeline engine id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PipelineEngine"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "runtime :: pipeline engines" ],
        "summary" : "Delete Pipeline Engine by id",
        "description" : "Delete Pipeline Engine by id",
        "operationId" : "deletePipelineEngine",
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "pipeline engine id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/pairing" : {
      "delete" : {
        "tags" : [ "runtime :: pipeline engines" ],
        "summary" : "Unpair Pipeline Engine",
        "description" : "Unpair Pipeline Engine",
        "operationId" : "unpairPipelineEngine",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "pipeline engine id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles" : {
      "get" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles" ],
        "summary" : "Get run profile for engine",
        "description" : "",
        "operationId" : "getRunProfileByEngineId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PipelineRunProfileResponse"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/advanced" : {
      "post" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: advanced" ],
        "summary" : "Create new run profile",
        "description" : "",
        "operationId" : "createRunProfileAdvanced",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AdvancedRunProfile"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/advanced/{runProfileId}" : {
      "get" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: advanced" ],
        "summary" : "Get run profile",
        "description" : "",
        "operationId" : "getAdvancedRunProfileById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AdvancedRunProfile"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: advanced" ],
        "summary" : "Update run profile",
        "description" : "",
        "operationId" : "updateRunProfileAdvanced",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "run profile",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AdvancedRunProfile"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/big-data" : {
      "post" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: big-data" ],
        "summary" : "Create new run profile",
        "description" : "",
        "operationId" : "createRunProfileBigData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BigDataRunProfile"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/big-data/{runProfileId}" : {
      "get" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: big-data" ],
        "summary" : "Get run profile",
        "description" : "",
        "operationId" : "getBigDataRunProfileById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BigDataRunProfile"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: big-data" ],
        "summary" : "Update run profile",
        "description" : "",
        "operationId" : "updateRunProfileBigData",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "run profile",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BigDataRunProfile"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/data-integration" : {
      "post" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: data-integration" ],
        "summary" : "Create new data integration run profile",
        "description" : "",
        "operationId" : "createDataIntegrationRunProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DataIntegrationRunProfile"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/data-integration/{runProfileId}" : {
      "get" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: data-integration" ],
        "summary" : "Get data integration run profile",
        "description" : "",
        "operationId" : "getDataIntegrationRunProfileById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DataIntegrationRunProfileResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: data-integration" ],
        "summary" : "Update data integration run profile",
        "description" : "",
        "operationId" : "updateRunProfileDataIntegration",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "run profile",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DataIntegrationRunProfile"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/databricks" : {
      "post" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: databricks" ],
        "summary" : "Create new run profile",
        "description" : "",
        "operationId" : "createRunProfileDatabricks",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DatabricksRunProfile"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/databricks/{runProfileId}" : {
      "get" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: databricks" ],
        "summary" : "Get run profile",
        "description" : "",
        "operationId" : "getDatabricksRunProfileById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DatabricksRunProfile"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: databricks" ],
        "summary" : "Update run profile",
        "description" : "",
        "operationId" : "updateRunProfileDatabricks",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "run profile",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DatabricksRunProfile"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/standard" : {
      "post" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: standard" ],
        "summary" : "Create new run profile",
        "description" : "",
        "operationId" : "createRunProfileStandard",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StandardRunProfile"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/standard/{runProfileId}" : {
      "get" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: standard" ],
        "summary" : "Get run profile",
        "description" : "",
        "operationId" : "getStandardRunProfileById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StandardRunProfileResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles :: standard" ],
        "summary" : "Update run profile",
        "description" : "",
        "operationId" : "updateRunProfileStandard",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "run profile",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StandardRunProfile"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/pipeline-engines/{engineId}/run-profiles/{type}/{runProfileId}" : {
      "delete" : {
        "tags" : [ "runtime :: pipeline engines :: run profiles" ],
        "summary" : "Delete run profile",
        "description" : "",
        "operationId" : "deletePipelineRunProfile",
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "path",
          "description" : "run profile type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "newRunProfileId",
          "in" : "query",
          "description" : "run profile for replacement id",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engine-clusters" : {
      "get" : {
        "tags" : [ "runtime :: clusters" ],
        "summary" : "Get all (available) Remote Engine Clusters",
        "description" : "Get all (available) Remote Engine Clusters",
        "operationId" : "getEngineClustersAvailable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "_s",
          "in" : "query",
          "description" : "search query (FIQL format), e.g. \"workspace.environment.id==5cb47ca4b1b5247f6006529e\",\"name==NewCluster\"",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BaseEngine"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "runtime :: clusters" ],
        "summary" : "Create Remote Engine Cluster",
        "description" : "Create Remote Engine Cluster",
        "operationId" : "createRemoteEngineCluster",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Remote Engine Cluster",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ClusterRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/EngineCluster"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engine-clusters/{clusterId}" : {
      "get" : {
        "tags" : [ "runtime :: clusters" ],
        "summary" : "Get Remote Engine Cluster by id",
        "description" : "Get Remote Engine Cluster by id",
        "operationId" : "getRemoteEngineCluster",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "clusterId",
          "in" : "path",
          "description" : "remote engine cluster id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/EngineCluster"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "runtime :: clusters" ],
        "summary" : "Delete Remote Engine Cluster by id",
        "description" : "Delete Remote Engine Cluster by id",
        "operationId" : "deleteRemoteEngineCluster",
        "parameters" : [ {
          "name" : "clusterId",
          "in" : "path",
          "description" : "remote engine cluster id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engine-clusters/{clusterId}/engines/{engineId}" : {
      "put" : {
        "tags" : [ "runtime :: clusters" ],
        "summary" : "Add Remote Engine to Remote Engine Cluster with reschedule",
        "description" : "Add Remote Engine to Remote Engine Cluster with reschedule",
        "operationId" : "addRemoteEngineToCluster",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "clusterId",
          "in" : "path",
          "description" : "remote engine cluster id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "engineId",
          "in" : "path",
          "description" : "remote engine id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "run profile reschedule options",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RunProfileRescheduleOptions"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "runtime :: clusters" ],
        "summary" : "Remove Remote Engine from Remote Engine Cluster",
        "description" : "Remove Remote Engine from Remote Engine Cluster",
        "operationId" : "removeRemoteEngineFromCluster",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "clusterId",
          "in" : "path",
          "description" : "remote engine cluster id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "engineId",
          "in" : "path",
          "description" : "remote engine id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engine-clusters/{clusterId}/run-profiles" : {
      "get" : {
        "tags" : [ "runtime :: clusters :: run-profiles" ],
        "summary" : "Get cluster run profiles",
        "description" : "Get cluster run profiles",
        "operationId" : "getClusterRunProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "clusterId",
          "in" : "path",
          "description" : "cluster id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of run profiles to be returned. By default returns all",
          "required" : false,
          "type" : "string",
          "enum" : [ "JOB_SERVER", "MICROSERVICE", "TALEND_RUNTIME" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RuntimeRunProfile"
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Cluster not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "runtime :: clusters :: run-profiles" ],
        "summary" : "Create cluster run profile",
        "description" : "Create cluster run profile",
        "operationId" : "createClusterRunProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "clusterId",
          "in" : "path",
          "description" : "cluster id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "run profile",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RunProfileRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/RuntimeRunProfile"
            }
          },
          "400" : {
            "description" : "Bad run profile definition",
            "schema" : {
              "$ref" : "#/definitions/RuntimeRunProfile"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "No cluster can be found by provided",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Run profile with corresponding name already exists for given runtime",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engine-clusters/{clusterId}/run-profiles/{runProfileId}" : {
      "get" : {
        "tags" : [ "runtime :: clusters :: run-profiles" ],
        "summary" : "Get cluster run profile",
        "description" : "Get cluster run profile",
        "operationId" : "getClusterRunProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "clusterId",
          "in" : "path",
          "description" : "cluster id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RuntimeRunProfile"
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Run profle not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "runtime :: clusters :: run-profiles" ],
        "summary" : "Update cluster run profile",
        "description" : "Update cluster run profile",
        "operationId" : "updateClusterRunProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "clusterId",
          "in" : "path",
          "description" : "cluster id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "run profile",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RunProfileUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RuntimeRunProfile"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "No run profile can be found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "runtime :: clusters :: run-profiles" ],
        "summary" : "Delete cluster run profile",
        "description" : "Delete cluster run profile",
        "operationId" : "deleteClusterRunProfile",
        "parameters" : [ {
          "name" : "clusterId",
          "in" : "path",
          "description" : "cluster id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "newRunProfileId",
          "in" : "query",
          "description" : "new run profile id",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "No run profile can be found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engines" : {
      "get" : {
        "tags" : [ "runtime :: engines" ],
        "summary" : "Get all (available) Remote Engines",
        "description" : "Get all (available) Remote Engines",
        "operationId" : "getRemoteEngines",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "search query (FIQL format), e.g. \"workspace.environment.id==5cb47ca4b1b5247f6006529e\",\"status==PAIRED\"",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Engine"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "runtime :: engines" ],
        "summary" : "Create new Remote Engine",
        "description" : "Create new Remote Engine",
        "operationId" : "createRemoteEngine",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "remote engine",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EngineRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Engine"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engines/{engineId}/run-profiles" : {
      "get" : {
        "tags" : [ "runtime :: engines :: run-profiles" ],
        "summary" : "Get all engine run profiles",
        "description" : "Get all engine run profiles",
        "operationId" : "getEngineRunProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "remote engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of run profiles to be returned. By default returns all",
          "required" : false,
          "type" : "string",
          "enum" : [ "JOB_SERVER", "MICROSERVICE", "TALEND_RUNTIME" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RuntimeRunProfile"
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Engine not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "runtime :: engines :: run-profiles" ],
        "summary" : "Create engine run profile",
        "description" : "Create engine run profile",
        "operationId" : "createEngineRunProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "remote engine id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "run profile",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RunProfileRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/RuntimeRunProfile"
            }
          },
          "400" : {
            "description" : "Bad run profile definition",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "No engine can be found by provided",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Run profile with corresponding name already exists for given runtime",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engines/{engineId}/run-profiles/{runProfileId}" : {
      "get" : {
        "tags" : [ "runtime :: engines :: run-profiles" ],
        "summary" : "Get engine run profile by id",
        "description" : "Get engine run profile by id",
        "operationId" : "getEngineRunProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "remote engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RuntimeRunProfile"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Run profile not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "runtime :: engines :: run-profiles" ],
        "summary" : "Update engine run profile",
        "description" : "Update engine run profile",
        "operationId" : "updateEngineRunProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "remote engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "update run profile",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RunProfileUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RuntimeRunProfile"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Run profile not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "runtime :: engines :: run-profiles" ],
        "summary" : "Delete engine run profile",
        "description" : "Delete engine run profile",
        "operationId" : "deleteEngineRunProfile",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "engineId",
          "in" : "path",
          "description" : "remote engine id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runProfileId",
          "in" : "path",
          "description" : "run profile id to delete",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "newRunProfileId",
          "in" : "query",
          "description" : "new run profile id",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "Run Profile deleted."
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "No run profile can be found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engines/{id}" : {
      "get" : {
        "tags" : [ "runtime :: engines" ],
        "summary" : "Get Remote Engine by id",
        "description" : "Get Remote Engine by id",
        "operationId" : "getRemoteEngine",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "remote engine id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Engine"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "runtime :: engines" ],
        "summary" : "Delete Remote Engine by id",
        "description" : "Delete Remote Engine by id",
        "operationId" : "deleteRemoteEngine",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "remote engine id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engines/{id}/pairing" : {
      "delete" : {
        "tags" : [ "runtime :: engines" ],
        "summary" : "Unpair Remote Engine",
        "description" : "Unpair Remote Engine",
        "operationId" : "unpairRemoteEngine",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "remote engine id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/runtimes/remote-engines/{remoteEngineId}/debug" : {
      "put" : {
        "tags" : [ "runtime :: engines" ],
        "summary" : "Debug Remote Engine",
        "description" : "Debug Remote Engine",
        "operationId" : "debugRemoteEngine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "remoteEngineId",
          "in" : "path",
          "description" : "Remote Engine ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Debug Remote Engine Parameters",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DebugRemoteEngineModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated",
            "schema" : {
              "$ref" : "#/definitions/Engine"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/schedules" : {
      "get" : {
        "tags" : [ "schedules" ],
        "summary" : "Get schedules list",
        "description" : "",
        "operationId" : "getAllSchedulesMultipleTriggers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "environmentId",
          "in" : "query",
          "description" : "Schedulers matching environmentId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "descriptionFilter",
          "in" : "query",
          "description" : "Schedulers matching description filter (regular expression)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "onlyBound",
          "in" : "query",
          "description" : "Only bound schedulers",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "schedules" ],
        "summary" : "Create schedule for multiple triggers",
        "description" : "",
        "operationId" : "createScheduleMultipleTriggers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Schedule with first trigger",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateScheduleMultipleTriggerRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/schedules/{scheduleId}" : {
      "get" : {
        "tags" : [ "schedules" ],
        "summary" : "Get schedule by id",
        "description" : "",
        "operationId" : "getScheduleMultipleTriggers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "schedule id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "schedules" ],
        "summary" : "Clone schedule  multiple triggers",
        "description" : "",
        "operationId" : "cloneScheduleMultipleTriggers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "schedule id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Target name of the schedule",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateScheduleMultipleTriggerRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "schedules" ],
        "summary" : "Delete schedule by id",
        "description" : "",
        "operationId" : "deleteScheduleMultipleTriggers",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "schedule id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "The schedule is currently used by an executable",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "schedules" ],
        "summary" : "Apply partial changes to a schedule",
        "description" : "",
        "operationId" : "updateScheduleMultipleTriggers",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "schedules id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Description update",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateScheduleMultipleTriggerRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "428" : {
            "description" : "Precondition Required",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/schedules/{scheduleId}/events" : {
      "get" : {
        "tags" : [ "schedules" ],
        "summary" : "Simulate schedule events",
        "description" : "",
        "operationId" : "simulateNextTriggeredEvents",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "schedules id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "from date time (milliseconds)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "to date time (milliseconds)",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of items to return. Must be in range [1, 100]. Default value - 100",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "the position of the first item. Must be greater than or equal to 0. Default value - 0",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "428" : {
            "description" : "Precondition Required",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/schedules/{scheduleId}/triggers" : {
      "post" : {
        "tags" : [ "schedules" ],
        "summary" : "Append a trigger to a schedule ",
        "description" : "",
        "operationId" : "appendTriggerToScheduleMultiple",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "schedules id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Trigger",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipleTrigger"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "428" : {
            "description" : "Precondition Required",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "schedules" ],
        "summary" : "Update a trigger within a schedule ",
        "description" : "",
        "operationId" : "updateTriggerInScheduleMultiple",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "schedules id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Trigger",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipleTrigger"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "428" : {
            "description" : "Precondition Required",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "schedules" ],
        "summary" : "Delete schedule trigger by name",
        "description" : "",
        "operationId" : "deleteTriggerFromScheduleMultiple",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "schedule id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/subscription" : {
      "get" : {
        "tags" : [ "account :: subscription " ],
        "summary" : "Get account subscription information",
        "description" : "",
        "operationId" : "subscriptionGet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Subscription"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden - no permissions to access resource"
          },
          "404" : {
            "description" : "Subscription not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/workspaces" : {
      "get" : {
        "tags" : [ "workspaces" ],
        "summary" : "Get available Workspaces",
        "description" : "Get available Workspaces",
        "operationId" : "getWorkspaces",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "search query (FIQL format), e.g. name==TestWorkspace,environment.name==TestEnvironment",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkspaceInfo"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "workspaces" ],
        "summary" : "Create a workspace ",
        "description" : "Create a workspace.",
        "operationId" : "createCustomWorkspace",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateWorkspaceRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Workspace"
            }
          },
          "201" : {
            "description" : "Workspace successfully created",
            "schema" : {
              "$ref" : "#/definitions/Workspace"
            }
          },
          "400" : {
            "description" : "Parameters not valid",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to create the workspace",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "409" : {
            "description" : "Workspace with the same name already exists",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/workspaces/{workspaceId}" : {
      "put" : {
        "tags" : [ "workspaces" ],
        "summary" : "Update workspace",
        "description" : "",
        "operationId" : "updateCustomWorkspace",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Workspace to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateWorkspaceRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Workspace successfully updated"
          },
          "400" : {
            "description" : "Parameters not valid",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to update the environment",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "workspaces" ],
        "summary" : "Delete the workspace for a given id",
        "description" : "",
        "operationId" : "deleteWorkspace",
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to delete the workspace",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Workspace does not exist"
          },
          "409" : {
            "description" : "There are objects in custom workspace that could not be removed"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/workspaces/{workspaceId}/users/{userId}/permissions" : {
      "get" : {
        "tags" : [ "workspaces :: permissions" ],
        "summary" : "Read a workspace permission",
        "description" : "Read a permission of a user on a workspace.",
        "operationId" : "getWorkspacePermission",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "description" : "The workspace where rights will be applied. Example Value: 6089228181ef4423736e47a9",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The user for which rights will be applied. Example Value: b9e10a3f-9d68-44bb-862f-b2aa56dc7191",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Permission"
            }
          },
          "400" : {
            "description" : "Parameters not valid",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to change permission",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Permission not found",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "workspaces :: permissions" ],
        "summary" : "Create a workspace permission",
        "description" : "Create a permission of a user on a workspace.",
        "operationId" : "createWorkspacePermissions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "description" : "The workspace where rights will be applied. Example Value: 6089228181ef4423736e47a9",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The user for which rights will be applied. Example Value: b9e10a3f-9d68-44bb-862f-b2aa56dc7191",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Rights to add on the permission.\nExample: [\"AUTHOR\",\"EXECUTE\"]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AUTHOR", "EXECUTE", "VIEW", "MANAGE", "PUBLISH" ]
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Permission successfully created"
          },
          "400" : {
            "description" : "Parameters not valid",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to update the permission",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "The workspace or the user does not exist",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "workspaces :: permissions" ],
        "summary" : "Update a workspace permission",
        "description" : "Update a permission of a user on a workspace.",
        "operationId" : "updateWorkspacePermissions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "description" : "The workspace where rights will be applied. Example Value: 6089228181ef4423736e47a9",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The user for which rights will be applied. Example Value: b9e10a3f-9d68-44bb-862f-b2aa56dc7191",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Rights to update on the permission.\nExample: [\"AUTHOR\",\"EXECUTE\"]",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AUTHOR", "EXECUTE", "VIEW", "MANAGE", "PUBLISH" ]
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Parameters not valid",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to update the permission",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "The permission to update doesn’t exist",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "workspaces :: permissions" ],
        "summary" : "Delete a workspace permission",
        "description" : "Delete a permission of a user on a workspace.",
        "operationId" : "deleteWorkspacePermissions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "description" : "The workspace where rights will be applied. Example Value: 6089228181ef4423736e47a9",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The user for which rights will be applied. Example Value: b9e10a3f-9d68-44bb-862f-b2aa56dc7191",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Parameters not valid",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "403" : {
            "description" : "Not authorized to delete permission",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "The permission to delete doesn’t exist",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Authorization" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "AdvancedPromotionSpec" : {
      "type" : "object",
      "properties" : {
        "artifactId" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Advanced Promotion Artifact Id"
        },
        "artifactType" : {
          "type" : "string",
          "example" : "WORKSPACE",
          "description" : "Advanced Promotion Artifact Type. In the following list of allowed values, 'ACTION' refers to Artifacts, 'FLOW' refers to Tasks, 'PLAN' refers to Plans and 'WORKSPACE' refers to Workspaces",
          "enum" : [ "WORKSPACE", "PLAN", "FLOW", "ACTION" ]
        }
      }
    },
    "AdvancedRunProfile" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default run profile",
          "description" : "Name"
        },
        "description" : {
          "type" : "string",
          "example" : "Run profile used by default",
          "description" : "Description"
        },
        "engineId" : {
          "type" : "string",
          "example" : "5f7eff3245ecf259a1c56daa",
          "description" : "Pipeline engine id"
        },
        "pushdownPreferenceEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Pushdown enable"
        },
        "warehouseName" : {
          "type" : "string",
          "example" : "DWH name",
          "description" : "Data warehouse name"
        },
        "definition" : {
          "type" : "string",
          "example" : "{\"id\": 1}",
          "description" : "Json with definition"
        }
      },
      "description" : "Pipeline run profile of type 'Advanced'"
    },
    "Artifact" : {
      "type" : "object",
      "required" : [ "id", "name", "type", "versions", "workspace" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "5cdd2ce2c737973f9d581b99",
          "description" : "Artifact identifier"
        },
        "name" : {
          "type" : "string",
          "example" : "Test Artifact",
          "description" : "Artifact name"
        },
        "type" : {
          "type" : "string",
          "example" : "standard",
          "description" : "Artifact type",
          "enum" : [ "standard", "big_data_streaming", "big_data_batch", "route", "data-service" ]
        },
        "versions" : {
          "type" : "array",
          "example" : ["0.1.0", "0.1.1"],
          "description" : "Available artifact versions",
          "items" : {
            "type" : "string"
          }
        },
        "workspace" : {
          "description" : "Artifact workspace",
          "$ref" : "#/definitions/WorkspaceInfo"
        }
      }
    },
    "ArtifactParameter" : {
      "type" : "object",
      "required" : [ "name", "required", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "parameter_url",
          "description" : "Parameter name"
        },
        "value" : {
          "type" : "string",
          "example" : "localhost",
          "description" : "Parameter value"
        },
        "type" : {
          "type" : "string",
          "example" : "String",
          "description" : "Parameter value"
        },
        "required" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Is parameter required or not"
        },
        "comment" : {
          "type" : "string",
          "example" : "parameter for test",
          "description" : "Comment about parameter"
        }
      }
    },
    "ArtifactPromotionResult" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Artifact ID"
        },
        "targetId" : {
          "type" : "string",
          "description" : "Target Artifact ID"
        },
        "name" : {
          "type" : "string",
          "description" : "Artifact Name"
        },
        "type" : {
          "type" : "string",
          "example" : "WORKSPACE",
          "description" : "Artifact Type",
          "enum" : [ "WORKSPACE", "PLAN", "FLOW", "ACTION", "CONNECTION", "RESOURCE", "ENGINE", "CLUSTER" ]
        },
        "analyzeReport" : {
          "description" : "Promotion Analyze Report",
          "$ref" : "#/definitions/Report"
        },
        "promotionReport" : {
          "description" : "Promotion Report",
          "$ref" : "#/definitions/Report"
        },
        "workspaceId" : {
          "type" : "string",
          "description" : "Workspace id"
        },
        "targetVersion" : {
          "type" : "string",
          "description" : "Artifact target version"
        },
        "version" : {
          "type" : "string",
          "description" : "Artifact version"
        },
        "jobType" : {
          "type" : "string",
          "description" : "Job type"
        },
        "usedBy" : {
          "type" : "array",
          "description" : "Used by Artifacts",
          "items" : {
            "$ref" : "#/definitions/PromotionResultInfo"
          }
        },
        "versions" : {
          "type" : "array",
          "description" : "Artifact versions",
          "items" : {
            "$ref" : "#/definitions/ArtifactVersionPromotionResult"
          }
        }
      }
    },
    "ArtifactRequest" : {
      "type" : "object",
      "required" : [ "id", "version" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "5c1111d7a4186a4eafed0587",
          "description" : "Id of artifact"
        },
        "version" : {
          "type" : "string",
          "example" : "0.1.0",
          "description" : "Artifact version"
        }
      }
    },
    "ArtifactVersion" : {
      "type" : "object",
      "required" : [ "id", "marketplaceProduct", "parameters", "publisher", "type", "version", "workspace" ],
      "properties" : {
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "5c1111d7a4186a4eafed0587",
          "description" : "Id of artifact"
        },
        "name" : {
          "type" : "string",
          "example" : "Hello world artifact",
          "description" : "Name of artifact"
        },
        "version" : {
          "type" : "string",
          "example" : "0.1.0",
          "description" : "Artifact version"
        },
        "type" : {
          "type" : "string",
          "example" : "standard",
          "description" : "Artifact type",
          "enum" : [ "standard", "big_data_streaming", "big_data_batch", "route", "data-service" ]
        },
        "publisher" : {
          "type" : "string",
          "example" : "admin",
          "description" : "Artifact publisher"
        },
        "marketplaceProduct" : {
          "type" : "string",
          "example" : "Talend Data Fabric (tp_bd_7.2.1.20190612_1410)",
          "description" : "Marketplace product"
        },
        "parameters" : {
          "type" : "array",
          "description" : "Artifact parameters",
          "items" : {
            "$ref" : "#/definitions/ArtifactParameter"
          }
        },
        "workspace" : {
          "description" : "Artifact workspace",
          "$ref" : "#/definitions/WorkspaceInfo"
        },
        "description" : {
          "type" : "string",
          "example" : "This is test artifact",
          "description" : "Artifact description"
        },
        "repository" : {
          "description" : "Artifact git info",
          "$ref" : "#/definitions/SourcesRepositoryData"
        }
      }
    },
    "ArtifactVersionPromotionResult" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Artifact ID"
        },
        "targetId" : {
          "type" : "string",
          "description" : "Target Artifact ID"
        },
        "name" : {
          "type" : "string",
          "description" : "Artifact Name"
        },
        "type" : {
          "type" : "string",
          "example" : "WORKSPACE",
          "description" : "Artifact Type",
          "enum" : [ "WORKSPACE", "PLAN", "FLOW", "ACTION", "CONNECTION", "RESOURCE", "ENGINE", "CLUSTER" ]
        },
        "analyzeReport" : {
          "description" : "Promotion Analyze Report",
          "$ref" : "#/definitions/Report"
        },
        "promotionReport" : {
          "description" : "Promotion Report",
          "$ref" : "#/definitions/Report"
        },
        "workspaceId" : {
          "type" : "string",
          "description" : "Workspace id"
        },
        "targetVersion" : {
          "type" : "string",
          "description" : "Artifact target version"
        },
        "version" : {
          "type" : "string",
          "description" : "Artifact version"
        },
        "jobType" : {
          "type" : "string",
          "description" : "Job type"
        },
        "usedBy" : {
          "type" : "array",
          "description" : "Used by Artifacts",
          "items" : {
            "$ref" : "#/definitions/PromotionResultInfo"
          }
        },
        "versions" : {
          "type" : "array",
          "description" : "Artifact versions",
          "items" : {
            "$ref" : "#/definitions/ArtifactVersionPromotionResult"
          }
        },
        "artifactId" : {
          "type" : "string",
          "description" : "Artifact ID"
        }
      }
    },
    "AutoUpgradeInfo" : {
      "type" : "object",
      "properties" : {
        "autoUpgradable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether to automatically upgrade task after publishing new artifact version"
        },
        "overrideWithDefaultParameters" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether to override task parameters with artifact default parameters during auto upgrade"
        }
      }
    },
    "BaseArtifactVersion" : {
      "type" : "object",
      "required" : [ "id", "version" ],
      "properties" : {
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "5c1111d7a4186a4eafed0587",
          "description" : "Id of artifact"
        },
        "name" : {
          "type" : "string",
          "example" : "Hello world artifact",
          "description" : "Name of artifact"
        },
        "version" : {
          "type" : "string",
          "example" : "0.1.0",
          "description" : "Artifact version"
        }
      }
    },
    "BaseEngine" : {
      "type" : "object",
      "required" : [ "id", "name", "runtimeId" ],
      "properties" : {
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "5cdd2ce2c737973f9d581b98",
          "description" : "Resource id"
        },
        "name" : {
          "type" : "string",
          "example" : "Remote Engine",
          "description" : "Resource name"
        },
        "description" : {
          "type" : "string",
          "example" : "Some description",
          "description" : "Resource description"
        },
        "workspace" : {
          "description" : "Resource workspace",
          "$ref" : "#/definitions/WorkspaceInfo"
        },
        "runtimeId" : {
          "type" : "string",
          "example" : "9e8acf72-00d5-451b-9175-97bd44cd6b13",
          "description" : "Resource runtime id"
        },
        "availability" : {
          "type" : "string",
          "example" : "NOT_AVAILABLE",
          "description" : "Availability status of engine|cluster",
          "enum" : [ "AVAILABLE", "NOT_AVAILABLE", "RETIRED" ]
        },
        "managed" : {
          "type" : "boolean",
          "description" : "Indicates whether target runtime (engine/cluster) is managed or not"
        }
      }
    },
    "BigDataRunProfile" : {
      "type" : "object",
      "required" : [ "executorMemoryOverhead", "microBatchInterval", "name", "streamingTimeout", "temporaryStorage", "yarnStrategy" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default run profile",
          "description" : "Name"
        },
        "description" : {
          "type" : "string",
          "example" : "Run profile used by default",
          "description" : "Description"
        },
        "engineId" : {
          "type" : "string",
          "example" : "5f7eff3245ecf259a1c56daa",
          "description" : "Pipeline engine id"
        },
        "distribution" : {
          "type" : "string",
          "example" : "EMR 5.x (Hadoop 2.7)",
          "description" : "Distribution"
        },
        "executionFramework" : {
          "type" : "string",
          "example" : "Spark on Yarn",
          "description" : "Execution framework"
        },
        "microBatchInterval" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1000,
          "description" : "Micro-batch interval (in ms)"
        },
        "streamingTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Streaming timeout (in ms)"
        },
        "yarnQueue" : {
          "type" : "string",
          "example" : "q1",
          "description" : "Yarn queue"
        },
        "driverCores" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Driver cores"
        },
        "driverMemory" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 512,
          "description" : "Driver cores (in MB)"
        },
        "temporaryStorage" : {
          "type" : "string",
          "example" : "/tmp-storage",
          "description" : "Temporary storage"
        },
        "yarnStrategy" : {
          "description" : "Yarn strategy",
          "$ref" : "#/definitions/YarnStrategy"
        },
        "executorMemoryOverhead" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 384,
          "description" : "Execution memory overhead (MB)"
        },
        "isCheckpointingEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Checkpointing"
        },
        "checkPointFilePath" : {
          "type" : "string",
          "example" : "/file-path",
          "description" : "Checkpoint file path. Required if checkpointing enabled"
        },
        "parameters" : {
          "type" : "object",
          "example" : {"memory":"512","cpu":"1"},
          "description" : "Parameters",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "Pipeline run profile of type 'Big Data'"
    },
    "CloudStorageLog" : {
      "type" : "object",
      "properties" : {
        "severity" : {
          "type" : "string"
        },
        "logType" : {
          "type" : "string"
        },
        "logTimestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "logMessage" : {
          "type" : "string"
        },
        "bundleName" : {
          "type" : "string"
        },
        "bundleVersion" : {
          "type" : "string"
        }
      }
    },
    "ClusterRequest" : {
      "type" : "object",
      "required" : [ "description", "environmentId", "name", "remoteEngines", "workspaceId" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Some cluster name",
          "description" : "Cluster name"
        },
        "workspaceId" : {
          "type" : "string",
          "example" : "5c935c8ba4186a4eafed0592",
          "description" : "Workspace identifier"
        },
        "environmentId" : {
          "type" : "string",
          "example" : "5c935c8ba4186a4eafed0592",
          "description" : "Environment identifier"
        },
        "description" : {
          "type" : "string",
          "example" : "some description",
          "description" : "Cluster description"
        },
        "remoteEngines" : {
          "type" : "array",
          "example" : ["5d3039de65ff7d3583840bc0", "5d3039de65ff7d3583840bk1"],
          "description" : "List of remote engine ids",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Configuration" : {
      "type" : "object",
      "required" : [ "microBatchInterval", "numberOfThreads" ],
      "properties" : {
        "parameters" : {
          "type" : "object",
          "example" : {"memory":"512","cpu":"1"},
          "description" : "Parameters",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "numberOfThreads" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Number of threads"
        },
        "microBatchInterval" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1000,
          "description" : "Micro-batch interval (in ms)"
        }
      }
    },
    "ConnectionDetails" : {
      "type" : "object",
      "required" : [ "app", "createDate", "id", "name", "parameters", "workspace" ],
      "properties" : {
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Creation Date of Connection"
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "description" : "Connection ID"
        },
        "name" : {
          "type" : "string",
          "description" : "Connection name"
        },
        "app" : {
          "type" : "string",
          "description" : "Application name"
        },
        "parameters" : {
          "type" : "array",
          "description" : "Connection parameters",
          "items" : {
            "$ref" : "#/definitions/ConnectionParameter"
          }
        },
        "workspace" : {
          "$ref" : "#/definitions/WorkspaceInfo"
        }
      }
    },
    "ConnectionParameter" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "param1",
          "description" : "Parameter name"
        },
        "value" : {
          "type" : "string",
          "example" : "value1",
          "description" : "Parameter value"
        },
        "encrypted" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If encrypted or not"
        }
      }
    },
    "CreateConnectionRequest" : {
      "type" : "object",
      "required" : [ "app", "name", "parameters", "workspaceId" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "testConnection",
          "description" : "Connection name"
        },
        "workspaceId" : {
          "type" : "string",
          "example" : "5b3ee8676e8f510dbb3fa806",
          "description" : "Workspace ID"
        },
        "app" : {
          "type" : "string",
          "example" : "Custom",
          "description" : "Application name"
        },
        "parameters" : {
          "type" : "array",
          "description" : "Connection parameters",
          "items" : {
            "$ref" : "#/definitions/ConnectionParameter"
          }
        }
      }
    },
    "CreateEnvironmentRequest" : {
      "type" : "object",
      "required" : [ "name", "owner", "workspaceName" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Development",
          "description" : "Environment name"
        },
        "description" : {
          "type" : "string",
          "example" : "environment detail description",
          "description" : "Environment description"
        },
        "maxCloudContainers" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The max cloud containers count"
        },
        "owner" : {
          "type" : "string",
          "description" : "The owner of the workspace"
        },
        "workspaceName" : {
          "type" : "string",
          "example" : "Personal",
          "description" : "Workspace name"
        }
      }
    },
    "CreatePromotionRequest" : {
      "type" : "object",
      "required" : [ "sourceEnvironmentId", "targetEnvironmentId" ],
      "properties" : {
        "sourceEnvironmentId" : {
          "type" : "string",
          "example" : "5b3ee8676e8f510dbb3fa806",
          "description" : "Source environment ID"
        },
        "targetEnvironmentId" : {
          "type" : "string",
          "example" : "5b3ee8676e8f510dbb3fa807",
          "description" : "Target environment ID"
        },
        "description" : {
          "type" : "string",
          "example" : "This is description",
          "description" : "Promotion description"
        }
      }
    },
    "CreateScheduleMultipleTriggerRequest" : {
      "type" : "object",
      "required" : [ "environmentId", "trigger" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Schedule with five triggers",
          "description" : "Some description related to the usage of the scheduler"
        },
        "environmentId" : {
          "type" : "string",
          "example" : "6089228181ef4423736e47a8",
          "description" : "Environment where this schedule will be available"
        },
        "trigger" : {
          "description" : "Initial trigger to define in the schedule",
          "$ref" : "#/definitions/MultipleTrigger"
        }
      }
    },
    "CreateWorkspaceRequest" : {
      "type" : "object",
      "required" : [ "environmentId", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Personal",
          "description" : "Workspace name"
        },
        "description" : {
          "type" : "string",
          "example" : "Workspace detail description",
          "description" : "Workspace description "
        },
        "owner" : {
          "type" : "string",
          "description" : "The owner of the workspace"
        },
        "environmentId" : {
          "type" : "string",
          "description" : "The environment identifier of the workspace"
        }
      }
    },
    "DataIntegrationRunProfile" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default run profile",
          "description" : "Name"
        },
        "description" : {
          "type" : "string",
          "example" : "Run profile used by default",
          "description" : "Description"
        },
        "jvmArguments" : {
          "type" : "array",
          "example" : [ "-XX:MaxHeapFreeRatio=70", "-XX:PermSize=128m" ],
          "description" : "JVM arguments",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "runtimeId" : {
          "type" : "string",
          "readOnly" : true
        }
      },
      "description" : "Pipeline run profile of type 'Data-integration'"
    },
    "DataIntegrationRunProfileResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default run profile",
          "description" : "Name"
        },
        "description" : {
          "type" : "string",
          "example" : "Run profile used by default",
          "description" : "Description"
        },
        "jvmArguments" : {
          "type" : "array",
          "example" : [ "-XX:MaxHeapFreeRatio=70", "-XX:PermSize=128m" ],
          "description" : "JVM arguments",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "runtimeId" : {
          "type" : "string",
          "readOnly" : true
        },
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Run profile id",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "description" : "Type",
          "readOnly" : true,
          "enum" : [ "standard", "big-data", "databricks", "advanced" ]
        }
      },
      "description" : "Pipeline run profile response for type 'Data-Integration'"
    },
    "Databrick" : {
      "type" : "object",
      "required" : [ "cloudProvider", "endpoint", "stagingLocation", "target" ],
      "properties" : {
        "endpoint" : {
          "type" : "string",
          "example" : "https://endpoint",
          "description" : "Endpoint"
        },
        "token" : {
          "type" : "string",
          "example" : "44e128a5",
          "description" : "Token (can also be provided in the Remote Engine configuration)"
        },
        "stagingLocation" : {
          "type" : "string",
          "example" : "dbfs:/staging/",
          "description" : "DBFS library staging directory"
        },
        "target" : {
          "description" : "Target definition",
          "$ref" : "#/definitions/DatabricksCluster"
        },
        "cloudProvider" : {
          "type" : "string",
          "example" : "AWS",
          "description" : "Cloud provider",
          "enum" : [ "AWS", "Azure" ]
        }
      }
    },
    "DatabricksCluster" : {
      "type" : "object",
      "required" : [ "cluster", "logsDestination", "nodeTypeId", "workersNumber" ],
      "properties" : {
        "cluster" : {
          "type" : "string",
          "example" : "new",
          "description" : "New or existing cluster",
          "enum" : [ "new", "old" ]
        },
        "id" : {
          "type" : "string",
          "example" : "132553",
          "description" : "ID of existing cluster. Required for 'old' cluster"
        },
        "sparkVersion" : {
          "type" : "string",
          "example" : "5.5.x-scala2.11",
          "description" : "Databricks runtime version. Required for 'new' cluster"
        },
        "nodeTypeId" : {
          "type" : "string",
          "example" : "m4.large",
          "description" : "Node type ID. Required for 'new' cluster"
        },
        "logsDestination" : {
          "type" : "string",
          "example" : "dbfs:/cluster-logs",
          "description" : "Logs destination. Required for 'new' cluster"
        },
        "workersNumber" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2,
          "description" : "Number of workers. Required for 'new' cluster"
        }
      }
    },
    "DatabricksRunProfile" : {
      "type" : "object",
      "required" : [ "microBatchInterval", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default run profile",
          "description" : "Name"
        },
        "description" : {
          "type" : "string",
          "example" : "Run profile used by default",
          "description" : "Description"
        },
        "engineId" : {
          "type" : "string",
          "example" : "5f7eff3245ecf259a1c56daa",
          "description" : "Pipeline engine id"
        },
        "microBatchInterval" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1000,
          "description" : "Micro-batch interval (in ms)"
        },
        "databricks" : {
          "$ref" : "#/definitions/Databrick"
        },
        "parameters" : {
          "type" : "object",
          "example" : {"memory":"512","cpu":"1"},
          "description" : "Parameters",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "Pipeline run profile of type 'Databricks'"
    },
    "DaySchedule" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "DAY_OF_WEEK",
          "description" : "Type of schedule at days",
          "enum" : [ "DAY_OF_WEEK", "DAY_OF_MONTH" ]
        },
        "day" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Day of month to run task/plan, required only if type of schedule at days is equal to DAY_OF_MONTH"
        },
        "days" : {
          "type" : "array",
          "example" : ["MONDAY", "WEDNESDAY", "FRIDAY"],
          "description" : "List of days of week to run task/plan, required only if type of schedule at days is equal to DAY_OF_WEEK",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DebugRemoteEngineModel" : {
      "type" : "object",
      "properties" : {
        "host" : {
          "type" : "string",
          "description" : "Host/ip"
        },
        "isDebugModeOn" : {
          "type" : "boolean",
          "description" : "Is debug mode on"
        }
      }
    },
    "DownloadLogs" : {
      "type" : "object",
      "properties" : {
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "token" : {
          "type" : "string"
        }
      }
    },
    "DownloadLogsStatus" : {
      "type" : "object",
      "properties" : {
        "presignedURL" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "READY", "IN_PROGRESS" ]
        }
      }
    },
    "Engine" : {
      "type" : "object",
      "required" : [ "id", "name", "runProfiles", "runtimeId", "status" ],
      "properties" : {
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "5cdd2ce2c737973f9d581b98",
          "description" : "Resource id"
        },
        "name" : {
          "type" : "string",
          "example" : "Remote Engine",
          "description" : "Resource name"
        },
        "description" : {
          "type" : "string",
          "example" : "Some description",
          "description" : "Resource description"
        },
        "workspace" : {
          "description" : "Resource workspace",
          "$ref" : "#/definitions/WorkspaceInfo"
        },
        "runtimeId" : {
          "type" : "string",
          "example" : "9e8acf72-00d5-451b-9175-97bd44cd6b13",
          "description" : "Resource runtime id"
        },
        "availability" : {
          "type" : "string",
          "example" : "NOT_AVAILABLE",
          "description" : "Availability status of engine|cluster",
          "enum" : [ "AVAILABLE", "NOT_AVAILABLE", "RETIRED" ]
        },
        "managed" : {
          "type" : "boolean",
          "description" : "Indicates whether target runtime (engine/cluster) is managed or not"
        },
        "status" : {
          "type" : "string",
          "example" : "NOT_PAIRED",
          "description" : "Engine status",
          "enum" : [ "PAIRED", "NOT_PAIRED" ]
        },
        "runProfiles" : {
          "type" : "array",
          "example" : ["MICROSERVICE"],
          "description" : "Run profiles of engine",
          "items" : {
            "type" : "string"
          }
        },
        "debug" : {
          "description" : "Remote Run/Debug configuration",
          "$ref" : "#/definitions/EngineDebug"
        },
        "clusterId" : {
          "type" : "string",
          "description" : "cluster that this engine is part of"
        },
        "preAuthorizedKey" : {
          "type" : "string",
          "example" : "123A822BF26DF49045C90D94CD269F3850BFB308B2606019CC63EDADE55B4391",
          "description" : "Preauthorized key (only for not paired engine)"
        },
        "esbCompatibilityVersion" : {
          "type" : "string",
          "example" : "7.3.1",
          "description" : "ESB compatibility version"
        }
      }
    },
    "EngineCluster" : {
      "type" : "object",
      "required" : [ "id", "name", "runtimeId" ],
      "properties" : {
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "5cdd2ce2c737973f9d581b98",
          "description" : "Resource id"
        },
        "name" : {
          "type" : "string",
          "example" : "Remote Engine",
          "description" : "Resource name"
        },
        "description" : {
          "type" : "string",
          "example" : "Some description",
          "description" : "Resource description"
        },
        "workspace" : {
          "description" : "Resource workspace",
          "$ref" : "#/definitions/WorkspaceInfo"
        },
        "runtimeId" : {
          "type" : "string",
          "example" : "9e8acf72-00d5-451b-9175-97bd44cd6b13",
          "description" : "Resource runtime id"
        },
        "availability" : {
          "type" : "string",
          "example" : "NOT_AVAILABLE",
          "description" : "Availability status of engine|cluster",
          "enum" : [ "AVAILABLE", "NOT_AVAILABLE", "RETIRED" ]
        },
        "managed" : {
          "type" : "boolean",
          "description" : "Indicates whether target runtime (engine/cluster) is managed or not"
        },
        "engines" : {
          "type" : "array",
          "example" : ["5d3039de65ff7d3583840bc0", "5d3039de65ff7d3583840bk1"],
          "description" : "Engines in cluster",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "EngineDebug" : {
      "type" : "object",
      "required" : [ "host" ],
      "properties" : {
        "host" : {
          "type" : "string",
          "example" : "192.168.0.1",
          "description" : "Debug host of engine"
        }
      }
    },
    "EngineRequest" : {
      "type" : "object",
      "required" : [ "environmentId", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Remote Engine",
          "description" : "Engine name"
        },
        "environmentId" : {
          "type" : "string",
          "example" : "5c1111d7a4186a4eafed0587",
          "description" : "Id of engine environment"
        },
        "workspaceId" : {
          "type" : "string",
          "example" : "5c2222d7a4186a4eafed0587",
          "description" : "Id of engine workspace",
          "readOnly" : true
        },
        "runProfiles" : {
          "type" : "array",
          "example" : ["MICROSERVICE"],
          "description" : "Run profiles of engine",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "debug" : {
          "description" : "Remote Run/Debug configuration",
          "readOnly" : true,
          "$ref" : "#/definitions/EngineDebug"
        },
        "description" : {
          "type" : "string",
          "example" : "Some description",
          "description" : "Engine|cluster description",
          "readOnly" : true
        },
        "esbCompatibilityVersion" : {
          "type" : "string",
          "example" : "7.2.1",
          "description" : "Data Service Runner/Talend Runtime version. Mandatory if TALEND_RUNTIME or MICROSERVICE profile selected",
          "readOnly" : true
        }
      }
    },
    "EngineStatus" : {
      "type" : "object",
      "required" : [ "consumed", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Engine type"
        },
        "consumed" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of engines used by type"
        }
      },
      "description" : "Information about engine status"
    },
    "EnvironmentInfo" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed3",
          "description" : "Environment identifier"
        },
        "name" : {
          "type" : "string",
          "example" : "Development",
          "description" : "Environment name"
        },
        "description" : {
          "type" : "string",
          "example" : "environment detail description",
          "description" : "Environment description (not returned when querying a list of objects)"
        },
        "maxCloudContainers" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Max cloud containers"
        },
        "default" : {
          "type" : "boolean",
          "description" : "Default environment flag"
        }
      }
    },
    "ErrorResponse" : {
      "type" : "object",
      "required" : [ "message", "status" ],
      "properties" : {
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "400, 401, 403, 404, 409, 500, 502, 503, etc.",
          "description" : "Status code"
        },
        "message" : {
          "type" : "string",
          "example" : "something went wrong",
          "description" : "Error message (multilanguage). Info about error for user."
        },
        "details" : {
          "type" : "string",
          "example" : "more descriptive info about something went wrong",
          "description" : "Developer message (not translated). Info about error for developer."
        },
        "code" : {
          "type" : "string",
          "example" : "TIPASS-SCHED-123",
          "description" : "Internal error code"
        },
        "url" : {
          "type" : "string",
          "example" : "https://error.talend.com/details/tic?code=SCHED-123",
          "description" : "URL provided detailed info about error"
        },
        "requestId" : {
          "type" : "string",
          "example" : "16fefb53-035a-4249-af9d-f80a3b47b132",
          "description" : "The unique identification of the request involved with this error"
        }
      },
      "description" : "Error response object"
    },
    "Executableinfo" : {
      "type" : "object",
      "required" : [ "executable", "name" ],
      "properties" : {
        "executable" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Executable identifier"
        },
        "name" : {
          "type" : "string",
          "example" : "simple executable",
          "description" : "Executable name"
        },
        "workspace" : {
          "description" : "Executable workspace",
          "$ref" : "#/definitions/WorkspaceInfo"
        }
      }
    },
    "Executabletask" : {
      "type" : "object",
      "required" : [ "executable" ],
      "properties" : {
        "executable" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Executable identifier"
        },
        "parameters" : {
          "type" : "object",
          "example" : {"parameter_boss":"fupton","boss":"was"},
          "description" : "Executable parameters",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "logLevel" : {
          "type" : "string",
          "example" : "WARN",
          "description" : "Execution log level",
          "enum" : [ "OFF", "ERROR", "WARN", "INFO" ]
        }
      }
    },
    "ExecutionFlow" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "destination" : {
          "type" : "string"
        },
        "workspaceId" : {
          "type" : "string"
        },
        "abstractPlanId" : {
          "type" : "string"
        },
        "pauseDetails" : {
          "$ref" : "#/definitions/ExecutionPauseDetails"
        },
        "plan" : {
          "type" : "boolean"
        },
        "artifactShortVersion" : {
          "$ref" : "#/definitions/ArtifactVersion"
        },
        "upgradeInfo" : {
          "$ref" : "#/definitions/UpgradeInfo"
        },
        "jobType" : {
          "type" : "string",
          "enum" : [ "STANDARD", "BIG_DATA_STREAMING", "BIG_DATA_BATCH", "ROUTE", "DATA_SERVICE", "PIPELINE", "DATA_FABRIC" ]
        }
      }
    },
    "ExecutionLogs" : {
      "type" : "object",
      "properties" : {
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalSizeFiltered" : {
          "type" : "integer",
          "format" : "int32"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CloudStorageLog"
          }
        },
        "nextIndex" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ExecutionPauseDetails" : {
      "type" : "object",
      "properties" : {
        "pause" : {
          "type" : "boolean"
        },
        "pauseContext" : {
          "type" : "string"
        },
        "pauseDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "user" : {
          "type" : "string",
          "readOnly" : true
        },
        "userType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "HUMAN", "SERVICE" ]
        }
      }
    },
    "ExecutionStep" : {
      "type" : "object",
      "properties" : {
        "stepId" : {
          "type" : "string"
        },
        "abstractStepId" : {
          "type" : "string"
        },
        "stepName" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "PARTIAL_SUCCESS", "FAIL" ]
        },
        "stepOnException" : {
          "$ref" : "#/definitions/ExecutionStep"
        },
        "nextStep" : {
          "$ref" : "#/definitions/ExecutionStep"
        },
        "flows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExecutionFlow"
          }
        },
        "stepNote" : {
          "type" : "string"
        }
      }
    },
    "Executionidentifier" : {
      "type" : "object",
      "required" : [ "executionId" ],
      "properties" : {
        "executionId" : {
          "type" : "string",
          "example" : "16fefb53-035a-4249-af9d-f80a3b47b132",
          "description" : "Execution identifier"
        }
      }
    },
    "FetchTasksModel" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "task1",
          "description" : "tasks name filter"
        },
        "environmentId" : {
          "type" : "string",
          "example" : "6148511d6ccc6d41563574e5",
          "description" : "tasks environment id filter"
        },
        "workspaceId" : {
          "type" : "string",
          "example" : "614851d46ccc6d41563574ea",
          "description" : "tasks workspace id filter"
        },
        "artifactId" : {
          "type" : "string",
          "example" : "623aafbe61a28314065704b6",
          "description" : "tasks artifact id filter"
        },
        "runtimeType" : {
          "type" : "string",
          "example" : "CLOUD",
          "description" : "tasks runtime type filter",
          "enum" : [ "CLOUD", "CLOUD_EXCLUSIVE", "CLOUD_SANDBOX", "REMOTE_ENGINE", "REMOTE_ENGINE_CLUSTER", "ELASTIC_ENGINE" ]
        },
        "runtimeId" : {
          "type" : "string",
          "example" : "623aafbe61a28314065704b8",
          "description" : "tasks runtime id filter"
        },
        "runtimeRunProfileId" : {
          "type" : "string",
          "example" : "626f7d424fe73f1084416c68",
          "description" : "tasks runtime run profile id filter"
        },
        "tags" : {
          "type" : "array",
          "example" : ["tag1", "tag2"],
          "description" : "tasks tags filter",
          "items" : {
            "type" : "string"
          }
        },
        "triggerType" : {
          "type" : "string",
          "example" : "daily",
          "description" : "tasks trigger type filter",
          "enum" : [ "no_trigger", "daily", "weekly", "monthly", "once", "webhook", "cron", "multiple" ]
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "tasks limit filter"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "tasks offset filter"
        }
      }
    },
    "FlowPromotionResult" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Artifact ID"
        },
        "targetId" : {
          "type" : "string",
          "description" : "Target Artifact ID"
        },
        "name" : {
          "type" : "string",
          "description" : "Artifact Name"
        },
        "type" : {
          "type" : "string",
          "example" : "WORKSPACE",
          "description" : "Artifact Type",
          "enum" : [ "WORKSPACE", "PLAN", "FLOW", "ACTION", "CONNECTION", "RESOURCE", "ENGINE", "CLUSTER" ]
        },
        "analyzeReport" : {
          "description" : "Promotion Analyze Report",
          "$ref" : "#/definitions/Report"
        },
        "promotionReport" : {
          "description" : "Promotion Report",
          "$ref" : "#/definitions/Report"
        },
        "workspaceId" : {
          "type" : "string",
          "description" : "Workspace id"
        },
        "targetVersion" : {
          "type" : "string",
          "description" : "Artifact target version"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "jobType" : {
          "type" : "string",
          "description" : "Job type"
        },
        "usedBy" : {
          "type" : "array",
          "description" : "Used by Artifacts",
          "items" : {
            "$ref" : "#/definitions/PromotionResultInfo"
          }
        },
        "versions" : {
          "type" : "array",
          "description" : "Artifact versions",
          "items" : {
            "$ref" : "#/definitions/ArtifactVersionPromotionResult"
          }
        }
      }
    },
    "JobExecutionStatus" : {
      "type" : "object",
      "required" : [ "accountId", "environmentVersion", "executionDestination", "executionId", "executionStatus", "executionType", "jobId", "jobVersion", "startTimestamp", "triggerTimestamp", "userId", "userType", "workspaceId" ],
      "properties" : {
        "executionId" : {
          "type" : "string",
          "example" : "7b2b122e-d6b8-42de-b0ba-fa2f0d36306e",
          "description" : "Job execution ID"
        },
        "startTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start time of job execution (UTC)"
        },
        "triggerTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Trigger time of job execution (UTC)"
        },
        "finishTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "End time of job execution (UTC)"
        },
        "userId" : {
          "type" : "string",
          "example" : "fupton",
          "description" : "User who triggered or scheduled the execution"
        },
        "userType" : {
          "type" : "string",
          "example" : "HUMAN",
          "description" : "Type of user who triggered or scheduled the execution",
          "enum" : [ "HUMAN", "SERVICE" ]
        },
        "jobId" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Job ID"
        },
        "jobVersion" : {
          "type" : "string",
          "example" : "5.2",
          "description" : "The version of the executed job"
        },
        "environmentVersion" : {
          "type" : "string",
          "example" : "1.3",
          "description" : "Execution environment version",
          "enum" : [ "1.2", "1.3" ]
        },
        "executionStatus" : {
          "type" : "string",
          "description" : "Execution status",
          "enum" : [ "EXECUTION_EVENT_RECEIVED", "DISPATCHING_FLOW", "STARTING_FLOW_EXECUTION", "STOPPING_FLOW_EXECUTION", "EXECUTION_TERMINATED", "EXECUTION_TERMINATED_TIMEOUT", "DEPLOY_FAILED", "EXECUTION_FAILED", "EXECUTION_REJECTED", "EXECUTION_SUCCESS" ]
        },
        "executionType" : {
          "type" : "string",
          "example" : "SCHEDULED",
          "description" : "Execution type",
          "enum" : [ "MANUAL", "SCHEDULED", "WEBHOOK", "PLAN" ]
        },
        "executionDestination" : {
          "type" : "string",
          "example" : "REMOTE_ENGINE",
          "description" : "Destination of execution",
          "enum" : [ "CLOUD", "CLOUD_EXCLUSIVE", "REMOTE_ENGINE", "REMOTE_ENGINE_CLUSTER" ]
        },
        "containerId" : {
          "type" : "string",
          "description" : "Container ID"
        },
        "runProfileId" : {
          "type" : "string",
          "example" : "157f818f-a901-4425-b592-0f9282687784",
          "description" : "Run profile ID"
        },
        "remoteEngineId" : {
          "type" : "string",
          "example" : "157f818f-a901-4425-b592-0f9282687784",
          "description" : "Remote engine ID"
        },
        "remoteEngineClusterId" : {
          "type" : "string",
          "description" : "Remote engine cluster ID"
        },
        "numberOfProcessedRows" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1234567890,
          "description" : "Number of processed rows"
        },
        "numberOfRejectedRows" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 0,
          "description" : "Number of rejected rows"
        },
        "accountId" : {
          "type" : "string",
          "example" : "8494b016-b5ef-4b9c-b16d-8b1f824d7616",
          "description" : "Account ID"
        },
        "workspaceId" : {
          "type" : "string",
          "example" : "57ce63d3e4b0681c36d1a1c4",
          "description" : "Workspace ID"
        },
        "planId" : {
          "type" : "string",
          "description" : "Plan execution ID"
        },
        "errorType" : {
          "type" : "string",
          "description" : "Error type if error occurs"
        },
        "errorMessage" : {
          "type" : "string",
          "description" : "Error message if error occurs"
        }
      },
      "description" : "Execution info"
    },
    "JobExecutionStatusV21" : {
      "type" : "object",
      "required" : [ "accountId", "environmentVersion", "executionDestination", "executionId", "executionStatus", "executionType", "jobId", "jobVersion", "startTimestamp", "status", "triggerTimestamp", "userId", "userType", "workspaceId" ],
      "properties" : {
        "executionId" : {
          "type" : "string",
          "example" : "7b2b122e-d6b8-42de-b0ba-fa2f0d36306e",
          "description" : "Job execution ID"
        },
        "startTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start time of job execution (UTC)"
        },
        "triggerTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Trigger time of job execution (UTC)"
        },
        "finishTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "End time of job execution (UTC)"
        },
        "userId" : {
          "type" : "string",
          "example" : "fupton",
          "description" : "User who triggered or scheduled the execution"
        },
        "userType" : {
          "type" : "string",
          "example" : "HUMAN",
          "description" : "Type of user who triggered or scheduled the execution",
          "enum" : [ "HUMAN", "SERVICE" ]
        },
        "jobId" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Job ID"
        },
        "jobVersion" : {
          "type" : "string",
          "example" : "5.2",
          "description" : "The version of the executed job"
        },
        "environmentVersion" : {
          "type" : "string",
          "example" : "1.3",
          "description" : "Execution environment version",
          "enum" : [ "1.2", "1.3" ]
        },
        "executionStatus" : {
          "type" : "string",
          "description" : "Execution status",
          "enum" : [ "EXECUTION_EVENT_RECEIVED", "DISPATCHING_FLOW", "STARTING_FLOW_EXECUTION", "STOPPING_FLOW_EXECUTION", "EXECUTION_TERMINATED", "EXECUTION_TERMINATED_TIMEOUT", "DEPLOY_FAILED", "EXECUTION_FAILED", "EXECUTION_REJECTED", "EXECUTION_SUCCESS" ]
        },
        "executionType" : {
          "type" : "string",
          "example" : "SCHEDULED",
          "description" : "Execution type",
          "enum" : [ "MANUAL", "SCHEDULED", "WEBHOOK", "PLAN" ]
        },
        "executionDestination" : {
          "type" : "string",
          "example" : "REMOTE_ENGINE",
          "description" : "Destination of execution",
          "enum" : [ "CLOUD", "CLOUD_EXCLUSIVE", "REMOTE_ENGINE", "REMOTE_ENGINE_CLUSTER" ]
        },
        "containerId" : {
          "type" : "string",
          "description" : "Container ID"
        },
        "runProfileId" : {
          "type" : "string",
          "example" : "157f818f-a901-4425-b592-0f9282687784",
          "description" : "Run profile ID"
        },
        "remoteEngineId" : {
          "type" : "string",
          "example" : "157f818f-a901-4425-b592-0f9282687784",
          "description" : "Remote engine ID"
        },
        "remoteEngineClusterId" : {
          "type" : "string",
          "description" : "Remote engine cluster ID"
        },
        "numberOfProcessedRows" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1234567890,
          "description" : "Number of processed rows"
        },
        "numberOfRejectedRows" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 0,
          "description" : "Number of rejected rows"
        },
        "accountId" : {
          "type" : "string",
          "example" : "8494b016-b5ef-4b9c-b16d-8b1f824d7616",
          "description" : "Account ID"
        },
        "workspaceId" : {
          "type" : "string",
          "example" : "57ce63d3e4b0681c36d1a1c4",
          "description" : "Workspace ID"
        },
        "planId" : {
          "type" : "string",
          "description" : "Plan execution ID"
        },
        "errorType" : {
          "type" : "string",
          "description" : "Error type if error occurs"
        },
        "errorMessage" : {
          "type" : "string",
          "description" : "Error message if error occurs"
        },
        "status" : {
          "type" : "string",
          "example" : "execution_successful",
          "description" : "Task execution status",
          "enum" : [ "dispatching", "deploy_failed", "executing", "execution_rejected", "execution_successful", "execution_failed", "terminated" ]
        }
      },
      "description" : "Execution info"
    },
    "LinkScheduleMultipleTriggerRequest" : {
      "type" : "object",
      "required" : [ "scheduleId" ],
      "properties" : {
        "scheduleId" : {
          "type" : "string",
          "description" : "Id of the schedule to associate with the task/plan"
        }
      }
    },
    "Message" : {
      "type" : "object",
      "properties" : {
        "info" : {
          "type" : "string",
          "readOnly" : true
        },
        "level" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "INFO", "WARN", "ERROR" ]
        }
      }
    },
    "MultipleTrigger" : {
      "type" : "object",
      "required" : [ "name", "startDate", "timeZone", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "ONCE",
          "description" : "Type of schedule",
          "enum" : [ "ONCE", "DAILY", "WEEKLY", "MONTHLY", "CRON" ]
        },
        "interval" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Interval between task/plan running in days/weeks/months, required only if type of schedule is not equal to 'ONCE')"
        },
        "startDate" : {
          "type" : "string",
          "example" : "2019-09-25",
          "description" : "Date when the task should start to run/when the cron trigger is enabled"
        },
        "timeZone" : {
          "type" : "string",
          "example" : "Europe/London",
          "description" : "Time zone for task schedule"
        },
        "atTimes" : {
          "$ref" : "#/definitions/TimeSchedule"
        },
        "atDays" : {
          "$ref" : "#/definitions/DaySchedule"
        },
        "cronExpression" : {
          "type" : "string",
          "example" : "*/5 12-14 * * ?",
          "description" : "cron expression - available from v2.6"
        },
        "name" : {
          "type" : "string",
          "example" : "Trigger_#1_Daily_at_6pm",
          "description" : "Name of the trigger"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Execution timeout in minutes (only for tasks)"
        }
      }
    },
    "Page" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageArtifact" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Artifact"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageConnectionDetails" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConnectionDetails"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageDate" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageExecutableinfo" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Executableinfo"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PagePlanExecutionStatusV21" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanExecutionStatusV21"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageProjectView" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProjectView"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageResource" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Resource"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageScheduledEventsResponse" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ScheduledEventsResponse"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageTaskExecutionStatusV21" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaskExecutionStatusV21"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageTaskExecutionStatusV26" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaskExecutionStatusV26"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Permission" : {
      "type" : "object",
      "required" : [ "permissions", "userId", "workspaceId" ],
      "properties" : {
        "workspaceId" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed2",
          "description" : "The workspace id"
        },
        "userId" : {
          "type" : "string",
          "example" : "b9e10a3f-9d68-44bb-862f-b2aa56dc7191",
          "description" : "The user id"
        },
        "permissions" : {
          "type" : "array",
          "description" : "The list of permission types",
          "items" : {
            "type" : "string",
            "enum" : [ "AUTHOR", "EXECUTE", "VIEW", "MANAGE", "PUBLISH" ]
          }
        }
      }
    },
    "PermissionDeleteResult" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "permissionId" : {
          "$ref" : "#/definitions/PermissionId"
        }
      }
    },
    "PermissionId" : {
      "type" : "object",
      "required" : [ "userId", "workspaceId" ],
      "properties" : {
        "workspaceId" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed2",
          "description" : "The workspace id"
        },
        "userId" : {
          "type" : "string",
          "example" : "9f1634e7-d791-4be4-9aed-2970f8d804dd",
          "description" : "The user id"
        }
      }
    },
    "PermissionResult" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "permission" : {
          "$ref" : "#/definitions/Permission"
        }
      }
    },
    "PipelineEngine" : {
      "type" : "object",
      "required" : [ "id", "name", "runtimeId" ],
      "properties" : {
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "5cdd2ce2c737973f9d581b98",
          "description" : "Resource id"
        },
        "name" : {
          "type" : "string",
          "example" : "Remote Engine",
          "description" : "Resource name"
        },
        "description" : {
          "type" : "string",
          "example" : "Some description",
          "description" : "Resource description"
        },
        "workspace" : {
          "description" : "Resource workspace",
          "$ref" : "#/definitions/WorkspaceInfo"
        },
        "runtimeId" : {
          "type" : "string",
          "example" : "9e8acf72-00d5-451b-9175-97bd44cd6b13",
          "description" : "Resource runtime id"
        },
        "availability" : {
          "type" : "string",
          "example" : "NOT_AVAILABLE",
          "description" : "Availability status of engine|cluster",
          "enum" : [ "AVAILABLE", "NOT_AVAILABLE", "RETIRED" ]
        },
        "managed" : {
          "type" : "boolean",
          "description" : "Indicates whether target runtime (engine/cluster) is managed or not"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "PAIRED", "NOT_PAIRED" ]
        },
        "runStatus" : {
          "type" : "string",
          "enum" : [ "STARTING", "RUNNING", "STOPPING", "STOPPED", "START_FAILED", "STOP_FAILED", "ERROR", "NOT_FOUND" ]
        },
        "preAuthorizedKey" : {
          "type" : "string"
        },
        "cloudRunner" : {
          "type" : "boolean"
        }
      }
    },
    "PipelineEngineRequest" : {
      "type" : "object",
      "required" : [ "environmentId", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Remote Engine",
          "description" : "Engine name"
        },
        "environmentId" : {
          "type" : "string",
          "example" : "5c1111d7a4186a4eafed0587",
          "description" : "Id of engine environment"
        },
        "workspaceId" : {
          "type" : "string",
          "example" : "5c2222d7a4186a4eafed0587",
          "description" : "Id of engine workspace",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "example" : "Some description",
          "description" : "Engine|cluster description",
          "readOnly" : true
        }
      }
    },
    "PipelineRunProfileReadOnlyAttributes" : {
      "type" : "object",
      "properties" : {
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Run profile id",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "description" : "Type",
          "readOnly" : true,
          "enum" : [ "standard", "big-data", "databricks", "advanced" ]
        }
      }
    },
    "PipelineRunProfileResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default run profile",
          "description" : "Name"
        },
        "description" : {
          "type" : "string",
          "example" : "Run profile used by default",
          "description" : "Description"
        },
        "engineId" : {
          "type" : "string",
          "example" : "5f7eff3245ecf259a1c56daa",
          "description" : "Pipeline engine id"
        },
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Run profile id",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "description" : "Type",
          "readOnly" : true,
          "enum" : [ "standard", "big-data", "databricks", "advanced" ]
        }
      },
      "description" : "Pipeline run profile response object."
    },
    "Plan" : {
      "type" : "object",
      "required" : [ "author", "authorType", "id", "name", "steps" ],
      "properties" : {
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "5cdd2ce2c737973f9d581b98",
          "description" : "Resource id"
        },
        "name" : {
          "type" : "string",
          "example" : "Remote Engine",
          "description" : "Resource name"
        },
        "description" : {
          "type" : "string",
          "example" : "Some description",
          "description" : "Resource description"
        },
        "workspace" : {
          "description" : "Resource workspace",
          "$ref" : "#/definitions/WorkspaceInfo"
        },
        "author" : {
          "type" : "string",
          "example" : "operator123",
          "description" : "Plan author"
        },
        "authorType" : {
          "type" : "string",
          "example" : "HUMAN",
          "description" : "Plan author type (HUMAN or SERVICE)",
          "enum" : [ "HUMAN", "SERVICE" ]
        },
        "steps" : {
          "type" : "array",
          "description" : "Plan steps",
          "items" : {
            "$ref" : "#/definitions/Step"
          }
        }
      }
    },
    "PlanExecutable" : {
      "type" : "object",
      "required" : [ "executable" ],
      "properties" : {
        "executable" : {
          "type" : "string",
          "example" : "b91cf8b2-5dd1-4b18-915b-4c447cee5267",
          "description" : "Executable identifier"
        },
        "executionPlanId" : {
          "type" : "string",
          "example" : "0798b8d1-0e12-472f-be02-a0f04e792daa",
          "description" : "The plan execution identifier in case of re-execution (available from V2.4)"
        },
        "stepId" : {
          "type" : "string",
          "example" : "09043c9f-02d0-41f6-b3cb-0ea53ffde377",
          "description" : "The execution step identifier (executionStepId) from which restart plan execution (available from V2.4)"
        },
        "rerunOnlyFailedTasks" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Optionally run only failing tasks (available from V2.4)"
        }
      }
    },
    "PlanExecutabledetails" : {
      "type" : "object",
      "required" : [ "executable", "name" ],
      "properties" : {
        "executable" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Executable identifier"
        },
        "name" : {
          "type" : "string",
          "example" : "simple executable",
          "description" : "Executable name"
        },
        "workspace" : {
          "description" : "Executable workspace",
          "$ref" : "#/definitions/WorkspaceInfo"
        },
        "description" : {
          "type" : "string",
          "example" : "plan detail description",
          "description" : "Executable description"
        },
        "chart" : {
          "description" : "Plan execution hierarchy",
          "$ref" : "#/definitions/ExecutionStep"
        },
        "planPauseDetails" : {
          "description" : "Pause details of Plan (available from V2.6)",
          "$ref" : "#/definitions/PlanPauseDetails"
        },
        "status" : {
          "type" : "string",
          "description" : "Plan execution status",
          "enum" : [ "executing", "execution_successful", "execution_failed" ]
        }
      }
    },
    "PlanExecutionStatus" : {
      "type" : "object",
      "required" : [ "executionId", "executionStatus", "planId", "startTimestamp", "userId", "userType" ],
      "properties" : {
        "executionId" : {
          "type" : "string",
          "example" : "7b2b122e-d6b8-42de-b0ba-fa2f0d36306e",
          "description" : "Job execution ID"
        },
        "startTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start time of job execution (UTC)"
        },
        "finishTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "End time of job execution (UTC)"
        },
        "userId" : {
          "type" : "string",
          "example" : "fupton",
          "description" : "User who triggered or scheduled the execution"
        },
        "userType" : {
          "type" : "string",
          "example" : "HUMAN",
          "description" : "Type of user who triggered or scheduled the execution (HUMAN or SERVICE)",
          "enum" : [ "HUMAN", "SERVICE" ]
        },
        "planId" : {
          "type" : "string",
          "example" : "b91cf8b2-5dd1-4b18-915b-4c447cee5267",
          "description" : "Plan ID"
        },
        "executionStatus" : {
          "type" : "string",
          "example" : "FINISHED",
          "description" : "Execution (detailed) status",
          "enum" : [ "UNDEFINED", "STARTED", "FINISHED", "EXECUTION_FAILED", "EXECUTION_SUCCESS" ]
        },
        "plannedExecutableCount" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2,
          "description" : "Number of planned executables"
        },
        "doneExecutableCount" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Number of done executables"
        },
        "doneExecutableDetails" : {
          "type" : "array",
          "description" : "Execution activity info",
          "items" : {
            "$ref" : "#/definitions/JobExecutionStatus"
          }
        }
      },
      "description" : "Plan Execution info"
    },
    "PlanExecutionStatusV21" : {
      "type" : "object",
      "required" : [ "executionId", "executionStatus", "planId", "startTimestamp", "status", "userId", "userType" ],
      "properties" : {
        "executionId" : {
          "type" : "string",
          "example" : "7b2b122e-d6b8-42de-b0ba-fa2f0d36306e",
          "description" : "Job execution ID"
        },
        "startTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start time of job execution"
        },
        "finishTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "End time of job execution"
        },
        "userId" : {
          "type" : "string",
          "example" : "fupton",
          "description" : "User who triggered or scheduled the execution"
        },
        "userType" : {
          "type" : "string",
          "example" : "HUMAN",
          "description" : "Type of user who triggered or scheduled the execution (HUMAN or SERVICE)",
          "enum" : [ "HUMAN", "SERVICE" ]
        },
        "planId" : {
          "type" : "string",
          "example" : "b91cf8b2-5dd1-4b18-915b-4c447cee5267",
          "description" : "Plan ID"
        },
        "executionStatus" : {
          "type" : "string",
          "example" : "FINISHED",
          "description" : "Execution (detailed) status",
          "enum" : [ "UNDEFINED", "STARTED", "FINISHED", "EXECUTION_FAILED", "EXECUTION_SUCCESS" ]
        },
        "plannedExecutableCount" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2,
          "description" : "Number of planned executables"
        },
        "doneExecutableCount" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Number of done executables"
        },
        "doneExecutableDetails" : {
          "type" : "array",
          "description" : "Execution activity info",
          "items" : {
            "$ref" : "#/definitions/JobExecutionStatus"
          }
        },
        "status" : {
          "type" : "string",
          "example" : "executing",
          "description" : "Execution status",
          "enum" : [ "executing", "execution_successful", "execution_failed" ]
        }
      },
      "description" : "Plan Execution info"
    },
    "PlanPauseDetails" : {
      "type" : "object",
      "properties" : {
        "pause" : {
          "type" : "boolean"
        },
        "pauseContext" : {
          "type" : "string"
        },
        "pauseDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "user" : {
          "type" : "string",
          "readOnly" : true
        },
        "userType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "HUMAN", "SERVICE" ]
        }
      }
    },
    "PlanRequest" : {
      "type" : "object",
      "required" : [ "name", "steps", "workspaceId" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Plan 1",
          "description" : "Plan name"
        },
        "workspaceId" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed2",
          "description" : "Plan workspace"
        },
        "description" : {
          "type" : "string",
          "example" : "Some description",
          "description" : "Plan description"
        },
        "steps" : {
          "type" : "array",
          "description" : "Plan steps",
          "items" : {
            "$ref" : "#/definitions/Step"
          }
        }
      }
    },
    "PlanRunConfig" : {
      "type" : "object",
      "required" : [ "runtime", "trigger" ],
      "properties" : {
        "trigger" : {
          "$ref" : "#/definitions/Trigger"
        },
        "runtime" : {
          "$ref" : "#/definitions/Runtime"
        },
        "parallelExecutionAllowed" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether this executable is allowed to run in parallel (for REMOTE_ENGINE available from V2.6). 'false' by default"
        }
      }
    },
    "ProjectCreateRequest" : {
      "type" : "object",
      "required" : [ "name", "owner", "url" ],
      "properties" : {
        "owner" : {
          "type" : "string",
          "example" : "John Doe",
          "description" : "Owner name"
        },
        "description" : {
          "type" : "string",
          "example" : "John Doe",
          "description" : "Project description"
        },
        "url" : {
          "type" : "string",
          "example" : "https://github.com/example/Example.git",
          "description" : "Project url"
        },
        "name" : {
          "type" : "string",
          "example" : "Hello world project",
          "description" : "Project name"
        }
      }
    },
    "ProjectGroupAuthResponse" : {
      "type" : "object",
      "properties" : {
        "projectId" : {
          "type" : "string"
        },
        "groupIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ProjectRequest" : {
      "type" : "object",
      "properties" : {
        "owner" : {
          "type" : "string",
          "example" : "John Doe",
          "description" : "Owner name"
        },
        "description" : {
          "type" : "string",
          "example" : "John Doe",
          "description" : "Project description"
        },
        "url" : {
          "type" : "string",
          "example" : "https://github.com/example/Example.git",
          "description" : "Project url"
        }
      }
    },
    "ProjectUserAuthResponse" : {
      "type" : "object",
      "properties" : {
        "projectId" : {
          "type" : "string"
        },
        "userIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ProjectView" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "technicalLabel" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "author" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "projectType" : {
          "type" : "string",
          "enum" : [ "MDM", "DQ", "DI" ]
        },
        "repoType" : {
          "type" : "string",
          "enum" : [ "GIT", "SVN", "NONE" ]
        },
        "createDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "PromotionAdvancedInfo" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "WORKSPACE", "PLAN", "FLOW", "ACTION", "CONNECTION", "RESOURCE", "ENGINE", "CLUSTER", "PIPELINE_ENGINE", "RUNPROFILE" ]
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "workspaceId" : {
          "type" : "string"
        }
      }
    },
    "PromotionExecutableDetails" : {
      "type" : "object",
      "required" : [ "executable", "name" ],
      "properties" : {
        "executable" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Executable identifier"
        },
        "name" : {
          "type" : "string",
          "example" : "simple executable",
          "description" : "Executable name"
        },
        "sourceEnvironment" : {
          "description" : "Promotion Source Environment",
          "$ref" : "#/definitions/EnvironmentInfo"
        },
        "targetEnvironment" : {
          "description" : "Promotion Target Environment",
          "$ref" : "#/definitions/EnvironmentInfo"
        },
        "description" : {
          "type" : "string",
          "example" : "promotion detail description",
          "description" : "Promotion description (not returned when querying a list of objects)"
        }
      }
    },
    "PromotionExecutableTask" : {
      "type" : "object",
      "required" : [ "executable" ],
      "properties" : {
        "executable" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Executable identifier"
        },
        "keepTargetResources" : {
          "type" : "boolean",
          "description" : "Keep Target Resources flag"
        },
        "keepTargetRunProfiles" : {
          "type" : "boolean",
          "description" : "Keep Target Run Profiles flag (works starting from V2.2)"
        },
        "advanced" : {
          "description" : "Advanced Promotion specification",
          "$ref" : "#/definitions/AdvancedPromotionSpec"
        },
        "context" : {
          "type" : "string",
          "description" : "Execution context message"
        }
      }
    },
    "PromotionExecutionDetails" : {
      "type" : "object",
      "properties" : {
        "keepTargetResources" : {
          "type" : "boolean"
        },
        "keepTargetRunProfiles" : {
          "type" : "boolean"
        },
        "context" : {
          "type" : "string"
        },
        "promotionAdvancedInfo" : {
          "$ref" : "#/definitions/PromotionAdvancedInfo"
        }
      }
    },
    "PromotionExecutionReport" : {
      "type" : "object",
      "required" : [ "executionId" ],
      "properties" : {
        "executionId" : {
          "type" : "string",
          "example" : "16fefb53-035a-4249-af9d-f80a3b47b132",
          "description" : "Execution identifier"
        },
        "executionReport" : {
          "description" : "Promotion execution report",
          "$ref" : "#/definitions/PromotionExecutionStatus"
        }
      }
    },
    "PromotionExecutionStatus" : {
      "type" : "object",
      "required" : [ "executionId", "startTimestamp", "triggerTimestamp", "userId", "userType" ],
      "properties" : {
        "executionId" : {
          "type" : "string",
          "example" : "7b2b122e-d6b8-42de-b0ba-fa2f0d36306e",
          "description" : "Job execution ID"
        },
        "startTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start time of job execution (UTC)"
        },
        "triggerTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Trigger time of job execution (UTC)"
        },
        "finishTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "End time of job execution (UTC)"
        },
        "userId" : {
          "type" : "string",
          "example" : "fupton",
          "description" : "User who triggered or scheduled the execution"
        },
        "userType" : {
          "type" : "string",
          "example" : "HUMAN",
          "description" : "Type of user who triggered or scheduled the execution",
          "enum" : [ "HUMAN", "SERVICE" ]
        },
        "promotionId" : {
          "type" : "string",
          "description" : "Promotion ID"
        },
        "pipelineId" : {
          "type" : "string",
          "description" : "Deprecated! Use Promotion ID instead"
        },
        "keepTargetResources" : {
          "type" : "boolean",
          "description" : "Keep Target Resources flag"
        },
        "keepTargetRunProfiles" : {
          "type" : "boolean",
          "description" : "Keep Target Run Profiles flag (not returned for API versions earlier V2.2)"
        },
        "advanced" : {
          "description" : "Advanced Promotion specification",
          "$ref" : "#/definitions/AdvancedPromotionSpec"
        },
        "defective" : {
          "type" : "boolean",
          "description" : "Defective Promotion flag"
        },
        "status" : {
          "type" : "string",
          "example" : "PROMOTED",
          "description" : "Execution status",
          "enum" : [ "ANALIZED", "PROMOTION_STARTED", "PROMOTION_WARNING", "PROMOTION_FAILED", "PROMOTED" ]
        },
        "statusMessage" : {
          "type" : "string",
          "description" : "Execution status message"
        },
        "workspaces" : {
          "type" : "array",
          "description" : "Workspace Promotion Execution Info",
          "items" : {
            "$ref" : "#/definitions/WorkspacePromotionResult"
          }
        },
        "engines" : {
          "type" : "array",
          "description" : "Remote Engines Promotion Execution Info",
          "items" : {
            "$ref" : "#/definitions/RuntimePromotionResult"
          }
        },
        "clusters" : {
          "type" : "array",
          "description" : "Remote Engine Clusters Promotion Execution Info",
          "items" : {
            "$ref" : "#/definitions/RuntimePromotionResult"
          }
        },
        "context" : {
          "type" : "string",
          "description" : "Execution context message"
        }
      }
    },
    "PromotionResultInfo" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Artifact ID"
        },
        "targetId" : {
          "type" : "string",
          "description" : "Target Artifact ID"
        },
        "name" : {
          "type" : "string",
          "description" : "Artifact Name"
        },
        "type" : {
          "type" : "string",
          "example" : "WORKSPACE",
          "description" : "Artifact Type",
          "enum" : [ "WORKSPACE", "PLAN", "FLOW", "ACTION", "CONNECTION", "RESOURCE", "ENGINE", "CLUSTER" ]
        },
        "analyzeReport" : {
          "description" : "Promotion Analyze Report",
          "$ref" : "#/definitions/Report"
        },
        "promotionReport" : {
          "description" : "Promotion Report",
          "$ref" : "#/definitions/Report"
        },
        "workspaceId" : {
          "type" : "string",
          "description" : "Workspace id"
        },
        "targetVersion" : {
          "type" : "string",
          "description" : "Artifact target version"
        },
        "version" : {
          "type" : "string",
          "description" : "Artifact version"
        }
      }
    },
    "PromotionUsersResponse" : {
      "type" : "object",
      "required" : [ "executable", "userIds" ],
      "properties" : {
        "executable" : {
          "type" : "string",
          "example" : "5d3039de65ff7d3583840bk1",
          "description" : "Promotion ID"
        },
        "userIds" : {
          "type" : "array",
          "example" : ["64af766b-a8d9-40c6-ba75-1509d1ee6dad", "64af766b-a8d9-40c6-ba75-1509d1ee6dac"],
          "description" : "Assigned users",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Report" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "enum" : [ "CREATED", "REPLACED", "REUSED", "FAILED", "SKIPPED" ]
        },
        "messages" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Message"
          }
        }
      }
    },
    "RepositoryCommitData" : {
      "type" : "object",
      "required" : [ "author", "date", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "commit id"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "commit date time"
        },
        "author" : {
          "type" : "string",
          "description" : "commit author"
        }
      }
    },
    "Resource" : {
      "type" : "object",
      "required" : [ "file", "id", "name", "workspaceInfo" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "5c1111d7a4186a4eafed0587",
          "description" : "Id of resource"
        },
        "name" : {
          "type" : "string",
          "example" : "Hello world task",
          "description" : "Name of resource"
        },
        "description" : {
          "type" : "string",
          "example" : "task detail description",
          "description" : "Description of resource"
        },
        "workspaceInfo" : {
          "description" : "Workspace of resource",
          "$ref" : "#/definitions/WorkspaceInfo"
        },
        "file" : {
          "type" : "boolean",
          "description" : "Boolean value which indicates that resource is file"
        }
      }
    },
    "Response" : {
      "type" : "object",
      "properties" : {
        "entity" : {
          "type" : "object"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32"
        },
        "metadata" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "RunProfileRequest" : {
      "type" : "object",
      "required" : [ "jvmArguments", "name", "runtimeId", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Run profile",
          "description" : "Run profile name"
        },
        "description" : {
          "type" : "string",
          "example" : "Run profile with default options",
          "description" : "Description"
        },
        "jvmArguments" : {
          "type" : "array",
          "example" : ["-Xms128m", "-Xmx256m"],
          "description" : "Jvm arguments",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "example" : "JOB_SERVER",
          "description" : "Run profile type",
          "enum" : [ "JOB_SERVER", "MICROSERVICE", "TALEND_RUNTIME" ]
        },
        "runtimeId" : {
          "type" : "string",
          "example" : "5e713618de3c75a450447262",
          "description" : "Runtime id"
        }
      }
    },
    "RunProfileRescheduleOptions" : {
      "type" : "object",
      "properties" : {
        "method" : {
          "type" : "string",
          "description" : "Run profile reschedule method",
          "enum" : [ "DEFAULT", "DUPLICATE_RUN_PROFILES", "CLUSTER_RUN_PROFILE" ]
        },
        "runProfileId" : {
          "type" : "string",
          "description" : "Run profile to be used from cluster"
        }
      }
    },
    "RunProfileUpdateRequest" : {
      "type" : "object",
      "required" : [ "jvmArguments", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Run profile",
          "description" : "Run profile name"
        },
        "description" : {
          "type" : "string",
          "example" : "Run profile with default options",
          "description" : "Description"
        },
        "jvmArguments" : {
          "type" : "array",
          "example" : ["-Xms128m", "-Xmx256m"],
          "description" : "Jvm arguments",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Runtime" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "CLOUD",
          "description" : "Type of runtime",
          "enum" : [ "CLOUD", "REMOTE_ENGINE", "REMOTE_ENGINE_CLUSTER", "CLOUD_EXCLUSIVE" ]
        },
        "id" : {
          "type" : "string",
          "example" : "5c9a51dc7b353e43c7fc787c",
          "description" : "Runtime id"
        },
        "engineId" : {
          "type" : "string",
          "example" : "5c9a51dc7b353e43c7fc787c",
          "description" : "Remote engine id"
        },
        "clusterId" : {
          "type" : "string",
          "example" : "5c9a51dc7b353e43c7fc787c",
          "description" : "Remote engine cluster id"
        },
        "runProfileId" : {
          "type" : "string",
          "example" : "5c9a51dc7b353e43c7fc783c",
          "description" : "Engine run profile ID"
        }
      }
    },
    "RuntimePromotionResult" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Artifact ID"
        },
        "targetId" : {
          "type" : "string",
          "description" : "Target Artifact ID"
        },
        "name" : {
          "type" : "string",
          "description" : "Artifact Name"
        },
        "type" : {
          "type" : "string",
          "example" : "WORKSPACE",
          "description" : "Artifact Type",
          "enum" : [ "WORKSPACE", "PLAN", "FLOW", "ACTION", "CONNECTION", "RESOURCE", "ENGINE", "CLUSTER" ]
        },
        "analyzeReport" : {
          "description" : "Promotion Analyze Report",
          "$ref" : "#/definitions/Report"
        },
        "promotionReport" : {
          "description" : "Promotion Report",
          "$ref" : "#/definitions/Report"
        },
        "workspaceId" : {
          "type" : "string",
          "description" : "Workspace id"
        },
        "targetVersion" : {
          "type" : "string",
          "description" : "Artifact target version"
        },
        "version" : {
          "type" : "string",
          "description" : "Artifact version"
        },
        "jobType" : {
          "type" : "string",
          "description" : "Job type"
        },
        "usedBy" : {
          "type" : "array",
          "description" : "Used by Artifacts",
          "items" : {
            "$ref" : "#/definitions/PromotionResultInfo"
          }
        },
        "versions" : {
          "type" : "array",
          "description" : "Artifact versions",
          "items" : {
            "$ref" : "#/definitions/ArtifactVersionPromotionResult"
          }
        },
        "runProfiles" : {
          "type" : "array",
          "description" : "Run profiles",
          "items" : {
            "$ref" : "#/definitions/ArtifactPromotionResult"
          }
        }
      }
    },
    "RuntimeRunProfile" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "createDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "type" : "string",
          "description" : "Run profile type",
          "enum" : [ "JOB_SERVER", "MICROSERVICE", "TALEND_RUNTIME" ]
        },
        "jvmArguments" : {
          "type" : "array",
          "description" : "Jvm arguments",
          "items" : {
            "type" : "string"
          }
        },
        "runtimeId" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Run profile version"
        }
      }
    },
    "RuntimeRunProfileResponse" : {
      "type" : "object",
      "properties" : {
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "Run profile type",
          "enum" : [ "JOB_SERVER", "MICROSERVICE", "TALEND_RUNTIME" ]
        },
        "jvmArguments" : {
          "type" : "array",
          "description" : "Jvm arguments",
          "items" : {
            "type" : "string"
          }
        },
        "runtimeId" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Run profile version"
        }
      }
    },
    "Schedule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "triggers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MultipleTrigger"
          }
        },
        "environmentId" : {
          "type" : "string"
        },
        "executableId" : {
          "type" : "string"
        },
        "executableType" : {
          "type" : "string"
        }
      }
    },
    "ScheduledEventsRequest" : {
      "type" : "object",
      "required" : [ "environmentId", "to" ],
      "properties" : {
        "environmentId" : {
          "type" : "string",
          "description" : "Environment id"
        },
        "workspaceIds" : {
          "type" : "array",
          "description" : "Workspace ids. If empty, will return events for all workspaces in the environment",
          "items" : {
            "type" : "string"
          }
        },
        "from" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "From date time (milliseconds).Default value - now"
        },
        "to" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "To date time (milliseconds)"
        },
        "tags" : {
          "type" : "array",
          "description" : "Tags",
          "items" : {
            "type" : "string"
          }
        },
        "runtime" : {
          "description" : "Runtime",
          "$ref" : "#/definitions/ScheduledEventsRequestRuntime"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of items to return. Must be in range [1, 100]. Default value - 100"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The position of the first item. Must be greater than or equal to 0. Default value - 0"
        }
      }
    },
    "ScheduledEventsRequestRuntime" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "CLOUD",
          "description" : "Type of runtime",
          "enum" : [ "CLOUD", "REMOTE_ENGINE", "REMOTE_ENGINE_CLUSTER", "CLOUD_EXCLUSIVE", "PIPELINE_ENGINE" ]
        },
        "id" : {
          "type" : "string",
          "example" : "5c9a51dc7b353e43c7fc787c",
          "description" : "Runtime id"
        }
      }
    },
    "ScheduledEventsResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The entity's id for this event"
        },
        "sourceTriggerName" : {
          "type" : "string",
          "description" : "The source trigger's name (only for schedule for multiple triggers)"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Trigger's date for the event"
        },
        "type" : {
          "type" : "string",
          "description" : "The entity's type for the event",
          "enum" : [ "TASK", "PLAN" ]
        }
      }
    },
    "Seat" : {
      "type" : "object",
      "required" : [ "application", "currentUsers", "maxUsers" ],
      "properties" : {
        "application" : {
          "type" : "string",
          "example" : ["Data Inventory", "Data Preparation", "Data Stewardship", "Pipeline Designer", "Dictionary service", "API Designer / API Tester", "Management Console", "Studio", "Service Accounts"],
          "description" : "Name of application"
        },
        "maxUsers" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum of users allowed to use the application"
        },
        "currentUsers" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Count of users currently using the application"
        }
      },
      "description" : "Seat information"
    },
    "SourcesRepositoryData" : {
      "type" : "object",
      "required" : [ "project" ],
      "properties" : {
        "project" : {
          "type" : "string",
          "description" : "project name"
        },
        "branch" : {
          "type" : "string",
          "description" : "repository branch"
        },
        "commit" : {
          "description" : "repository commit info",
          "$ref" : "#/definitions/RepositoryCommitData"
        }
      }
    },
    "StandardRunProfile" : {
      "type" : "object",
      "required" : [ "configuration", "executionFramework", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default run profile",
          "description" : "Name"
        },
        "description" : {
          "type" : "string",
          "example" : "Run profile used by default",
          "description" : "Description"
        },
        "engineId" : {
          "type" : "string",
          "example" : "5f7eff3245ecf259a1c56daa",
          "description" : "Pipeline engine id"
        },
        "pushdownPreferenceEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Pushdown enable"
        },
        "warehouseName" : {
          "type" : "string",
          "example" : "DWH name",
          "description" : "Data warehouse name"
        },
        "configuration" : {
          "description" : "Configuration",
          "$ref" : "#/definitions/Configuration"
        },
        "executionFramework" : {
          "type" : "string",
          "example" : "Spark local",
          "description" : "Execution framework"
        }
      },
      "description" : "Pipeline run profile of type 'Standard'"
    },
    "StandardRunProfileResponse" : {
      "type" : "object",
      "required" : [ "configuration", "executionFramework", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default run profile",
          "description" : "Name"
        },
        "description" : {
          "type" : "string",
          "example" : "Run profile used by default",
          "description" : "Description"
        },
        "engineId" : {
          "type" : "string",
          "example" : "5f7eff3245ecf259a1c56daa",
          "description" : "Pipeline engine id"
        },
        "pushdownPreferenceEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Pushdown enable"
        },
        "warehouseName" : {
          "type" : "string",
          "example" : "DWH name",
          "description" : "Data warehouse name"
        },
        "configuration" : {
          "description" : "Configuration",
          "$ref" : "#/definitions/Configuration"
        },
        "executionFramework" : {
          "type" : "string",
          "example" : "Spark local",
          "description" : "Execution framework"
        },
        "createDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Created on",
          "readOnly" : true
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Updated on",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Run profile id",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "description" : "Type",
          "readOnly" : true,
          "enum" : [ "standard", "big-data", "databricks", "advanced" ]
        }
      },
      "description" : "Pipeline run profile of type 'Standard'"
    },
    "Step" : {
      "type" : "object",
      "required" : [ "condition", "name", "taskIds" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "9af64991e4b0b689a64feed0",
          "description" : "Step id"
        },
        "name" : {
          "type" : "string",
          "example" : "Step 1",
          "description" : "Step name"
        },
        "condition" : {
          "type" : "string",
          "description" : "Expected status of successful step",
          "enum" : [ "ALL_SUCCEEDED", "AT_LEAST_ONE_SUCCEEDED" ]
        },
        "taskIds" : {
          "type" : "array",
          "example" : ["5d5fc81f79bc197d2483a100", "5d5fc81f79bc197d2483a101"],
          "description" : "List of step tasks",
          "items" : {
            "type" : "string"
          }
        },
        "handlerOnFailure" : {
          "description" : "Handler of step errors",
          "$ref" : "#/definitions/StepErrorHandler"
        },
        "note" : {
          "type" : "string",
          "example" : "Clear the database for users",
          "description" : "Description to rerun a plan execution from this step"
        }
      }
    },
    "StepErrorHandler" : {
      "type" : "object",
      "properties" : {
        "taskIds" : {
          "type" : "array",
          "example" : ["5d5fc81f79bc197d2483a102", "5d5fc81f79bc197d2483a103"],
          "description" : "List of handler tasks",
          "items" : {
            "type" : "string"
          }
        },
        "planIds" : {
          "type" : "array",
          "example" : ["5d5fc81f79bc197d2483a104"],
          "description" : "List of handler plans",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "StepExecution" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "startTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "finishTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "executionStatus" : {
          "type" : "string"
        }
      }
    },
    "StepExecutionDetails" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "startTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "finishTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "executionStatus" : {
          "type" : "string"
        },
        "plannedExecutableCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "doneExecutableCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "doneTaskExecutableDetails" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JobExecutionStatus"
          }
        },
        "donePlanExecutableDetails" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanExecutionStatus"
          }
        }
      }
    },
    "Subscription" : {
      "type" : "object",
      "required" : [ "applications", "endDate", "enginesStatus", "licenseType", "seats", "startDate", "supportLevel", "tokensStatus" ],
      "properties" : {
        "startDate" : {
          "type" : "string",
          "example" : "2019-09-25",
          "description" : "Subscription start date"
        },
        "endDate" : {
          "type" : "string",
          "example" : "2019-09-25",
          "description" : "Subscription end date"
        },
        "licenseType" : {
          "type" : "string",
          "description" : "License type"
        },
        "applications" : {
          "type" : "array",
          "description" : "Available applications",
          "items" : {
            "type" : "string"
          }
        },
        "supportLevel" : {
          "type" : "string",
          "description" : "Level of support"
        },
        "tokensStatus" : {
          "$ref" : "#/definitions/TokensStatus"
        },
        "enginesStatus" : {
          "type" : "array",
          "description" : "Give number of engines used by type",
          "items" : {
            "$ref" : "#/definitions/EngineStatus"
          }
        },
        "seats" : {
          "type" : "array",
          "description" : "Seats information by application",
          "items" : {
            "$ref" : "#/definitions/Seat"
          }
        }
      },
      "description" : "Contains information related to token consumption, engines statuses and seat usages"
    },
    "TaskAutoUpgradeRequest" : {
      "type" : "object",
      "required" : [ "artifact", "description", "name", "workspaceId" ],
      "properties" : {
        "workspaceId" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed2",
          "description" : "Workspace id of task to create"
        },
        "name" : {
          "type" : "string",
          "example" : "Hello world task",
          "description" : "Task name"
        },
        "description" : {
          "type" : "string",
          "example" : "Task detail description",
          "description" : "Task description"
        },
        "tags" : {
          "type" : "array",
          "example" : ["tag1", "tag2"],
          "description" : "Task tags",
          "items" : {
            "type" : "string"
          }
        },
        "connections" : {
          "type" : "object",
          "example" : {"aws":"5d405e381f40e07fbab6757c","googledrive":"5d405e831f40e07fbab6757d"},
          "description" : "Task connections",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "parameters" : {
          "type" : "object",
          "example" : {"parameter_p1":"1111","custom_parameter":"custom"},
          "description" : "Task parameters",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "resources" : {
          "type" : "object",
          "example" : {"resource_file_f1":"5d84adcf38907f16498d5d74"},
          "description" : "Task resources",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "artifact" : {
          "description" : "Artifact used in task",
          "$ref" : "#/definitions/ArtifactRequest"
        },
        "autoUpgradeInfo" : {
          "description" : "Auto upgrade",
          "$ref" : "#/definitions/AutoUpgradeInfo"
        }
      }
    },
    "TaskExecutionStatusV21" : {
      "type" : "object",
      "required" : [ "executionId", "executionStatus", "executionType", "startTimestamp", "status", "taskId", "taskVersion", "triggerTimestamp", "userId", "userType" ],
      "properties" : {
        "executionId" : {
          "type" : "string",
          "example" : "7b2b122e-d6b8-42de-b0ba-fa2f0d36306e",
          "description" : "Job execution ID"
        },
        "startTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start time of job execution"
        },
        "triggerTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Trigger time of job execution"
        },
        "finishTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "End time of job execution"
        },
        "userId" : {
          "type" : "string",
          "example" : "fupton",
          "description" : "User who triggered or scheduled the execution"
        },
        "userType" : {
          "type" : "string",
          "example" : "HUMAN",
          "description" : "Type of user who triggered or scheduled the execution",
          "enum" : [ "HUMAN", "SERVICE" ]
        },
        "taskId" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Task Id"
        },
        "taskVersion" : {
          "type" : "string",
          "description" : "Task version"
        },
        "executionType" : {
          "type" : "string",
          "example" : "SCHEDULED",
          "description" : "Execution type",
          "enum" : [ "MANUAL", "SCHEDULED", "WEBHOOK", "PLAN" ]
        },
        "status" : {
          "type" : "string",
          "example" : "executing",
          "description" : "Execution status",
          "enum" : [ "dispatching", "deploy_failed", "executing", "execution_successful", "execution_rejected", "execution_failed", "terminated", "terminated_timeout" ]
        },
        "runtime" : {
          "description" : "Executable runtime",
          "$ref" : "#/definitions/Runtime"
        },
        "errorMessage" : {
          "type" : "string",
          "description" : "Error message if error occurs"
        },
        "executionStatus" : {
          "type" : "string",
          "example" : "DEPLOY_FAILED",
          "description" : "Execution (detailed) status",
          "enum" : [ "DEPLOY_FAILED", "EXECUTION_SUCCESS", "EXECUTION_FAILED", "EXECUTION_TERMINATED", "EXECUTION_TERMINATED_TIMEOUT", "EXECUTION_REJECTED", "EXECUTION_EVENT_RECEIVED", "DISPATCHING_FLOW", "STARTING_FLOW_EXECUTION", "STOPPING_FLOW_EXECUTION", "UNKNOWN" ]
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Execution timeout if set (in minutes)"
        }
      },
      "description" : "Task Execution info"
    },
    "TaskExecutionStatusV26" : {
      "type" : "object",
      "required" : [ "executionId", "executionStatus", "executionType", "startTimestamp", "status", "taskId", "taskVersion", "triggerTimestamp", "userId", "userType" ],
      "properties" : {
        "executionId" : {
          "type" : "string",
          "example" : "7b2b122e-d6b8-42de-b0ba-fa2f0d36306e",
          "description" : "Job execution ID"
        },
        "startTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start time of job execution"
        },
        "triggerTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Trigger time of job execution"
        },
        "finishTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "End time of job execution"
        },
        "userId" : {
          "type" : "string",
          "example" : "fupton",
          "description" : "User who triggered or scheduled the execution"
        },
        "userType" : {
          "type" : "string",
          "example" : "HUMAN",
          "description" : "Type of user who triggered or scheduled the execution",
          "enum" : [ "HUMAN", "SERVICE" ]
        },
        "taskId" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed0",
          "description" : "Task Id"
        },
        "taskVersion" : {
          "type" : "string",
          "description" : "Task version"
        },
        "executionType" : {
          "type" : "string",
          "example" : "SCHEDULED",
          "description" : "Execution type",
          "enum" : [ "MANUAL", "SCHEDULED", "WEBHOOK", "PLAN" ]
        },
        "status" : {
          "type" : "string",
          "example" : "executing",
          "description" : "Execution status",
          "enum" : [ "dispatching", "deploy_failed", "executing", "execution_successful", "execution_rejected", "execution_failed", "terminated", "terminated_timeout" ]
        },
        "runtime" : {
          "description" : "Executable runtime",
          "$ref" : "#/definitions/Runtime"
        },
        "errorMessage" : {
          "type" : "string",
          "description" : "Error message if error occurs"
        },
        "executionStatus" : {
          "type" : "string",
          "example" : "DEPLOY_FAILED",
          "description" : "Execution (detailed) status",
          "enum" : [ "DEPLOY_FAILED", "EXECUTION_SUCCESS", "EXECUTION_FAILED", "EXECUTION_TERMINATED", "EXECUTION_TERMINATED_TIMEOUT", "EXECUTION_REJECTED", "EXECUTION_EVENT_RECEIVED", "DISPATCHING_FLOW", "STARTING_FLOW_EXECUTION", "STOPPING_FLOW_EXECUTION", "UNKNOWN" ]
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Execution timeout if set (in minutes)"
        },
        "parallelExecutionAllowed" : {
          "type" : "boolean",
          "description" : "Whether parallel run was allowed for the execution"
        }
      },
      "description" : "Task Execution info"
    },
    "TaskExecutionsRequest" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "executing",
          "description" : "tasks execution status",
          "enum" : [ "dispatching", "deploy_failed", "executing", "execution_successful", "execution_rejected", "execution_failed", "terminated", "terminated_timeout" ]
        },
        "from" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "1646159400000",
          "description" : "from date time (milliseconds)"
        },
        "to" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "1649183400000",
          "description" : "to date time (milliseconds)"
        },
        "lastDays" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 20,
          "description" : "lastDays"
        },
        "environmentId" : {
          "type" : "string",
          "example" : "6148511d6ccc6d41563574e5",
          "description" : "tasks environment id"
        },
        "workspaceId" : {
          "type" : "string",
          "example" : "614851d46ccc6d41563574ea",
          "description" : "tasks workspace id"
        },
        "tags" : {
          "type" : "array",
          "example" : ["tag1", "tag2"],
          "description" : "tasks tag",
          "items" : {
            "type" : "string"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "tasks limit"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "tasks offset"
        }
      }
    },
    "TaskPauseDetails" : {
      "type" : "object",
      "properties" : {
        "pause" : {
          "type" : "boolean"
        },
        "pauseContext" : {
          "type" : "string"
        },
        "pauseDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "user" : {
          "type" : "string",
          "readOnly" : true
        },
        "userType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "HUMAN", "SERVICE" ]
        }
      }
    },
    "TaskRunConfig" : {
      "type" : "object",
      "required" : [ "runtime", "trigger" ],
      "properties" : {
        "trigger" : {
          "$ref" : "#/definitions/Trigger"
        },
        "runtime" : {
          "$ref" : "#/definitions/Runtime"
        },
        "parallelExecutionAllowed" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether this executable is allowed to run in parallel (for REMOTE_ENGINE available from V2.6). 'false' by default"
        },
        "logLevel" : {
          "type" : "string",
          "example" : "ERROR",
          "description" : "Execution log level. 'WARN' by default",
          "enum" : [ "OFF", "ERROR", "WARN", "INFO" ]
        },
        "remoteRunAsUser" : {
          "type" : "string",
          "description" : "Remote run user"
        }
      }
    },
    "TaskV21" : {
      "type" : "object",
      "required" : [ "artifact", "id", "name", "version" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "5c1111d7a4186a4eafed0587",
          "description" : "Id of task"
        },
        "name" : {
          "type" : "string",
          "example" : "Hello world task",
          "description" : "Name of task"
        },
        "description" : {
          "type" : "string",
          "example" : "task detail description",
          "description" : "Task description"
        },
        "workspace" : {
          "description" : "Task workspace",
          "$ref" : "#/definitions/WorkspaceInfo"
        },
        "version" : {
          "type" : "string",
          "example" : "0.1",
          "description" : "Task version"
        },
        "artifact" : {
          "description" : "Artifact used in task",
          "$ref" : "#/definitions/BaseArtifactVersion"
        },
        "tags" : {
          "type" : "array",
          "example" : ["tag1", "tag2"],
          "description" : "Task tags",
          "items" : {
            "type" : "string"
          }
        },
        "connections" : {
          "type" : "object",
          "example" : {"aws":"5d405e381f40e07fbab6757c","googledrive":"5d405e831f40e07fbab6757d"},
          "description" : "Task connections",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "parameters" : {
          "type" : "object",
          "example" : {"parameter_p1":"1111","custom_parameter":"custom"},
          "description" : "Task parameters",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "resources" : {
          "type" : "object",
          "example" : {"resource_file_f1":"5d567ad48f68ae1a1e16e4a4"},
          "description" : "Task resources",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "taskPauseDetails" : {
          "description" : "Pause details of task",
          "$ref" : "#/definitions/TaskPauseDetails"
        },
        "autoUpgradeInfo" : {
          "description" : "Task auto update info",
          "$ref" : "#/definitions/AutoUpgradeInfo"
        }
      }
    },
    "TaskV21CreateRequest" : {
      "type" : "object",
      "required" : [ "artifact", "description", "environmentId", "name", "workspaceId" ],
      "properties" : {
        "workspaceId" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed2",
          "description" : "Workspace id of task to create"
        },
        "name" : {
          "type" : "string",
          "example" : "Hello world task",
          "description" : "Task name"
        },
        "description" : {
          "type" : "string",
          "example" : "Task detail description",
          "description" : "Task description"
        },
        "tags" : {
          "type" : "array",
          "example" : ["tag1", "tag2"],
          "description" : "Task tags",
          "items" : {
            "type" : "string"
          }
        },
        "connections" : {
          "type" : "object",
          "example" : {"aws":"5d405e381f40e07fbab6757c","googledrive":"5d405e831f40e07fbab6757d"},
          "description" : "Task connections",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "parameters" : {
          "type" : "object",
          "example" : {"parameter_p1":"1111","custom_parameter":"custom"},
          "description" : "Task parameters",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "resources" : {
          "type" : "object",
          "example" : {"resource_file_f1":"5d84adcf38907f16498d5d74"},
          "description" : "Task resources",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "artifact" : {
          "description" : "Artifact used in task",
          "$ref" : "#/definitions/ArtifactRequest"
        },
        "autoUpgradeInfo" : {
          "description" : "Auto upgrade",
          "$ref" : "#/definitions/AutoUpgradeInfo"
        },
        "environmentId" : {
          "type" : "string",
          "example" : "5d7a3d082d909b386943787e",
          "description" : "Environment id of task to create"
        }
      }
    },
    "TimeSchedule" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "AT_TIME",
          "description" : "Type of schedule at times",
          "enum" : [ "AT_TIME", "AT_SPECIFIC_TIMES", "AT_INTERVALS" ]
        },
        "times" : {
          "type" : "array",
          "example" : ["10:00"],
          "description" : "Timestamps to run task/plan, required only if type of schedule at times equal to AT_SPECIFIC_TIMES",
          "items" : {
            "type" : "string"
          }
        },
        "time" : {
          "type" : "string",
          "example" : "10:00",
          "description" : "Timestamp to run task/plan, required only if type of schedule at times equal to AT_TIME"
        },
        "startTime" : {
          "type" : "string",
          "example" : "10:00",
          "description" : "Interval start timestamp, required only if type of schedule at times equal to AT_INTERVALS"
        },
        "endTime" : {
          "type" : "string",
          "example" : "23:00",
          "description" : "Interval end timestamp, required only if type of schedule at times equal to AT_INTERVALS"
        },
        "interval" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "10",
          "description" : "Duration of interval in minutes, required only if type of schedule at times equal to AT_INTERVALS"
        }
      }
    },
    "TokensStatus" : {
      "type" : "object",
      "required" : [ "consumed", "total" ],
      "properties" : {
        "total" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of token allowed for the account"
        },
        "consumed" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of token currently consumed by the account"
        }
      },
      "description" : "Information about tokens"
    },
    "Trigger" : {
      "type" : "object",
      "required" : [ "startDate", "timeZone", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "ONCE",
          "description" : "Type of schedule",
          "enum" : [ "ONCE", "DAILY", "WEEKLY", "MONTHLY", "WEBHOOK", "MANUAL", "CRON" ]
        },
        "interval" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Interval between task/plan running in days/weeks/months, required only if type of schedule is not equal to 'ONCE')"
        },
        "startDate" : {
          "type" : "string",
          "example" : "2019-09-25",
          "description" : "Date when the task should start to run/when the cron trigger is enabled"
        },
        "timeZone" : {
          "type" : "string",
          "example" : "Europe/London",
          "description" : "Time zone for task schedule"
        },
        "atTimes" : {
          "$ref" : "#/definitions/TimeSchedule"
        },
        "atDays" : {
          "$ref" : "#/definitions/DaySchedule"
        },
        "webhook" : {
          "$ref" : "#/definitions/Webhook"
        },
        "cronExpression" : {
          "type" : "string",
          "example" : "*/5 12-14 * * ?",
          "description" : "cron expression - available from v2.6"
        }
      }
    },
    "UpdateConnectionRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "testConnection",
          "description" : "Connection name"
        },
        "parameters" : {
          "type" : "array",
          "description" : "Connection parameters",
          "items" : {
            "$ref" : "#/definitions/ConnectionParameter"
          }
        }
      }
    },
    "UpdateDescriptionRequest" : {
      "type" : "object",
      "required" : [ "description" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "This is new description",
          "description" : "Promotion description"
        }
      }
    },
    "UpdateEnvironmentRequest" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Development",
          "description" : "Environment name"
        },
        "description" : {
          "type" : "string",
          "example" : "environment detail description",
          "description" : "Environment description"
        },
        "maxCloudContainers" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The max cloud containers count"
        }
      }
    },
    "UpdateResourceRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Resource name"
        },
        "description" : {
          "type" : "string",
          "description" : "Resource description"
        }
      }
    },
    "UpdateScheduleMultipleTriggerRequest" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Schedule with five triggers",
          "description" : "Some description related to the usage of the scheduler"
        }
      }
    },
    "UpdateWorkspaceRequest" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Personal",
          "description" : "Workspace name"
        },
        "description" : {
          "type" : "string",
          "example" : "Workspace detail description",
          "description" : "Workspace description"
        },
        "owner" : {
          "type" : "string",
          "description" : "The owner of the workspace"
        },
        "protectedArtifactUpdate" : {
          "type" : "boolean",
          "description" : "Update tasks only with workspace artifacts"
        }
      }
    },
    "UpgradeInfo" : {
      "type" : "object",
      "properties" : {
        "upgradable" : {
          "type" : "boolean"
        },
        "autoUpgradeFailed" : {
          "type" : "boolean"
        }
      }
    },
    "Webhook" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "NewWebhook",
          "description" : "Webhook name"
        },
        "description" : {
          "type" : "string",
          "example" : "Webhook description",
          "description" : "Webhook description"
        },
        "triggerCalls" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 5,
          "description" : "Endpoint call count to run task|plan "
        },
        "triggerTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 30000,
          "description" : "Time after which the task will starts from the moment the endpoint is first called "
        },
        "runAsUser" : {
          "type" : "string",
          "example" : "admin",
          "description" : "The user on behalf of whom the task will be launched"
        },
        "newUrl" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether to generate new url"
        },
        "url" : {
          "type" : "string",
          "description" : "Webhook url"
        }
      }
    },
    "Workspace" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "createDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "Shared", "Personal", "Custom" ]
        },
        "owner" : {
          "type" : "string"
        },
        "ownerFullName" : {
          "type" : "string"
        },
        "environmentId" : {
          "type" : "string"
        },
        "protectedTaskArtifactUpdate" : {
          "type" : "boolean"
        }
      }
    },
    "WorkspaceInfo" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "57f64991e4b0b689a64feed2",
          "description" : "Workspace identifier"
        },
        "name" : {
          "type" : "string",
          "example" : "Personal",
          "description" : "Workspace name"
        },
        "description" : {
          "type" : "string",
          "example" : "workspace detail description",
          "description" : "Workspace description"
        },
        "owner" : {
          "type" : "string",
          "example" : "admin",
          "description" : "Workspace owner"
        },
        "type" : {
          "type" : "string",
          "example" : "custom",
          "description" : "Workspace type",
          "enum" : [ "shared", "personal", "custom" ]
        },
        "environment" : {
          "description" : "Workspace environment",
          "$ref" : "#/definitions/EnvironmentInfo"
        },
        "protectedArtifactUpdate" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Task update with workspace artifact only"
        }
      }
    },
    "WorkspacePromotionResult" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Artifact ID"
        },
        "targetId" : {
          "type" : "string",
          "description" : "Target Artifact ID"
        },
        "name" : {
          "type" : "string",
          "description" : "Artifact Name"
        },
        "type" : {
          "type" : "string",
          "example" : "WORKSPACE",
          "description" : "Artifact Type",
          "enum" : [ "WORKSPACE", "PLAN", "FLOW", "ACTION", "CONNECTION", "RESOURCE", "ENGINE", "CLUSTER" ]
        },
        "analyzeReport" : {
          "description" : "Promotion Analyze Report",
          "$ref" : "#/definitions/Report"
        },
        "promotionReport" : {
          "description" : "Promotion Report",
          "$ref" : "#/definitions/Report"
        },
        "workspaceId" : {
          "type" : "string",
          "description" : "Workspace id"
        },
        "targetVersion" : {
          "type" : "string",
          "description" : "Artifact target version"
        },
        "version" : {
          "type" : "string",
          "description" : "Artifact version"
        },
        "flows" : {
          "type" : "array",
          "description" : "Flows Promotion Execution Info",
          "items" : {
            "$ref" : "#/definitions/FlowPromotionResult"
          }
        },
        "plans" : {
          "type" : "array",
          "description" : "Plans Promotion Execution Info",
          "items" : {
            "$ref" : "#/definitions/ArtifactPromotionResult"
          }
        },
        "actions" : {
          "type" : "array",
          "description" : "Actions Promotion Execution Info",
          "items" : {
            "$ref" : "#/definitions/ArtifactPromotionResult"
          }
        },
        "connections" : {
          "type" : "array",
          "description" : "Connections Promotion Execution Info",
          "items" : {
            "$ref" : "#/definitions/ArtifactPromotionResult"
          }
        },
        "resources" : {
          "type" : "array",
          "description" : "Resources Promotion Execution Info",
          "items" : {
            "$ref" : "#/definitions/ArtifactPromotionResult"
          }
        },
        "engines" : {
          "type" : "array",
          "description" : "Engines Promotion Execution Info",
          "items" : {
            "$ref" : "#/definitions/RuntimePromotionResult"
          }
        },
        "clusters" : {
          "type" : "array",
          "description" : "Clusters Promotion Execution Info",
          "items" : {
            "$ref" : "#/definitions/RuntimePromotionResult"
          }
        },
        "workspaceType" : {
          "type" : "string",
          "description" : "Workspace type"
        }
      }
    },
    "YarnStrategy" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Yarn strategy type",
          "enum" : [ "Fixed", "Dynamic" ]
        },
        "initialExecutors" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Initial number of executors (for Dynamic strategy)"
        },
        "minExecutors" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Min. number of executors (for Dynamic strategy)"
        },
        "maxExecutors" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Max. number of executors (for Dynamic strategy)"
        },
        "coresPerExecutor" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cores per executor"
        },
        "executorMemory" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Executor memory (in MB)"
        },
        "executorsNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of executors (for Fixed strategy)"
        }
      }
    }
  }
}
